import 'package:json_annotation/json_annotation.dart';
part 'schema.graphql.g.dart';

@JsonSerializable(explicitToJson: true)
class InputBooleanComparisonExp {
  InputBooleanComparisonExp(
      {this.$_eq,
      this.$_gt,
      this.$_gte,
      this.$_in,
      this.$_is_null,
      this.$_lt,
      this.$_lte,
      this.$_neq,
      this.$_nin});

  @override
  factory InputBooleanComparisonExp.fromJson(Map<String, dynamic> json) =>
      _$InputBooleanComparisonExpFromJson(json);

  @JsonKey(name: '_eq')
  final bool? $_eq;

  @JsonKey(name: '_gt')
  final bool? $_gt;

  @JsonKey(name: '_gte')
  final bool? $_gte;

  @JsonKey(name: '_in')
  final List<bool>? $_in;

  @JsonKey(name: '_is_null')
  final bool? $_is_null;

  @JsonKey(name: '_lt')
  final bool? $_lt;

  @JsonKey(name: '_lte')
  final bool? $_lte;

  @JsonKey(name: '_neq')
  final bool? $_neq;

  @JsonKey(name: '_nin')
  final List<bool>? $_nin;

  Map<String, dynamic> toJson() => _$InputBooleanComparisonExpToJson(this);
  int get hashCode {
    final l$$_eq = $_eq;
    final l$$_gt = $_gt;
    final l$$_gte = $_gte;
    final l$$_in = $_in;
    final l$$_is_null = $_is_null;
    final l$$_lt = $_lt;
    final l$$_lte = $_lte;
    final l$$_neq = $_neq;
    final l$$_nin = $_nin;
    return Object.hashAll([
      l$$_eq,
      l$$_gt,
      l$$_gte,
      l$$_in == null ? null : Object.hashAll(l$$_in.map((v) => v)),
      l$$_is_null,
      l$$_lt,
      l$$_lte,
      l$$_neq,
      l$$_nin == null ? null : Object.hashAll(l$$_nin.map((v) => v))
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputBooleanComparisonExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_eq = $_eq;
    final lOther$$_eq = other.$_eq;
    if (l$$_eq != lOther$$_eq) return false;
    final l$$_gt = $_gt;
    final lOther$$_gt = other.$_gt;
    if (l$$_gt != lOther$$_gt) return false;
    final l$$_gte = $_gte;
    final lOther$$_gte = other.$_gte;
    if (l$$_gte != lOther$$_gte) return false;
    final l$$_in = $_in;
    final lOther$$_in = other.$_in;
    if (l$$_in != null && lOther$$_in != null) {
      if (l$$_in.length != lOther$$_in.length) return false;
      for (int i = 0; i < l$$_in.length; i++) {
        final l$$_in$entry = l$$_in[i];
        final lOther$$_in$entry = lOther$$_in[i];
        if (l$$_in$entry != lOther$$_in$entry) return false;
      }
    } else if (l$$_in != lOther$$_in) {
      return false;
    }

    final l$$_is_null = $_is_null;
    final lOther$$_is_null = other.$_is_null;
    if (l$$_is_null != lOther$$_is_null) return false;
    final l$$_lt = $_lt;
    final lOther$$_lt = other.$_lt;
    if (l$$_lt != lOther$$_lt) return false;
    final l$$_lte = $_lte;
    final lOther$$_lte = other.$_lte;
    if (l$$_lte != lOther$$_lte) return false;
    final l$$_neq = $_neq;
    final lOther$$_neq = other.$_neq;
    if (l$$_neq != lOther$$_neq) return false;
    final l$$_nin = $_nin;
    final lOther$$_nin = other.$_nin;
    if (l$$_nin != null && lOther$$_nin != null) {
      if (l$$_nin.length != lOther$$_nin.length) return false;
      for (int i = 0; i < l$$_nin.length; i++) {
        final l$$_nin$entry = l$$_nin[i];
        final lOther$$_nin$entry = lOther$$_nin[i];
        if (l$$_nin$entry != lOther$$_nin$entry) return false;
      }
    } else if (l$$_nin != lOther$$_nin) {
      return false;
    }

    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputIntComparisonExp {
  InputIntComparisonExp(
      {this.$_eq,
      this.$_gt,
      this.$_gte,
      this.$_in,
      this.$_is_null,
      this.$_lt,
      this.$_lte,
      this.$_neq,
      this.$_nin});

  @override
  factory InputIntComparisonExp.fromJson(Map<String, dynamic> json) =>
      _$InputIntComparisonExpFromJson(json);

  @JsonKey(name: '_eq')
  final int? $_eq;

  @JsonKey(name: '_gt')
  final int? $_gt;

  @JsonKey(name: '_gte')
  final int? $_gte;

  @JsonKey(name: '_in')
  final List<int>? $_in;

  @JsonKey(name: '_is_null')
  final bool? $_is_null;

  @JsonKey(name: '_lt')
  final int? $_lt;

  @JsonKey(name: '_lte')
  final int? $_lte;

  @JsonKey(name: '_neq')
  final int? $_neq;

  @JsonKey(name: '_nin')
  final List<int>? $_nin;

  Map<String, dynamic> toJson() => _$InputIntComparisonExpToJson(this);
  int get hashCode {
    final l$$_eq = $_eq;
    final l$$_gt = $_gt;
    final l$$_gte = $_gte;
    final l$$_in = $_in;
    final l$$_is_null = $_is_null;
    final l$$_lt = $_lt;
    final l$$_lte = $_lte;
    final l$$_neq = $_neq;
    final l$$_nin = $_nin;
    return Object.hashAll([
      l$$_eq,
      l$$_gt,
      l$$_gte,
      l$$_in == null ? null : Object.hashAll(l$$_in.map((v) => v)),
      l$$_is_null,
      l$$_lt,
      l$$_lte,
      l$$_neq,
      l$$_nin == null ? null : Object.hashAll(l$$_nin.map((v) => v))
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputIntComparisonExp) || runtimeType != other.runtimeType)
      return false;
    final l$$_eq = $_eq;
    final lOther$$_eq = other.$_eq;
    if (l$$_eq != lOther$$_eq) return false;
    final l$$_gt = $_gt;
    final lOther$$_gt = other.$_gt;
    if (l$$_gt != lOther$$_gt) return false;
    final l$$_gte = $_gte;
    final lOther$$_gte = other.$_gte;
    if (l$$_gte != lOther$$_gte) return false;
    final l$$_in = $_in;
    final lOther$$_in = other.$_in;
    if (l$$_in != null && lOther$$_in != null) {
      if (l$$_in.length != lOther$$_in.length) return false;
      for (int i = 0; i < l$$_in.length; i++) {
        final l$$_in$entry = l$$_in[i];
        final lOther$$_in$entry = lOther$$_in[i];
        if (l$$_in$entry != lOther$$_in$entry) return false;
      }
    } else if (l$$_in != lOther$$_in) {
      return false;
    }

    final l$$_is_null = $_is_null;
    final lOther$$_is_null = other.$_is_null;
    if (l$$_is_null != lOther$$_is_null) return false;
    final l$$_lt = $_lt;
    final lOther$$_lt = other.$_lt;
    if (l$$_lt != lOther$$_lt) return false;
    final l$$_lte = $_lte;
    final lOther$$_lte = other.$_lte;
    if (l$$_lte != lOther$$_lte) return false;
    final l$$_neq = $_neq;
    final lOther$$_neq = other.$_neq;
    if (l$$_neq != lOther$$_neq) return false;
    final l$$_nin = $_nin;
    final lOther$$_nin = other.$_nin;
    if (l$$_nin != null && lOther$$_nin != null) {
      if (l$$_nin.length != lOther$$_nin.length) return false;
      for (int i = 0; i < l$$_nin.length; i++) {
        final l$$_nin$entry = l$$_nin[i];
        final lOther$$_nin$entry = lOther$$_nin[i];
        if (l$$_nin$entry != lOther$$_nin$entry) return false;
      }
    } else if (l$$_nin != lOther$$_nin) {
      return false;
    }

    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityAggregateOrderBy {
  InputpokemonV2AbilityAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2AbilityAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityAggregateOrderByFromJson(json);

  final InputpokemonV2AbilityAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2AbilityMaxOrderBy? max;

  final InputpokemonV2AbilityMinOrderBy? min;

  final InputpokemonV2AbilityStddevOrderBy? stddev;

  final InputpokemonV2AbilityStddevPopOrderBy? stddev_pop;

  final InputpokemonV2AbilityStddevSampOrderBy? stddev_samp;

  final InputpokemonV2AbilitySumOrderBy? sum;

  final InputpokemonV2AbilityVarPopOrderBy? var_pop;

  final InputpokemonV2AbilityVarSampOrderBy? var_samp;

  final InputpokemonV2AbilityVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityAvgOrderBy {
  InputpokemonV2AbilityAvgOrderBy({this.generation_id, this.id});

  @override
  factory InputpokemonV2AbilityAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityAvgOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    return Object.hashAll([l$generation_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityBoolExp {
  InputpokemonV2AbilityBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.generation_id,
      this.id,
      this.is_main_series,
      this.name,
      this.pokemon_v2_abilitychanges,
      this.pokemon_v2_abilityeffecttexts,
      this.pokemon_v2_abilityflavortexts,
      this.pokemon_v2_abilitynames,
      this.pokemon_v2_generation,
      this.pokemon_v2_pokemonabilities});

  @override
  factory InputpokemonV2AbilityBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2AbilityBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2AbilityBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2AbilityBoolExp>? $_or;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputBooleanComparisonExp? is_main_series;

  final InputStringComparisonExp? name;

  final InputpokemonV2AbilitychangeBoolExp? pokemon_v2_abilitychanges;

  final InputpokemonV2AbilityeffecttextBoolExp? pokemon_v2_abilityeffecttexts;

  final InputpokemonV2AbilityflavortextBoolExp? pokemon_v2_abilityflavortexts;

  final InputpokemonV2AbilitynameBoolExp? pokemon_v2_abilitynames;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2PokemonabilityBoolExp? pokemon_v2_pokemonabilities;

  Map<String, dynamic> toJson() => _$InputpokemonV2AbilityBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$is_main_series = is_main_series;
    final l$name = name;
    final l$pokemon_v2_abilitychanges = pokemon_v2_abilitychanges;
    final l$pokemon_v2_abilityeffecttexts = pokemon_v2_abilityeffecttexts;
    final l$pokemon_v2_abilityflavortexts = pokemon_v2_abilityflavortexts;
    final l$pokemon_v2_abilitynames = pokemon_v2_abilitynames;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_pokemonabilities = pokemon_v2_pokemonabilities;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$generation_id,
      l$id,
      l$is_main_series,
      l$name,
      l$pokemon_v2_abilitychanges,
      l$pokemon_v2_abilityeffecttexts,
      l$pokemon_v2_abilityflavortexts,
      l$pokemon_v2_abilitynames,
      l$pokemon_v2_generation,
      l$pokemon_v2_pokemonabilities
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_main_series = is_main_series;
    final lOther$is_main_series = other.is_main_series;
    if (l$is_main_series != lOther$is_main_series) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_abilitychanges = pokemon_v2_abilitychanges;
    final lOther$pokemon_v2_abilitychanges = other.pokemon_v2_abilitychanges;
    if (l$pokemon_v2_abilitychanges != lOther$pokemon_v2_abilitychanges)
      return false;
    final l$pokemon_v2_abilityeffecttexts = pokemon_v2_abilityeffecttexts;
    final lOther$pokemon_v2_abilityeffecttexts =
        other.pokemon_v2_abilityeffecttexts;
    if (l$pokemon_v2_abilityeffecttexts != lOther$pokemon_v2_abilityeffecttexts)
      return false;
    final l$pokemon_v2_abilityflavortexts = pokemon_v2_abilityflavortexts;
    final lOther$pokemon_v2_abilityflavortexts =
        other.pokemon_v2_abilityflavortexts;
    if (l$pokemon_v2_abilityflavortexts != lOther$pokemon_v2_abilityflavortexts)
      return false;
    final l$pokemon_v2_abilitynames = pokemon_v2_abilitynames;
    final lOther$pokemon_v2_abilitynames = other.pokemon_v2_abilitynames;
    if (l$pokemon_v2_abilitynames != lOther$pokemon_v2_abilitynames)
      return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_pokemonabilities = pokemon_v2_pokemonabilities;
    final lOther$pokemon_v2_pokemonabilities =
        other.pokemon_v2_pokemonabilities;
    if (l$pokemon_v2_pokemonabilities != lOther$pokemon_v2_pokemonabilities)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityMaxOrderBy {
  InputpokemonV2AbilityMaxOrderBy({this.generation_id, this.id, this.name});

  @override
  factory InputpokemonV2AbilityMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityMaxOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$name = name;
    return Object.hashAll([l$generation_id, l$id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityMinOrderBy {
  InputpokemonV2AbilityMinOrderBy({this.generation_id, this.id, this.name});

  @override
  factory InputpokemonV2AbilityMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityMinOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$name = name;
    return Object.hashAll([l$generation_id, l$id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityOrderBy {
  InputpokemonV2AbilityOrderBy(
      {this.generation_id,
      this.id,
      this.is_main_series,
      this.name,
      this.pokemon_v2_abilitychanges_aggregate,
      this.pokemon_v2_abilityeffecttexts_aggregate,
      this.pokemon_v2_abilityflavortexts_aggregate,
      this.pokemon_v2_abilitynames_aggregate,
      this.pokemon_v2_generation,
      this.pokemon_v2_pokemonabilities_aggregate});

  @override
  factory InputpokemonV2AbilityOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_main_series;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2AbilitychangeAggregateOrderBy?
      pokemon_v2_abilitychanges_aggregate;

  final InputpokemonV2AbilityeffecttextAggregateOrderBy?
      pokemon_v2_abilityeffecttexts_aggregate;

  final InputpokemonV2AbilityflavortextAggregateOrderBy?
      pokemon_v2_abilityflavortexts_aggregate;

  final InputpokemonV2AbilitynameAggregateOrderBy?
      pokemon_v2_abilitynames_aggregate;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2PokemonabilityAggregateOrderBy?
      pokemon_v2_pokemonabilities_aggregate;

  Map<String, dynamic> toJson() => _$InputpokemonV2AbilityOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$is_main_series = is_main_series;
    final l$name = name;
    final l$pokemon_v2_abilitychanges_aggregate =
        pokemon_v2_abilitychanges_aggregate;
    final l$pokemon_v2_abilityeffecttexts_aggregate =
        pokemon_v2_abilityeffecttexts_aggregate;
    final l$pokemon_v2_abilityflavortexts_aggregate =
        pokemon_v2_abilityflavortexts_aggregate;
    final l$pokemon_v2_abilitynames_aggregate =
        pokemon_v2_abilitynames_aggregate;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_pokemonabilities_aggregate =
        pokemon_v2_pokemonabilities_aggregate;
    return Object.hashAll([
      l$generation_id,
      l$id,
      l$is_main_series,
      l$name,
      l$pokemon_v2_abilitychanges_aggregate,
      l$pokemon_v2_abilityeffecttexts_aggregate,
      l$pokemon_v2_abilityflavortexts_aggregate,
      l$pokemon_v2_abilitynames_aggregate,
      l$pokemon_v2_generation,
      l$pokemon_v2_pokemonabilities_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_main_series = is_main_series;
    final lOther$is_main_series = other.is_main_series;
    if (l$is_main_series != lOther$is_main_series) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_abilitychanges_aggregate =
        pokemon_v2_abilitychanges_aggregate;
    final lOther$pokemon_v2_abilitychanges_aggregate =
        other.pokemon_v2_abilitychanges_aggregate;
    if (l$pokemon_v2_abilitychanges_aggregate !=
        lOther$pokemon_v2_abilitychanges_aggregate) return false;
    final l$pokemon_v2_abilityeffecttexts_aggregate =
        pokemon_v2_abilityeffecttexts_aggregate;
    final lOther$pokemon_v2_abilityeffecttexts_aggregate =
        other.pokemon_v2_abilityeffecttexts_aggregate;
    if (l$pokemon_v2_abilityeffecttexts_aggregate !=
        lOther$pokemon_v2_abilityeffecttexts_aggregate) return false;
    final l$pokemon_v2_abilityflavortexts_aggregate =
        pokemon_v2_abilityflavortexts_aggregate;
    final lOther$pokemon_v2_abilityflavortexts_aggregate =
        other.pokemon_v2_abilityflavortexts_aggregate;
    if (l$pokemon_v2_abilityflavortexts_aggregate !=
        lOther$pokemon_v2_abilityflavortexts_aggregate) return false;
    final l$pokemon_v2_abilitynames_aggregate =
        pokemon_v2_abilitynames_aggregate;
    final lOther$pokemon_v2_abilitynames_aggregate =
        other.pokemon_v2_abilitynames_aggregate;
    if (l$pokemon_v2_abilitynames_aggregate !=
        lOther$pokemon_v2_abilitynames_aggregate) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_pokemonabilities_aggregate =
        pokemon_v2_pokemonabilities_aggregate;
    final lOther$pokemon_v2_pokemonabilities_aggregate =
        other.pokemon_v2_pokemonabilities_aggregate;
    if (l$pokemon_v2_pokemonabilities_aggregate !=
        lOther$pokemon_v2_pokemonabilities_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityStddevOrderBy {
  InputpokemonV2AbilityStddevOrderBy({this.generation_id, this.id});

  @override
  factory InputpokemonV2AbilityStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityStddevOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    return Object.hashAll([l$generation_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityStddevPopOrderBy {
  InputpokemonV2AbilityStddevPopOrderBy({this.generation_id, this.id});

  @override
  factory InputpokemonV2AbilityStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityStddevPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    return Object.hashAll([l$generation_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityStddevSampOrderBy {
  InputpokemonV2AbilityStddevSampOrderBy({this.generation_id, this.id});

  @override
  factory InputpokemonV2AbilityStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityStddevSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    return Object.hashAll([l$generation_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitySumOrderBy {
  InputpokemonV2AbilitySumOrderBy({this.generation_id, this.id});

  @override
  factory InputpokemonV2AbilitySumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitySumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitySumOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    return Object.hashAll([l$generation_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitySumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityVarPopOrderBy {
  InputpokemonV2AbilityVarPopOrderBy({this.generation_id, this.id});

  @override
  factory InputpokemonV2AbilityVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityVarPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    return Object.hashAll([l$generation_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityVarSampOrderBy {
  InputpokemonV2AbilityVarSampOrderBy({this.generation_id, this.id});

  @override
  factory InputpokemonV2AbilityVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityVarSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    return Object.hashAll([l$generation_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityVarianceOrderBy {
  InputpokemonV2AbilityVarianceOrderBy({this.generation_id, this.id});

  @override
  factory InputpokemonV2AbilityVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityVarianceOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    return Object.hashAll([l$generation_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeAggregateOrderBy {
  InputpokemonV2AbilitychangeAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2AbilitychangeAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeAggregateOrderByFromJson(json);

  final InputpokemonV2AbilitychangeAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2AbilitychangeMaxOrderBy? max;

  final InputpokemonV2AbilitychangeMinOrderBy? min;

  final InputpokemonV2AbilitychangeStddevOrderBy? stddev;

  final InputpokemonV2AbilitychangeStddevPopOrderBy? stddev_pop;

  final InputpokemonV2AbilitychangeStddevSampOrderBy? stddev_samp;

  final InputpokemonV2AbilitychangeSumOrderBy? sum;

  final InputpokemonV2AbilitychangeVarPopOrderBy? var_pop;

  final InputpokemonV2AbilitychangeVarSampOrderBy? var_samp;

  final InputpokemonV2AbilitychangeVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeAvgOrderBy {
  InputpokemonV2AbilitychangeAvgOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeAvgOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeBoolExp {
  InputpokemonV2AbilitychangeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.ability_id,
      this.id,
      this.pokemon_v2_ability,
      this.pokemon_v2_abilitychangeeffecttexts,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2AbilitychangeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2AbilitychangeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2AbilitychangeBoolExp>? $_or;

  final InputIntComparisonExp? ability_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2AbilityBoolExp? pokemon_v2_ability;

  final InputpokemonV2AbilitychangeeffecttextBoolExp?
      pokemon_v2_abilitychangeeffecttexts;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_abilitychangeeffecttexts =
        pokemon_v2_abilitychangeeffecttexts;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$ability_id,
      l$id,
      l$pokemon_v2_ability,
      l$pokemon_v2_abilitychangeeffecttexts,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_abilitychangeeffecttexts =
        pokemon_v2_abilitychangeeffecttexts;
    final lOther$pokemon_v2_abilitychangeeffecttexts =
        other.pokemon_v2_abilitychangeeffecttexts;
    if (l$pokemon_v2_abilitychangeeffecttexts !=
        lOther$pokemon_v2_abilitychangeeffecttexts) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeMaxOrderBy {
  InputpokemonV2AbilitychangeMaxOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeMaxOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeMinOrderBy {
  InputpokemonV2AbilitychangeMinOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeMinOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeOrderBy {
  InputpokemonV2AbilitychangeOrderBy(
      {this.ability_id,
      this.id,
      this.pokemon_v2_ability,
      this.pokemon_v2_abilitychangeeffecttexts_aggregate,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2AbilityOrderBy? pokemon_v2_ability;

  final InputpokemonV2AbilitychangeeffecttextAggregateOrderBy?
      pokemon_v2_abilitychangeeffecttexts_aggregate;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_abilitychangeeffecttexts_aggregate =
        pokemon_v2_abilitychangeeffecttexts_aggregate;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$ability_id,
      l$id,
      l$pokemon_v2_ability,
      l$pokemon_v2_abilitychangeeffecttexts_aggregate,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_abilitychangeeffecttexts_aggregate =
        pokemon_v2_abilitychangeeffecttexts_aggregate;
    final lOther$pokemon_v2_abilitychangeeffecttexts_aggregate =
        other.pokemon_v2_abilitychangeeffecttexts_aggregate;
    if (l$pokemon_v2_abilitychangeeffecttexts_aggregate !=
        lOther$pokemon_v2_abilitychangeeffecttexts_aggregate) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeStddevOrderBy {
  InputpokemonV2AbilitychangeStddevOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeStddevOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeStddevPopOrderBy {
  InputpokemonV2AbilitychangeStddevPopOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeStddevPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeStddevSampOrderBy {
  InputpokemonV2AbilitychangeStddevSampOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeStddevSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeSumOrderBy {
  InputpokemonV2AbilitychangeSumOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeSumOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeVarPopOrderBy {
  InputpokemonV2AbilitychangeVarPopOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeVarPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeVarSampOrderBy {
  InputpokemonV2AbilitychangeVarSampOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeVarSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeVarianceOrderBy {
  InputpokemonV2AbilitychangeVarianceOrderBy(
      {this.ability_id, this.id, this.version_group_id});

  @override
  factory InputpokemonV2AbilitychangeVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeVarianceOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$ability_id, l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextAggregateOrderBy {
  InputpokemonV2AbilitychangeeffecttextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2AbilitychangeeffecttextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextAggregateOrderByFromJson(json);

  final InputpokemonV2AbilitychangeeffecttextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2AbilitychangeeffecttextMaxOrderBy? max;

  final InputpokemonV2AbilitychangeeffecttextMinOrderBy? min;

  final InputpokemonV2AbilitychangeeffecttextStddevOrderBy? stddev;

  final InputpokemonV2AbilitychangeeffecttextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2AbilitychangeeffecttextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2AbilitychangeeffecttextSumOrderBy? sum;

  final InputpokemonV2AbilitychangeeffecttextVarPopOrderBy? var_pop;

  final InputpokemonV2AbilitychangeeffecttextVarSampOrderBy? var_samp;

  final InputpokemonV2AbilitychangeeffecttextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextAvgOrderBy {
  InputpokemonV2AbilitychangeeffecttextAvgOrderBy(
      {this.ability_change_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextAvgOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextBoolExp {
  InputpokemonV2AbilitychangeeffecttextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.ability_change_id,
      this.effect,
      this.id,
      this.language_id,
      this.pokemon_v2_abilitychange,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2AbilitychangeeffecttextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2AbilitychangeeffecttextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2AbilitychangeeffecttextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2AbilitychangeeffecttextBoolExp>? $_or;

  final InputIntComparisonExp? ability_change_id;

  final InputStringComparisonExp? effect;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2AbilitychangeBoolExp? pokemon_v2_abilitychange;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$ability_change_id = ability_change_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_abilitychange = pokemon_v2_abilitychange;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$ability_change_id,
      l$effect,
      l$id,
      l$language_id,
      l$pokemon_v2_abilitychange,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_abilitychange = pokemon_v2_abilitychange;
    final lOther$pokemon_v2_abilitychange = other.pokemon_v2_abilitychange;
    if (l$pokemon_v2_abilitychange != lOther$pokemon_v2_abilitychange)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextMaxOrderBy {
  InputpokemonV2AbilitychangeeffecttextMaxOrderBy(
      {this.ability_change_id, this.effect, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextMaxOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$effect, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextMinOrderBy {
  InputpokemonV2AbilitychangeeffecttextMinOrderBy(
      {this.ability_change_id, this.effect, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextMinOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$effect, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextOrderBy {
  InputpokemonV2AbilitychangeeffecttextOrderBy(
      {this.ability_change_id,
      this.effect,
      this.id,
      this.language_id,
      this.pokemon_v2_abilitychange,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2AbilitychangeeffecttextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2AbilitychangeOrderBy? pokemon_v2_abilitychange;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_abilitychange = pokemon_v2_abilitychange;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$ability_change_id,
      l$effect,
      l$id,
      l$language_id,
      l$pokemon_v2_abilitychange,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_abilitychange = pokemon_v2_abilitychange;
    final lOther$pokemon_v2_abilitychange = other.pokemon_v2_abilitychange;
    if (l$pokemon_v2_abilitychange != lOther$pokemon_v2_abilitychange)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextStddevOrderBy {
  InputpokemonV2AbilitychangeeffecttextStddevOrderBy(
      {this.ability_change_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextStddevOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextStddevPopOrderBy {
  InputpokemonV2AbilitychangeeffecttextStddevPopOrderBy(
      {this.ability_change_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextStddevSampOrderBy {
  InputpokemonV2AbilitychangeeffecttextStddevSampOrderBy(
      {this.ability_change_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextSumOrderBy {
  InputpokemonV2AbilitychangeeffecttextSumOrderBy(
      {this.ability_change_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextSumOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextVarPopOrderBy {
  InputpokemonV2AbilitychangeeffecttextVarPopOrderBy(
      {this.ability_change_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextVarPopOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextVarSampOrderBy {
  InputpokemonV2AbilitychangeeffecttextVarSampOrderBy(
      {this.ability_change_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextVarSampOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitychangeeffecttextVarianceOrderBy {
  InputpokemonV2AbilitychangeeffecttextVarianceOrderBy(
      {this.ability_change_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitychangeeffecttextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitychangeeffecttextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_change_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitychangeeffecttextVarianceOrderByToJson(this);
  int get hashCode {
    final l$ability_change_id = ability_change_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_change_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitychangeeffecttextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_change_id = ability_change_id;
    final lOther$ability_change_id = other.ability_change_id;
    if (l$ability_change_id != lOther$ability_change_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextAggregateOrderBy {
  InputpokemonV2AbilityeffecttextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2AbilityeffecttextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextAggregateOrderByFromJson(json);

  final InputpokemonV2AbilityeffecttextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2AbilityeffecttextMaxOrderBy? max;

  final InputpokemonV2AbilityeffecttextMinOrderBy? min;

  final InputpokemonV2AbilityeffecttextStddevOrderBy? stddev;

  final InputpokemonV2AbilityeffecttextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2AbilityeffecttextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2AbilityeffecttextSumOrderBy? sum;

  final InputpokemonV2AbilityeffecttextVarPopOrderBy? var_pop;

  final InputpokemonV2AbilityeffecttextVarSampOrderBy? var_samp;

  final InputpokemonV2AbilityeffecttextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextAvgOrderBy {
  InputpokemonV2AbilityeffecttextAvgOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilityeffecttextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextAvgOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextBoolExp {
  InputpokemonV2AbilityeffecttextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.ability_id,
      this.effect,
      this.id,
      this.language_id,
      this.pokemon_v2_ability,
      this.pokemon_v2_language,
      this.short_effect});

  @override
  factory InputpokemonV2AbilityeffecttextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2AbilityeffecttextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2AbilityeffecttextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2AbilityeffecttextBoolExp>? $_or;

  final InputIntComparisonExp? ability_id;

  final InputStringComparisonExp? effect;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2AbilityBoolExp? pokemon_v2_ability;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputStringComparisonExp? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$ability_id = ability_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$short_effect = short_effect;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$ability_id,
      l$effect,
      l$id,
      l$language_id,
      l$pokemon_v2_ability,
      l$pokemon_v2_language,
      l$short_effect
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextMaxOrderBy {
  InputpokemonV2AbilityeffecttextMaxOrderBy(
      {this.ability_id,
      this.effect,
      this.id,
      this.language_id,
      this.short_effect});

  @override
  factory InputpokemonV2AbilityeffecttextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextMaxOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$short_effect = short_effect;
    return Object.hashAll(
        [l$ability_id, l$effect, l$id, l$language_id, l$short_effect]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextMinOrderBy {
  InputpokemonV2AbilityeffecttextMinOrderBy(
      {this.ability_id,
      this.effect,
      this.id,
      this.language_id,
      this.short_effect});

  @override
  factory InputpokemonV2AbilityeffecttextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextMinOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$short_effect = short_effect;
    return Object.hashAll(
        [l$ability_id, l$effect, l$id, l$language_id, l$short_effect]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextOrderBy {
  InputpokemonV2AbilityeffecttextOrderBy(
      {this.ability_id,
      this.effect,
      this.id,
      this.language_id,
      this.pokemon_v2_ability,
      this.pokemon_v2_language,
      this.short_effect});

  @override
  factory InputpokemonV2AbilityeffecttextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2AbilityOrderBy? pokemon_v2_ability;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$short_effect = short_effect;
    return Object.hashAll([
      l$ability_id,
      l$effect,
      l$id,
      l$language_id,
      l$pokemon_v2_ability,
      l$pokemon_v2_language,
      l$short_effect
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextStddevOrderBy {
  InputpokemonV2AbilityeffecttextStddevOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilityeffecttextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextStddevOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextStddevPopOrderBy {
  InputpokemonV2AbilityeffecttextStddevPopOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilityeffecttextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextStddevSampOrderBy {
  InputpokemonV2AbilityeffecttextStddevSampOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilityeffecttextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextSumOrderBy {
  InputpokemonV2AbilityeffecttextSumOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilityeffecttextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextSumOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextVarPopOrderBy {
  InputpokemonV2AbilityeffecttextVarPopOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilityeffecttextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextVarPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextVarSampOrderBy {
  InputpokemonV2AbilityeffecttextVarSampOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilityeffecttextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextVarSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityeffecttextVarianceOrderBy {
  InputpokemonV2AbilityeffecttextVarianceOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilityeffecttextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityeffecttextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityeffecttextVarianceOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityeffecttextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextAggregateOrderBy {
  InputpokemonV2AbilityflavortextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2AbilityflavortextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextAggregateOrderByFromJson(json);

  final InputpokemonV2AbilityflavortextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2AbilityflavortextMaxOrderBy? max;

  final InputpokemonV2AbilityflavortextMinOrderBy? min;

  final InputpokemonV2AbilityflavortextStddevOrderBy? stddev;

  final InputpokemonV2AbilityflavortextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2AbilityflavortextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2AbilityflavortextSumOrderBy? sum;

  final InputpokemonV2AbilityflavortextVarPopOrderBy? var_pop;

  final InputpokemonV2AbilityflavortextVarSampOrderBy? var_samp;

  final InputpokemonV2AbilityflavortextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextAvgOrderBy {
  InputpokemonV2AbilityflavortextAvgOrderBy(
      {this.ability_id, this.id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextAvgOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextBoolExp {
  InputpokemonV2AbilityflavortextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.ability_id,
      this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_v2_ability,
      this.pokemon_v2_language,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2AbilityflavortextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2AbilityflavortextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2AbilityflavortextBoolExp>? $_or;

  final InputIntComparisonExp? ability_id;

  final InputStringComparisonExp? flavor_text;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2AbilityBoolExp? pokemon_v2_ability;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$ability_id = ability_id;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$ability_id,
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_v2_ability,
      l$pokemon_v2_language,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextMaxOrderBy {
  InputpokemonV2AbilityflavortextMaxOrderBy(
      {this.ability_id,
      this.flavor_text,
      this.id,
      this.language_id,
      this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextMaxOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$flavor_text, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextMinOrderBy {
  InputpokemonV2AbilityflavortextMinOrderBy(
      {this.ability_id,
      this.flavor_text,
      this.id,
      this.language_id,
      this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextMinOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$flavor_text, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextOrderBy {
  InputpokemonV2AbilityflavortextOrderBy(
      {this.ability_id,
      this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_v2_ability,
      this.pokemon_v2_language,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2AbilityOrderBy? pokemon_v2_ability;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$ability_id,
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_v2_ability,
      l$pokemon_v2_language,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextStddevOrderBy {
  InputpokemonV2AbilityflavortextStddevOrderBy(
      {this.ability_id, this.id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextStddevOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextStddevPopOrderBy {
  InputpokemonV2AbilityflavortextStddevPopOrderBy(
      {this.ability_id, this.id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextStddevSampOrderBy {
  InputpokemonV2AbilityflavortextStddevSampOrderBy(
      {this.ability_id, this.id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextSumOrderBy {
  InputpokemonV2AbilityflavortextSumOrderBy(
      {this.ability_id, this.id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextSumOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextVarPopOrderBy {
  InputpokemonV2AbilityflavortextVarPopOrderBy(
      {this.ability_id, this.id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextVarPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextVarSampOrderBy {
  InputpokemonV2AbilityflavortextVarSampOrderBy(
      {this.ability_id, this.id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextVarSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilityflavortextVarianceOrderBy {
  InputpokemonV2AbilityflavortextVarianceOrderBy(
      {this.ability_id, this.id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2AbilityflavortextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilityflavortextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilityflavortextVarianceOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$ability_id, l$id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilityflavortextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameAggregateOrderBy {
  InputpokemonV2AbilitynameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2AbilitynameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameAggregateOrderByFromJson(json);

  final InputpokemonV2AbilitynameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2AbilitynameMaxOrderBy? max;

  final InputpokemonV2AbilitynameMinOrderBy? min;

  final InputpokemonV2AbilitynameStddevOrderBy? stddev;

  final InputpokemonV2AbilitynameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2AbilitynameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2AbilitynameSumOrderBy? sum;

  final InputpokemonV2AbilitynameVarPopOrderBy? var_pop;

  final InputpokemonV2AbilitynameVarSampOrderBy? var_samp;

  final InputpokemonV2AbilitynameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameAvgOrderBy {
  InputpokemonV2AbilitynameAvgOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitynameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameAvgOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameBoolExp {
  InputpokemonV2AbilitynameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.ability_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_ability,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2AbilitynameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2AbilitynameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2AbilitynameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2AbilitynameBoolExp>? $_or;

  final InputIntComparisonExp? ability_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2AbilityBoolExp? pokemon_v2_ability;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$ability_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_ability,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameMaxOrderBy {
  InputpokemonV2AbilitynameMaxOrderBy(
      {this.ability_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2AbilitynameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameMaxOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$ability_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameMinOrderBy {
  InputpokemonV2AbilitynameMinOrderBy(
      {this.ability_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2AbilitynameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameMinOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$ability_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameOrderBy {
  InputpokemonV2AbilitynameOrderBy(
      {this.ability_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_ability,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2AbilitynameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2AbilityOrderBy? pokemon_v2_ability;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$ability_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_ability,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameStddevOrderBy {
  InputpokemonV2AbilitynameStddevOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitynameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameStddevOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameStddevPopOrderBy {
  InputpokemonV2AbilitynameStddevPopOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitynameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameStddevSampOrderBy {
  InputpokemonV2AbilitynameStddevSampOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitynameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameSumOrderBy {
  InputpokemonV2AbilitynameSumOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitynameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameSumOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameVarPopOrderBy {
  InputpokemonV2AbilitynameVarPopOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitynameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameVarPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameVarSampOrderBy {
  InputpokemonV2AbilitynameVarSampOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitynameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameVarSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2AbilitynameVarianceOrderBy {
  InputpokemonV2AbilitynameVarianceOrderBy(
      {this.ability_id, this.id, this.language_id});

  @override
  factory InputpokemonV2AbilitynameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2AbilitynameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2AbilitynameVarianceOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$ability_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2AbilitynameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryAggregateOrderBy {
  InputpokemonV2BerryAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2BerryAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryAggregateOrderByFromJson(json);

  final InputpokemonV2BerryAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2BerryMaxOrderBy? max;

  final InputpokemonV2BerryMinOrderBy? min;

  final InputpokemonV2BerryStddevOrderBy? stddev;

  final InputpokemonV2BerryStddevPopOrderBy? stddev_pop;

  final InputpokemonV2BerryStddevSampOrderBy? stddev_samp;

  final InputpokemonV2BerrySumOrderBy? sum;

  final InputpokemonV2BerryVarPopOrderBy? var_pop;

  final InputpokemonV2BerryVarSampOrderBy? var_samp;

  final InputpokemonV2BerryVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryAvgOrderBy {
  InputpokemonV2BerryAvgOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2BerryAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() => _$InputpokemonV2BerryAvgOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryBoolExp {
  InputpokemonV2BerryBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.name,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.pokemon_v2_berryfirmness,
      this.pokemon_v2_berryflavormaps,
      this.pokemon_v2_item,
      this.pokemon_v2_type,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2BerryBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2BerryBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2BerryBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2BerryBoolExp>? $_or;

  final InputIntComparisonExp? berry_firmness_id;

  final InputIntComparisonExp? growth_time;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_id;

  final InputIntComparisonExp? max_harvest;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? natural_gift_power;

  final InputIntComparisonExp? natural_gift_type_id;

  final InputpokemonV2BerryfirmnessBoolExp? pokemon_v2_berryfirmness;

  final InputpokemonV2BerryflavormapBoolExp? pokemon_v2_berryflavormaps;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? size;

  final InputIntComparisonExp? smoothness;

  final InputIntComparisonExp? soil_dryness;

  Map<String, dynamic> toJson() => _$InputpokemonV2BerryBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$name = name;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$pokemon_v2_berryfirmness = pokemon_v2_berryfirmness;
    final l$pokemon_v2_berryflavormaps = pokemon_v2_berryflavormaps;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$name,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$pokemon_v2_berryfirmness,
      l$pokemon_v2_berryflavormaps,
      l$pokemon_v2_item,
      l$pokemon_v2_type,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$pokemon_v2_berryfirmness = pokemon_v2_berryfirmness;
    final lOther$pokemon_v2_berryfirmness = other.pokemon_v2_berryfirmness;
    if (l$pokemon_v2_berryfirmness != lOther$pokemon_v2_berryfirmness)
      return false;
    final l$pokemon_v2_berryflavormaps = pokemon_v2_berryflavormaps;
    final lOther$pokemon_v2_berryflavormaps = other.pokemon_v2_berryflavormaps;
    if (l$pokemon_v2_berryflavormaps != lOther$pokemon_v2_berryflavormaps)
      return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryMaxOrderBy {
  InputpokemonV2BerryMaxOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.name,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2BerryMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() => _$InputpokemonV2BerryMaxOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$name = name;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$name,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryMinOrderBy {
  InputpokemonV2BerryMinOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.name,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2BerryMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() => _$InputpokemonV2BerryMinOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$name = name;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$name,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryOrderBy {
  InputpokemonV2BerryOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.name,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.pokemon_v2_berryfirmness,
      this.pokemon_v2_berryflavormaps_aggregate,
      this.pokemon_v2_item,
      this.pokemon_v2_type,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2BerryOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  final InputpokemonV2BerryfirmnessOrderBy? pokemon_v2_berryfirmness;

  final InputpokemonV2BerryflavormapAggregateOrderBy?
      pokemon_v2_berryflavormaps_aggregate;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() => _$InputpokemonV2BerryOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$name = name;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$pokemon_v2_berryfirmness = pokemon_v2_berryfirmness;
    final l$pokemon_v2_berryflavormaps_aggregate =
        pokemon_v2_berryflavormaps_aggregate;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$name,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$pokemon_v2_berryfirmness,
      l$pokemon_v2_berryflavormaps_aggregate,
      l$pokemon_v2_item,
      l$pokemon_v2_type,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$pokemon_v2_berryfirmness = pokemon_v2_berryfirmness;
    final lOther$pokemon_v2_berryfirmness = other.pokemon_v2_berryfirmness;
    if (l$pokemon_v2_berryfirmness != lOther$pokemon_v2_berryfirmness)
      return false;
    final l$pokemon_v2_berryflavormaps_aggregate =
        pokemon_v2_berryflavormaps_aggregate;
    final lOther$pokemon_v2_berryflavormaps_aggregate =
        other.pokemon_v2_berryflavormaps_aggregate;
    if (l$pokemon_v2_berryflavormaps_aggregate !=
        lOther$pokemon_v2_berryflavormaps_aggregate) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryStddevOrderBy {
  InputpokemonV2BerryStddevOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryStddevOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryStddevPopOrderBy {
  InputpokemonV2BerryStddevPopOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryStddevPopOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryStddevSampOrderBy {
  InputpokemonV2BerryStddevSampOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryStddevSampOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerrySumOrderBy {
  InputpokemonV2BerrySumOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerrySumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2BerrySumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() => _$InputpokemonV2BerrySumOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerrySumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryVarPopOrderBy {
  InputpokemonV2BerryVarPopOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryVarPopOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryVarSampOrderBy {
  InputpokemonV2BerryVarSampOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryVarSampOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryVarianceOrderBy {
  InputpokemonV2BerryVarianceOrderBy(
      {this.berry_firmness_id,
      this.growth_time,
      this.id,
      this.item_id,
      this.max_harvest,
      this.natural_gift_power,
      this.natural_gift_type_id,
      this.size,
      this.smoothness,
      this.soil_dryness});

  @override
  factory InputpokemonV2BerryVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_time;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_harvest;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? natural_gift_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? size;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? smoothness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? soil_dryness;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryVarianceOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$growth_time = growth_time;
    final l$id = id;
    final l$item_id = item_id;
    final l$max_harvest = max_harvest;
    final l$natural_gift_power = natural_gift_power;
    final l$natural_gift_type_id = natural_gift_type_id;
    final l$size = size;
    final l$smoothness = smoothness;
    final l$soil_dryness = soil_dryness;
    return Object.hashAll([
      l$berry_firmness_id,
      l$growth_time,
      l$id,
      l$item_id,
      l$max_harvest,
      l$natural_gift_power,
      l$natural_gift_type_id,
      l$size,
      l$smoothness,
      l$soil_dryness
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$growth_time = growth_time;
    final lOther$growth_time = other.growth_time;
    if (l$growth_time != lOther$growth_time) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$max_harvest = max_harvest;
    final lOther$max_harvest = other.max_harvest;
    if (l$max_harvest != lOther$max_harvest) return false;
    final l$natural_gift_power = natural_gift_power;
    final lOther$natural_gift_power = other.natural_gift_power;
    if (l$natural_gift_power != lOther$natural_gift_power) return false;
    final l$natural_gift_type_id = natural_gift_type_id;
    final lOther$natural_gift_type_id = other.natural_gift_type_id;
    if (l$natural_gift_type_id != lOther$natural_gift_type_id) return false;
    final l$size = size;
    final lOther$size = other.size;
    if (l$size != lOther$size) return false;
    final l$smoothness = smoothness;
    final lOther$smoothness = other.smoothness;
    if (l$smoothness != lOther$smoothness) return false;
    final l$soil_dryness = soil_dryness;
    final lOther$soil_dryness = other.soil_dryness;
    if (l$soil_dryness != lOther$soil_dryness) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessBoolExp {
  InputpokemonV2BerryfirmnessBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_berries,
      this.pokemon_v2_berryfirmnessnames});

  @override
  factory InputpokemonV2BerryfirmnessBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2BerryfirmnessBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2BerryfirmnessBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2BerryfirmnessBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2BerryBoolExp? pokemon_v2_berries;

  final InputpokemonV2BerryfirmnessnameBoolExp? pokemon_v2_berryfirmnessnames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_berries = pokemon_v2_berries;
    final l$pokemon_v2_berryfirmnessnames = pokemon_v2_berryfirmnessnames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_berries,
      l$pokemon_v2_berryfirmnessnames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_berries = pokemon_v2_berries;
    final lOther$pokemon_v2_berries = other.pokemon_v2_berries;
    if (l$pokemon_v2_berries != lOther$pokemon_v2_berries) return false;
    final l$pokemon_v2_berryfirmnessnames = pokemon_v2_berryfirmnessnames;
    final lOther$pokemon_v2_berryfirmnessnames =
        other.pokemon_v2_berryfirmnessnames;
    if (l$pokemon_v2_berryfirmnessnames != lOther$pokemon_v2_berryfirmnessnames)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessOrderBy {
  InputpokemonV2BerryfirmnessOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_berries_aggregate,
      this.pokemon_v2_berryfirmnessnames_aggregate});

  @override
  factory InputpokemonV2BerryfirmnessOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2BerryAggregateOrderBy? pokemon_v2_berries_aggregate;

  final InputpokemonV2BerryfirmnessnameAggregateOrderBy?
      pokemon_v2_berryfirmnessnames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_berries_aggregate = pokemon_v2_berries_aggregate;
    final l$pokemon_v2_berryfirmnessnames_aggregate =
        pokemon_v2_berryfirmnessnames_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_berries_aggregate,
      l$pokemon_v2_berryfirmnessnames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_berries_aggregate = pokemon_v2_berries_aggregate;
    final lOther$pokemon_v2_berries_aggregate =
        other.pokemon_v2_berries_aggregate;
    if (l$pokemon_v2_berries_aggregate != lOther$pokemon_v2_berries_aggregate)
      return false;
    final l$pokemon_v2_berryfirmnessnames_aggregate =
        pokemon_v2_berryfirmnessnames_aggregate;
    final lOther$pokemon_v2_berryfirmnessnames_aggregate =
        other.pokemon_v2_berryfirmnessnames_aggregate;
    if (l$pokemon_v2_berryfirmnessnames_aggregate !=
        lOther$pokemon_v2_berryfirmnessnames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameAggregateOrderBy {
  InputpokemonV2BerryfirmnessnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2BerryfirmnessnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameAggregateOrderByFromJson(json);

  final InputpokemonV2BerryfirmnessnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2BerryfirmnessnameMaxOrderBy? max;

  final InputpokemonV2BerryfirmnessnameMinOrderBy? min;

  final InputpokemonV2BerryfirmnessnameStddevOrderBy? stddev;

  final InputpokemonV2BerryfirmnessnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2BerryfirmnessnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2BerryfirmnessnameSumOrderBy? sum;

  final InputpokemonV2BerryfirmnessnameVarPopOrderBy? var_pop;

  final InputpokemonV2BerryfirmnessnameVarSampOrderBy? var_samp;

  final InputpokemonV2BerryfirmnessnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameAvgOrderBy {
  InputpokemonV2BerryfirmnessnameAvgOrderBy(
      {this.berry_firmness_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryfirmnessnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameAvgOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameBoolExp {
  InputpokemonV2BerryfirmnessnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.berry_firmness_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_berryfirmness,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2BerryfirmnessnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2BerryfirmnessnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2BerryfirmnessnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2BerryfirmnessnameBoolExp>? $_or;

  final InputIntComparisonExp? berry_firmness_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2BerryfirmnessBoolExp? pokemon_v2_berryfirmness;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_berryfirmness = pokemon_v2_berryfirmness;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$berry_firmness_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_berryfirmness,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_berryfirmness = pokemon_v2_berryfirmness;
    final lOther$pokemon_v2_berryfirmness = other.pokemon_v2_berryfirmness;
    if (l$pokemon_v2_berryfirmness != lOther$pokemon_v2_berryfirmness)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameMaxOrderBy {
  InputpokemonV2BerryfirmnessnameMaxOrderBy(
      {this.berry_firmness_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2BerryfirmnessnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameMaxOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameMinOrderBy {
  InputpokemonV2BerryfirmnessnameMinOrderBy(
      {this.berry_firmness_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2BerryfirmnessnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameMinOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameOrderBy {
  InputpokemonV2BerryfirmnessnameOrderBy(
      {this.berry_firmness_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_berryfirmness,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2BerryfirmnessnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2BerryfirmnessOrderBy? pokemon_v2_berryfirmness;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_berryfirmness = pokemon_v2_berryfirmness;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$berry_firmness_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_berryfirmness,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_berryfirmness = pokemon_v2_berryfirmness;
    final lOther$pokemon_v2_berryfirmness = other.pokemon_v2_berryfirmness;
    if (l$pokemon_v2_berryfirmness != lOther$pokemon_v2_berryfirmness)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameStddevOrderBy {
  InputpokemonV2BerryfirmnessnameStddevOrderBy(
      {this.berry_firmness_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryfirmnessnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameStddevOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameStddevPopOrderBy {
  InputpokemonV2BerryfirmnessnameStddevPopOrderBy(
      {this.berry_firmness_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryfirmnessnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameStddevSampOrderBy {
  InputpokemonV2BerryfirmnessnameStddevSampOrderBy(
      {this.berry_firmness_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryfirmnessnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameSumOrderBy {
  InputpokemonV2BerryfirmnessnameSumOrderBy(
      {this.berry_firmness_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryfirmnessnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameSumOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameVarPopOrderBy {
  InputpokemonV2BerryfirmnessnameVarPopOrderBy(
      {this.berry_firmness_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryfirmnessnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameVarSampOrderBy {
  InputpokemonV2BerryfirmnessnameVarSampOrderBy(
      {this.berry_firmness_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryfirmnessnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryfirmnessnameVarianceOrderBy {
  InputpokemonV2BerryfirmnessnameVarianceOrderBy(
      {this.berry_firmness_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryfirmnessnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryfirmnessnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_firmness_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryfirmnessnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$berry_firmness_id = berry_firmness_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_firmness_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryfirmnessnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_firmness_id = berry_firmness_id;
    final lOther$berry_firmness_id = other.berry_firmness_id;
    if (l$berry_firmness_id != lOther$berry_firmness_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorAggregateOrderBy {
  InputpokemonV2BerryflavorAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2BerryflavorAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorAggregateOrderByFromJson(json);

  final InputpokemonV2BerryflavorAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2BerryflavorMaxOrderBy? max;

  final InputpokemonV2BerryflavorMinOrderBy? min;

  final InputpokemonV2BerryflavorStddevOrderBy? stddev;

  final InputpokemonV2BerryflavorStddevPopOrderBy? stddev_pop;

  final InputpokemonV2BerryflavorStddevSampOrderBy? stddev_samp;

  final InputpokemonV2BerryflavorSumOrderBy? sum;

  final InputpokemonV2BerryflavorVarPopOrderBy? var_pop;

  final InputpokemonV2BerryflavorVarSampOrderBy? var_samp;

  final InputpokemonV2BerryflavorVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorAvgOrderBy {
  InputpokemonV2BerryflavorAvgOrderBy({this.contest_type_id, this.id});

  @override
  factory InputpokemonV2BerryflavorAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorAvgOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    return Object.hashAll([l$contest_type_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorBoolExp {
  InputpokemonV2BerryflavorBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.contest_type_id,
      this.id,
      this.name,
      this.pokemonV2NaturesByLikesFlavorId,
      this.pokemon_v2_berryflavormaps,
      this.pokemon_v2_berryflavornames,
      this.pokemon_v2_contesttype,
      this.pokemon_v2_natures});

  @override
  factory InputpokemonV2BerryflavorBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2BerryflavorBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2BerryflavorBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2BerryflavorBoolExp>? $_or;

  final InputIntComparisonExp? contest_type_id;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2NatureBoolExp? pokemonV2NaturesByLikesFlavorId;

  final InputpokemonV2BerryflavormapBoolExp? pokemon_v2_berryflavormaps;

  final InputpokemonV2BerryflavornameBoolExp? pokemon_v2_berryflavornames;

  final InputpokemonV2ContesttypeBoolExp? pokemon_v2_contesttype;

  final InputpokemonV2NatureBoolExp? pokemon_v2_natures;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$name = name;
    final l$pokemonV2NaturesByLikesFlavorId = pokemonV2NaturesByLikesFlavorId;
    final l$pokemon_v2_berryflavormaps = pokemon_v2_berryflavormaps;
    final l$pokemon_v2_berryflavornames = pokemon_v2_berryflavornames;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final l$pokemon_v2_natures = pokemon_v2_natures;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$contest_type_id,
      l$id,
      l$name,
      l$pokemonV2NaturesByLikesFlavorId,
      l$pokemon_v2_berryflavormaps,
      l$pokemon_v2_berryflavornames,
      l$pokemon_v2_contesttype,
      l$pokemon_v2_natures
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2NaturesByLikesFlavorId = pokemonV2NaturesByLikesFlavorId;
    final lOther$pokemonV2NaturesByLikesFlavorId =
        other.pokemonV2NaturesByLikesFlavorId;
    if (l$pokemonV2NaturesByLikesFlavorId !=
        lOther$pokemonV2NaturesByLikesFlavorId) return false;
    final l$pokemon_v2_berryflavormaps = pokemon_v2_berryflavormaps;
    final lOther$pokemon_v2_berryflavormaps = other.pokemon_v2_berryflavormaps;
    if (l$pokemon_v2_berryflavormaps != lOther$pokemon_v2_berryflavormaps)
      return false;
    final l$pokemon_v2_berryflavornames = pokemon_v2_berryflavornames;
    final lOther$pokemon_v2_berryflavornames =
        other.pokemon_v2_berryflavornames;
    if (l$pokemon_v2_berryflavornames != lOther$pokemon_v2_berryflavornames)
      return false;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final lOther$pokemon_v2_contesttype = other.pokemon_v2_contesttype;
    if (l$pokemon_v2_contesttype != lOther$pokemon_v2_contesttype) return false;
    final l$pokemon_v2_natures = pokemon_v2_natures;
    final lOther$pokemon_v2_natures = other.pokemon_v2_natures;
    if (l$pokemon_v2_natures != lOther$pokemon_v2_natures) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorMaxOrderBy {
  InputpokemonV2BerryflavorMaxOrderBy(
      {this.contest_type_id, this.id, this.name});

  @override
  factory InputpokemonV2BerryflavorMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorMaxOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$name = name;
    return Object.hashAll([l$contest_type_id, l$id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorMinOrderBy {
  InputpokemonV2BerryflavorMinOrderBy(
      {this.contest_type_id, this.id, this.name});

  @override
  factory InputpokemonV2BerryflavorMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorMinOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$name = name;
    return Object.hashAll([l$contest_type_id, l$id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorOrderBy {
  InputpokemonV2BerryflavorOrderBy(
      {this.contest_type_id,
      this.id,
      this.name,
      this.pokemonV2NaturesByLikesFlavorId_aggregate,
      this.pokemon_v2_berryflavormaps_aggregate,
      this.pokemon_v2_berryflavornames_aggregate,
      this.pokemon_v2_contesttype,
      this.pokemon_v2_natures_aggregate});

  @override
  factory InputpokemonV2BerryflavorOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2NatureAggregateOrderBy?
      pokemonV2NaturesByLikesFlavorId_aggregate;

  final InputpokemonV2BerryflavormapAggregateOrderBy?
      pokemon_v2_berryflavormaps_aggregate;

  final InputpokemonV2BerryflavornameAggregateOrderBy?
      pokemon_v2_berryflavornames_aggregate;

  final InputpokemonV2ContesttypeOrderBy? pokemon_v2_contesttype;

  final InputpokemonV2NatureAggregateOrderBy? pokemon_v2_natures_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$name = name;
    final l$pokemonV2NaturesByLikesFlavorId_aggregate =
        pokemonV2NaturesByLikesFlavorId_aggregate;
    final l$pokemon_v2_berryflavormaps_aggregate =
        pokemon_v2_berryflavormaps_aggregate;
    final l$pokemon_v2_berryflavornames_aggregate =
        pokemon_v2_berryflavornames_aggregate;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final l$pokemon_v2_natures_aggregate = pokemon_v2_natures_aggregate;
    return Object.hashAll([
      l$contest_type_id,
      l$id,
      l$name,
      l$pokemonV2NaturesByLikesFlavorId_aggregate,
      l$pokemon_v2_berryflavormaps_aggregate,
      l$pokemon_v2_berryflavornames_aggregate,
      l$pokemon_v2_contesttype,
      l$pokemon_v2_natures_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2NaturesByLikesFlavorId_aggregate =
        pokemonV2NaturesByLikesFlavorId_aggregate;
    final lOther$pokemonV2NaturesByLikesFlavorId_aggregate =
        other.pokemonV2NaturesByLikesFlavorId_aggregate;
    if (l$pokemonV2NaturesByLikesFlavorId_aggregate !=
        lOther$pokemonV2NaturesByLikesFlavorId_aggregate) return false;
    final l$pokemon_v2_berryflavormaps_aggregate =
        pokemon_v2_berryflavormaps_aggregate;
    final lOther$pokemon_v2_berryflavormaps_aggregate =
        other.pokemon_v2_berryflavormaps_aggregate;
    if (l$pokemon_v2_berryflavormaps_aggregate !=
        lOther$pokemon_v2_berryflavormaps_aggregate) return false;
    final l$pokemon_v2_berryflavornames_aggregate =
        pokemon_v2_berryflavornames_aggregate;
    final lOther$pokemon_v2_berryflavornames_aggregate =
        other.pokemon_v2_berryflavornames_aggregate;
    if (l$pokemon_v2_berryflavornames_aggregate !=
        lOther$pokemon_v2_berryflavornames_aggregate) return false;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final lOther$pokemon_v2_contesttype = other.pokemon_v2_contesttype;
    if (l$pokemon_v2_contesttype != lOther$pokemon_v2_contesttype) return false;
    final l$pokemon_v2_natures_aggregate = pokemon_v2_natures_aggregate;
    final lOther$pokemon_v2_natures_aggregate =
        other.pokemon_v2_natures_aggregate;
    if (l$pokemon_v2_natures_aggregate != lOther$pokemon_v2_natures_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorStddevOrderBy {
  InputpokemonV2BerryflavorStddevOrderBy({this.contest_type_id, this.id});

  @override
  factory InputpokemonV2BerryflavorStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorStddevOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    return Object.hashAll([l$contest_type_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorStddevPopOrderBy {
  InputpokemonV2BerryflavorStddevPopOrderBy({this.contest_type_id, this.id});

  @override
  factory InputpokemonV2BerryflavorStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorStddevPopOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    return Object.hashAll([l$contest_type_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorStddevSampOrderBy {
  InputpokemonV2BerryflavorStddevSampOrderBy({this.contest_type_id, this.id});

  @override
  factory InputpokemonV2BerryflavorStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorStddevSampOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    return Object.hashAll([l$contest_type_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorSumOrderBy {
  InputpokemonV2BerryflavorSumOrderBy({this.contest_type_id, this.id});

  @override
  factory InputpokemonV2BerryflavorSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorSumOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    return Object.hashAll([l$contest_type_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorVarPopOrderBy {
  InputpokemonV2BerryflavorVarPopOrderBy({this.contest_type_id, this.id});

  @override
  factory InputpokemonV2BerryflavorVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorVarPopOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    return Object.hashAll([l$contest_type_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorVarSampOrderBy {
  InputpokemonV2BerryflavorVarSampOrderBy({this.contest_type_id, this.id});

  @override
  factory InputpokemonV2BerryflavorVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorVarSampOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    return Object.hashAll([l$contest_type_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavorVarianceOrderBy {
  InputpokemonV2BerryflavorVarianceOrderBy({this.contest_type_id, this.id});

  @override
  factory InputpokemonV2BerryflavorVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavorVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavorVarianceOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    return Object.hashAll([l$contest_type_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavorVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapAggregateOrderBy {
  InputpokemonV2BerryflavormapAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2BerryflavormapAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapAggregateOrderByFromJson(json);

  final InputpokemonV2BerryflavormapAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2BerryflavormapMaxOrderBy? max;

  final InputpokemonV2BerryflavormapMinOrderBy? min;

  final InputpokemonV2BerryflavormapStddevOrderBy? stddev;

  final InputpokemonV2BerryflavormapStddevPopOrderBy? stddev_pop;

  final InputpokemonV2BerryflavormapStddevSampOrderBy? stddev_samp;

  final InputpokemonV2BerryflavormapSumOrderBy? sum;

  final InputpokemonV2BerryflavormapVarPopOrderBy? var_pop;

  final InputpokemonV2BerryflavormapVarSampOrderBy? var_samp;

  final InputpokemonV2BerryflavormapVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapAvgOrderBy {
  InputpokemonV2BerryflavormapAvgOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapAvgOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapBoolExp {
  InputpokemonV2BerryflavormapBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.berry_flavor_id,
      this.berry_id,
      this.id,
      this.pokemon_v2_berry,
      this.pokemon_v2_berryflavor,
      this.potency});

  @override
  factory InputpokemonV2BerryflavormapBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2BerryflavormapBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2BerryflavormapBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2BerryflavormapBoolExp>? $_or;

  final InputIntComparisonExp? berry_flavor_id;

  final InputIntComparisonExp? berry_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2BerryBoolExp? pokemon_v2_berry;

  final InputpokemonV2BerryflavorBoolExp? pokemon_v2_berryflavor;

  final InputIntComparisonExp? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$pokemon_v2_berry = pokemon_v2_berry;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final l$potency = potency;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$berry_flavor_id,
      l$berry_id,
      l$id,
      l$pokemon_v2_berry,
      l$pokemon_v2_berryflavor,
      l$potency
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_berry = pokemon_v2_berry;
    final lOther$pokemon_v2_berry = other.pokemon_v2_berry;
    if (l$pokemon_v2_berry != lOther$pokemon_v2_berry) return false;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final lOther$pokemon_v2_berryflavor = other.pokemon_v2_berryflavor;
    if (l$pokemon_v2_berryflavor != lOther$pokemon_v2_berryflavor) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapMaxOrderBy {
  InputpokemonV2BerryflavormapMaxOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapMaxOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapMinOrderBy {
  InputpokemonV2BerryflavormapMinOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapMinOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapOrderBy {
  InputpokemonV2BerryflavormapOrderBy(
      {this.berry_flavor_id,
      this.berry_id,
      this.id,
      this.pokemon_v2_berry,
      this.pokemon_v2_berryflavor,
      this.potency});

  @override
  factory InputpokemonV2BerryflavormapOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2BerryOrderBy? pokemon_v2_berry;

  final InputpokemonV2BerryflavorOrderBy? pokemon_v2_berryflavor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$pokemon_v2_berry = pokemon_v2_berry;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final l$potency = potency;
    return Object.hashAll([
      l$berry_flavor_id,
      l$berry_id,
      l$id,
      l$pokemon_v2_berry,
      l$pokemon_v2_berryflavor,
      l$potency
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_berry = pokemon_v2_berry;
    final lOther$pokemon_v2_berry = other.pokemon_v2_berry;
    if (l$pokemon_v2_berry != lOther$pokemon_v2_berry) return false;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final lOther$pokemon_v2_berryflavor = other.pokemon_v2_berryflavor;
    if (l$pokemon_v2_berryflavor != lOther$pokemon_v2_berryflavor) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapStddevOrderBy {
  InputpokemonV2BerryflavormapStddevOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapStddevOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapStddevPopOrderBy {
  InputpokemonV2BerryflavormapStddevPopOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapStddevPopOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapStddevSampOrderBy {
  InputpokemonV2BerryflavormapStddevSampOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapStddevSampOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapSumOrderBy {
  InputpokemonV2BerryflavormapSumOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapSumOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapVarPopOrderBy {
  InputpokemonV2BerryflavormapVarPopOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapVarPopOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapVarSampOrderBy {
  InputpokemonV2BerryflavormapVarSampOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapVarSampOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavormapVarianceOrderBy {
  InputpokemonV2BerryflavormapVarianceOrderBy(
      {this.berry_flavor_id, this.berry_id, this.id, this.potency});

  @override
  factory InputpokemonV2BerryflavormapVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavormapVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? potency;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavormapVarianceOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$berry_id = berry_id;
    final l$id = id;
    final l$potency = potency;
    return Object.hashAll([l$berry_flavor_id, l$berry_id, l$id, l$potency]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavormapVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$berry_id = berry_id;
    final lOther$berry_id = other.berry_id;
    if (l$berry_id != lOther$berry_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$potency = potency;
    final lOther$potency = other.potency;
    if (l$potency != lOther$potency) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameAggregateOrderBy {
  InputpokemonV2BerryflavornameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2BerryflavornameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameAggregateOrderByFromJson(json);

  final InputpokemonV2BerryflavornameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2BerryflavornameMaxOrderBy? max;

  final InputpokemonV2BerryflavornameMinOrderBy? min;

  final InputpokemonV2BerryflavornameStddevOrderBy? stddev;

  final InputpokemonV2BerryflavornameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2BerryflavornameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2BerryflavornameSumOrderBy? sum;

  final InputpokemonV2BerryflavornameVarPopOrderBy? var_pop;

  final InputpokemonV2BerryflavornameVarSampOrderBy? var_samp;

  final InputpokemonV2BerryflavornameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameAvgOrderBy {
  InputpokemonV2BerryflavornameAvgOrderBy(
      {this.berry_flavor_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryflavornameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameAvgOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameBoolExp {
  InputpokemonV2BerryflavornameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.berry_flavor_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_berryflavor,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2BerryflavornameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2BerryflavornameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2BerryflavornameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2BerryflavornameBoolExp>? $_or;

  final InputIntComparisonExp? berry_flavor_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2BerryflavorBoolExp? pokemon_v2_berryflavor;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$berry_flavor_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_berryflavor,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final lOther$pokemon_v2_berryflavor = other.pokemon_v2_berryflavor;
    if (l$pokemon_v2_berryflavor != lOther$pokemon_v2_berryflavor) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameMaxOrderBy {
  InputpokemonV2BerryflavornameMaxOrderBy(
      {this.berry_flavor_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2BerryflavornameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameMaxOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameMinOrderBy {
  InputpokemonV2BerryflavornameMinOrderBy(
      {this.berry_flavor_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2BerryflavornameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameMinOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameOrderBy {
  InputpokemonV2BerryflavornameOrderBy(
      {this.berry_flavor_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_berryflavor,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2BerryflavornameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2BerryflavorOrderBy? pokemon_v2_berryflavor;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$berry_flavor_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_berryflavor,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final lOther$pokemon_v2_berryflavor = other.pokemon_v2_berryflavor;
    if (l$pokemon_v2_berryflavor != lOther$pokemon_v2_berryflavor) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameStddevOrderBy {
  InputpokemonV2BerryflavornameStddevOrderBy(
      {this.berry_flavor_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryflavornameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameStddevOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameStddevPopOrderBy {
  InputpokemonV2BerryflavornameStddevPopOrderBy(
      {this.berry_flavor_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryflavornameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameStddevSampOrderBy {
  InputpokemonV2BerryflavornameStddevSampOrderBy(
      {this.berry_flavor_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryflavornameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameSumOrderBy {
  InputpokemonV2BerryflavornameSumOrderBy(
      {this.berry_flavor_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryflavornameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameSumOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameVarPopOrderBy {
  InputpokemonV2BerryflavornameVarPopOrderBy(
      {this.berry_flavor_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryflavornameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameVarPopOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameVarSampOrderBy {
  InputpokemonV2BerryflavornameVarSampOrderBy(
      {this.berry_flavor_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryflavornameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameVarSampOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2BerryflavornameVarianceOrderBy {
  InputpokemonV2BerryflavornameVarianceOrderBy(
      {this.berry_flavor_id, this.id, this.language_id});

  @override
  factory InputpokemonV2BerryflavornameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2BerryflavornameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? berry_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2BerryflavornameVarianceOrderByToJson(this);
  int get hashCode {
    final l$berry_flavor_id = berry_flavor_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$berry_flavor_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2BerryflavornameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$berry_flavor_id = berry_flavor_id;
    final lOther$berry_flavor_id = other.berry_flavor_id;
    if (l$berry_flavor_id != lOther$berry_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicAggregateOrderBy {
  InputpokemonV2CharacteristicAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2CharacteristicAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicAggregateOrderByFromJson(json);

  final InputpokemonV2CharacteristicAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2CharacteristicMaxOrderBy? max;

  final InputpokemonV2CharacteristicMinOrderBy? min;

  final InputpokemonV2CharacteristicStddevOrderBy? stddev;

  final InputpokemonV2CharacteristicStddevPopOrderBy? stddev_pop;

  final InputpokemonV2CharacteristicStddevSampOrderBy? stddev_samp;

  final InputpokemonV2CharacteristicSumOrderBy? sum;

  final InputpokemonV2CharacteristicVarPopOrderBy? var_pop;

  final InputpokemonV2CharacteristicVarSampOrderBy? var_samp;

  final InputpokemonV2CharacteristicVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicAvgOrderBy {
  InputpokemonV2CharacteristicAvgOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicAvgOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicBoolExp {
  InputpokemonV2CharacteristicBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.gene_mod_5,
      this.id,
      this.pokemon_v2_characteristicdescriptions,
      this.pokemon_v2_stat,
      this.stat_id});

  @override
  factory InputpokemonV2CharacteristicBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2CharacteristicBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2CharacteristicBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2CharacteristicBoolExp>? $_or;

  final InputIntComparisonExp? gene_mod_5;

  final InputIntComparisonExp? id;

  final InputpokemonV2CharacteristicdescriptionBoolExp?
      pokemon_v2_characteristicdescriptions;

  final InputpokemonV2StatBoolExp? pokemon_v2_stat;

  final InputIntComparisonExp? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$pokemon_v2_characteristicdescriptions =
        pokemon_v2_characteristicdescriptions;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final l$stat_id = stat_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$gene_mod_5,
      l$id,
      l$pokemon_v2_characteristicdescriptions,
      l$pokemon_v2_stat,
      l$stat_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_characteristicdescriptions =
        pokemon_v2_characteristicdescriptions;
    final lOther$pokemon_v2_characteristicdescriptions =
        other.pokemon_v2_characteristicdescriptions;
    if (l$pokemon_v2_characteristicdescriptions !=
        lOther$pokemon_v2_characteristicdescriptions) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicMaxOrderBy {
  InputpokemonV2CharacteristicMaxOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicMaxOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicMinOrderBy {
  InputpokemonV2CharacteristicMinOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicMinOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicOrderBy {
  InputpokemonV2CharacteristicOrderBy(
      {this.gene_mod_5,
      this.id,
      this.pokemon_v2_characteristicdescriptions_aggregate,
      this.pokemon_v2_stat,
      this.stat_id});

  @override
  factory InputpokemonV2CharacteristicOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2CharacteristicdescriptionAggregateOrderBy?
      pokemon_v2_characteristicdescriptions_aggregate;

  final InputpokemonV2StatOrderBy? pokemon_v2_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$pokemon_v2_characteristicdescriptions_aggregate =
        pokemon_v2_characteristicdescriptions_aggregate;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final l$stat_id = stat_id;
    return Object.hashAll([
      l$gene_mod_5,
      l$id,
      l$pokemon_v2_characteristicdescriptions_aggregate,
      l$pokemon_v2_stat,
      l$stat_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_characteristicdescriptions_aggregate =
        pokemon_v2_characteristicdescriptions_aggregate;
    final lOther$pokemon_v2_characteristicdescriptions_aggregate =
        other.pokemon_v2_characteristicdescriptions_aggregate;
    if (l$pokemon_v2_characteristicdescriptions_aggregate !=
        lOther$pokemon_v2_characteristicdescriptions_aggregate) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicStddevOrderBy {
  InputpokemonV2CharacteristicStddevOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicStddevOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicStddevPopOrderBy {
  InputpokemonV2CharacteristicStddevPopOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicStddevPopOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicStddevSampOrderBy {
  InputpokemonV2CharacteristicStddevSampOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicStddevSampOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicSumOrderBy {
  InputpokemonV2CharacteristicSumOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicSumOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicVarPopOrderBy {
  InputpokemonV2CharacteristicVarPopOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicVarPopOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicVarSampOrderBy {
  InputpokemonV2CharacteristicVarSampOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicVarSampOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicVarianceOrderBy {
  InputpokemonV2CharacteristicVarianceOrderBy(
      {this.gene_mod_5, this.id, this.stat_id});

  @override
  factory InputpokemonV2CharacteristicVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gene_mod_5;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicVarianceOrderByToJson(this);
  int get hashCode {
    final l$gene_mod_5 = gene_mod_5;
    final l$id = id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$gene_mod_5, l$id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$gene_mod_5 = gene_mod_5;
    final lOther$gene_mod_5 = other.gene_mod_5;
    if (l$gene_mod_5 != lOther$gene_mod_5) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionAggregateOrderBy {
  InputpokemonV2CharacteristicdescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2CharacteristicdescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2CharacteristicdescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2CharacteristicdescriptionMaxOrderBy? max;

  final InputpokemonV2CharacteristicdescriptionMinOrderBy? min;

  final InputpokemonV2CharacteristicdescriptionStddevOrderBy? stddev;

  final InputpokemonV2CharacteristicdescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2CharacteristicdescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2CharacteristicdescriptionSumOrderBy? sum;

  final InputpokemonV2CharacteristicdescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2CharacteristicdescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2CharacteristicdescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionAvgOrderBy {
  InputpokemonV2CharacteristicdescriptionAvgOrderBy(
      {this.characteristic_id, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$characteristic_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionBoolExp {
  InputpokemonV2CharacteristicdescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.characteristic_id,
      this.description,
      this.id,
      this.language_id,
      this.pokemon_v2_characteristic,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2CharacteristicdescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2CharacteristicdescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2CharacteristicdescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2CharacteristicdescriptionBoolExp>? $_or;

  final InputIntComparisonExp? characteristic_id;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2CharacteristicBoolExp? pokemon_v2_characteristic;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$characteristic_id = characteristic_id;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_characteristic = pokemon_v2_characteristic;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$characteristic_id,
      l$description,
      l$id,
      l$language_id,
      l$pokemon_v2_characteristic,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_characteristic = pokemon_v2_characteristic;
    final lOther$pokemon_v2_characteristic = other.pokemon_v2_characteristic;
    if (l$pokemon_v2_characteristic != lOther$pokemon_v2_characteristic)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionMaxOrderBy {
  InputpokemonV2CharacteristicdescriptionMaxOrderBy(
      {this.characteristic_id, this.description, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$characteristic_id, l$description, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionMinOrderBy {
  InputpokemonV2CharacteristicdescriptionMinOrderBy(
      {this.characteristic_id, this.description, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$characteristic_id, l$description, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionOrderBy {
  InputpokemonV2CharacteristicdescriptionOrderBy(
      {this.characteristic_id,
      this.description,
      this.id,
      this.language_id,
      this.pokemon_v2_characteristic,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2CharacteristicdescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2CharacteristicOrderBy? pokemon_v2_characteristic;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_characteristic = pokemon_v2_characteristic;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$characteristic_id,
      l$description,
      l$id,
      l$language_id,
      l$pokemon_v2_characteristic,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_characteristic = pokemon_v2_characteristic;
    final lOther$pokemon_v2_characteristic = other.pokemon_v2_characteristic;
    if (l$pokemon_v2_characteristic != lOther$pokemon_v2_characteristic)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionStddevOrderBy {
  InputpokemonV2CharacteristicdescriptionStddevOrderBy(
      {this.characteristic_id, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$characteristic_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionStddevPopOrderBy {
  InputpokemonV2CharacteristicdescriptionStddevPopOrderBy(
      {this.characteristic_id, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$characteristic_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionStddevSampOrderBy {
  InputpokemonV2CharacteristicdescriptionStddevSampOrderBy(
      {this.characteristic_id, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$characteristic_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionSumOrderBy {
  InputpokemonV2CharacteristicdescriptionSumOrderBy(
      {this.characteristic_id, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$characteristic_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionVarPopOrderBy {
  InputpokemonV2CharacteristicdescriptionVarPopOrderBy(
      {this.characteristic_id, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$characteristic_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionVarSampOrderBy {
  InputpokemonV2CharacteristicdescriptionVarSampOrderBy(
      {this.characteristic_id, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$characteristic_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2CharacteristicdescriptionVarianceOrderBy {
  InputpokemonV2CharacteristicdescriptionVarianceOrderBy(
      {this.characteristic_id, this.id, this.language_id});

  @override
  factory InputpokemonV2CharacteristicdescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2CharacteristicdescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? characteristic_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2CharacteristicdescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$characteristic_id = characteristic_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$characteristic_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2CharacteristicdescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$characteristic_id = characteristic_id;
    final lOther$characteristic_id = other.characteristic_id;
    if (l$characteristic_id != lOther$characteristic_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboAggregateOrderBy {
  InputpokemonV2ContestcomboAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ContestcomboAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboAggregateOrderByFromJson(json);

  final InputpokemonV2ContestcomboAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ContestcomboMaxOrderBy? max;

  final InputpokemonV2ContestcomboMinOrderBy? min;

  final InputpokemonV2ContestcomboStddevOrderBy? stddev;

  final InputpokemonV2ContestcomboStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ContestcomboStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ContestcomboSumOrderBy? sum;

  final InputpokemonV2ContestcomboVarPopOrderBy? var_pop;

  final InputpokemonV2ContestcomboVarSampOrderBy? var_samp;

  final InputpokemonV2ContestcomboVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboAvgOrderBy {
  InputpokemonV2ContestcomboAvgOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboAvgOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboBoolExp {
  InputpokemonV2ContestcomboBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.first_move_id,
      this.id,
      this.pokemonV2MoveBySecondMoveId,
      this.pokemon_v2_move,
      this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ContestcomboBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ContestcomboBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ContestcomboBoolExp>? $_or;

  final InputIntComparisonExp? first_move_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2MoveBoolExp? pokemonV2MoveBySecondMoveId;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputIntComparisonExp? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$pokemonV2MoveBySecondMoveId = pokemonV2MoveBySecondMoveId;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$second_move_id = second_move_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$first_move_id,
      l$id,
      l$pokemonV2MoveBySecondMoveId,
      l$pokemon_v2_move,
      l$second_move_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemonV2MoveBySecondMoveId = pokemonV2MoveBySecondMoveId;
    final lOther$pokemonV2MoveBySecondMoveId =
        other.pokemonV2MoveBySecondMoveId;
    if (l$pokemonV2MoveBySecondMoveId != lOther$pokemonV2MoveBySecondMoveId)
      return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboMaxOrderBy {
  InputpokemonV2ContestcomboMaxOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboMaxOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboMinOrderBy {
  InputpokemonV2ContestcomboMinOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboMinOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboOrderBy {
  InputpokemonV2ContestcomboOrderBy(
      {this.first_move_id,
      this.id,
      this.pokemonV2MoveBySecondMoveId,
      this.pokemon_v2_move,
      this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2MoveOrderBy? pokemonV2MoveBySecondMoveId;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$pokemonV2MoveBySecondMoveId = pokemonV2MoveBySecondMoveId;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$second_move_id = second_move_id;
    return Object.hashAll([
      l$first_move_id,
      l$id,
      l$pokemonV2MoveBySecondMoveId,
      l$pokemon_v2_move,
      l$second_move_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemonV2MoveBySecondMoveId = pokemonV2MoveBySecondMoveId;
    final lOther$pokemonV2MoveBySecondMoveId =
        other.pokemonV2MoveBySecondMoveId;
    if (l$pokemonV2MoveBySecondMoveId != lOther$pokemonV2MoveBySecondMoveId)
      return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboStddevOrderBy {
  InputpokemonV2ContestcomboStddevOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboStddevOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboStddevPopOrderBy {
  InputpokemonV2ContestcomboStddevPopOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboStddevPopOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboStddevSampOrderBy {
  InputpokemonV2ContestcomboStddevSampOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboStddevSampOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboSumOrderBy {
  InputpokemonV2ContestcomboSumOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboSumOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboVarPopOrderBy {
  InputpokemonV2ContestcomboVarPopOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboVarPopOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboVarSampOrderBy {
  InputpokemonV2ContestcomboVarSampOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboVarSampOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContestcomboVarianceOrderBy {
  InputpokemonV2ContestcomboVarianceOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2ContestcomboVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContestcomboVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContestcomboVarianceOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContestcomboVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectBoolExp {
  InputpokemonV2ContesteffectBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.appeal,
      this.id,
      this.jam,
      this.pokemon_v2_contesteffecteffecttexts,
      this.pokemon_v2_contesteffectflavortexts,
      this.pokemon_v2_moves});

  @override
  factory InputpokemonV2ContesteffectBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ContesteffectBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ContesteffectBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ContesteffectBoolExp>? $_or;

  final InputIntComparisonExp? appeal;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? jam;

  final InputpokemonV2ContesteffecteffecttextBoolExp?
      pokemon_v2_contesteffecteffecttexts;

  final InputpokemonV2ContesteffectflavortextBoolExp?
      pokemon_v2_contesteffectflavortexts;

  final InputpokemonV2MoveBoolExp? pokemon_v2_moves;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$appeal = appeal;
    final l$id = id;
    final l$jam = jam;
    final l$pokemon_v2_contesteffecteffecttexts =
        pokemon_v2_contesteffecteffecttexts;
    final l$pokemon_v2_contesteffectflavortexts =
        pokemon_v2_contesteffectflavortexts;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$appeal,
      l$id,
      l$jam,
      l$pokemon_v2_contesteffecteffecttexts,
      l$pokemon_v2_contesteffectflavortexts,
      l$pokemon_v2_moves
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$appeal = appeal;
    final lOther$appeal = other.appeal;
    if (l$appeal != lOther$appeal) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$jam = jam;
    final lOther$jam = other.jam;
    if (l$jam != lOther$jam) return false;
    final l$pokemon_v2_contesteffecteffecttexts =
        pokemon_v2_contesteffecteffecttexts;
    final lOther$pokemon_v2_contesteffecteffecttexts =
        other.pokemon_v2_contesteffecteffecttexts;
    if (l$pokemon_v2_contesteffecteffecttexts !=
        lOther$pokemon_v2_contesteffecteffecttexts) return false;
    final l$pokemon_v2_contesteffectflavortexts =
        pokemon_v2_contesteffectflavortexts;
    final lOther$pokemon_v2_contesteffectflavortexts =
        other.pokemon_v2_contesteffectflavortexts;
    if (l$pokemon_v2_contesteffectflavortexts !=
        lOther$pokemon_v2_contesteffectflavortexts) return false;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final lOther$pokemon_v2_moves = other.pokemon_v2_moves;
    if (l$pokemon_v2_moves != lOther$pokemon_v2_moves) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectOrderBy {
  InputpokemonV2ContesteffectOrderBy(
      {this.appeal,
      this.id,
      this.jam,
      this.pokemon_v2_contesteffecteffecttexts_aggregate,
      this.pokemon_v2_contesteffectflavortexts_aggregate,
      this.pokemon_v2_moves_aggregate});

  @override
  factory InputpokemonV2ContesteffectOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? appeal;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? jam;

  final InputpokemonV2ContesteffecteffecttextAggregateOrderBy?
      pokemon_v2_contesteffecteffecttexts_aggregate;

  final InputpokemonV2ContesteffectflavortextAggregateOrderBy?
      pokemon_v2_contesteffectflavortexts_aggregate;

  final InputpokemonV2MoveAggregateOrderBy? pokemon_v2_moves_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectOrderByToJson(this);
  int get hashCode {
    final l$appeal = appeal;
    final l$id = id;
    final l$jam = jam;
    final l$pokemon_v2_contesteffecteffecttexts_aggregate =
        pokemon_v2_contesteffecteffecttexts_aggregate;
    final l$pokemon_v2_contesteffectflavortexts_aggregate =
        pokemon_v2_contesteffectflavortexts_aggregate;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    return Object.hashAll([
      l$appeal,
      l$id,
      l$jam,
      l$pokemon_v2_contesteffecteffecttexts_aggregate,
      l$pokemon_v2_contesteffectflavortexts_aggregate,
      l$pokemon_v2_moves_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$appeal = appeal;
    final lOther$appeal = other.appeal;
    if (l$appeal != lOther$appeal) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$jam = jam;
    final lOther$jam = other.jam;
    if (l$jam != lOther$jam) return false;
    final l$pokemon_v2_contesteffecteffecttexts_aggregate =
        pokemon_v2_contesteffecteffecttexts_aggregate;
    final lOther$pokemon_v2_contesteffecteffecttexts_aggregate =
        other.pokemon_v2_contesteffecteffecttexts_aggregate;
    if (l$pokemon_v2_contesteffecteffecttexts_aggregate !=
        lOther$pokemon_v2_contesteffecteffecttexts_aggregate) return false;
    final l$pokemon_v2_contesteffectflavortexts_aggregate =
        pokemon_v2_contesteffectflavortexts_aggregate;
    final lOther$pokemon_v2_contesteffectflavortexts_aggregate =
        other.pokemon_v2_contesteffectflavortexts_aggregate;
    if (l$pokemon_v2_contesteffectflavortexts_aggregate !=
        lOther$pokemon_v2_contesteffectflavortexts_aggregate) return false;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final lOther$pokemon_v2_moves_aggregate = other.pokemon_v2_moves_aggregate;
    if (l$pokemon_v2_moves_aggregate != lOther$pokemon_v2_moves_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextAggregateOrderBy {
  InputpokemonV2ContesteffecteffecttextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ContesteffecteffecttextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextAggregateOrderByFromJson(json);

  final InputpokemonV2ContesteffecteffecttextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ContesteffecteffecttextMaxOrderBy? max;

  final InputpokemonV2ContesteffecteffecttextMinOrderBy? min;

  final InputpokemonV2ContesteffecteffecttextStddevOrderBy? stddev;

  final InputpokemonV2ContesteffecteffecttextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ContesteffecteffecttextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ContesteffecteffecttextSumOrderBy? sum;

  final InputpokemonV2ContesteffecteffecttextVarPopOrderBy? var_pop;

  final InputpokemonV2ContesteffecteffecttextVarSampOrderBy? var_samp;

  final InputpokemonV2ContesteffecteffecttextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextAvgOrderBy {
  InputpokemonV2ContesteffecteffecttextAvgOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextAvgOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextBoolExp {
  InputpokemonV2ContesteffecteffecttextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.contest_effect_id,
      this.effect,
      this.id,
      this.language_id,
      this.pokemon_v2_contesteffect,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ContesteffecteffecttextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ContesteffecteffecttextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ContesteffecteffecttextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ContesteffecteffecttextBoolExp>? $_or;

  final InputIntComparisonExp? contest_effect_id;

  final InputStringComparisonExp? effect;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2ContesteffectBoolExp? pokemon_v2_contesteffect;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$contest_effect_id = contest_effect_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$contest_effect_id,
      l$effect,
      l$id,
      l$language_id,
      l$pokemon_v2_contesteffect,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final lOther$pokemon_v2_contesteffect = other.pokemon_v2_contesteffect;
    if (l$pokemon_v2_contesteffect != lOther$pokemon_v2_contesteffect)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextMaxOrderBy {
  InputpokemonV2ContesteffecteffecttextMaxOrderBy(
      {this.contest_effect_id, this.effect, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextMaxOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$effect, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextMinOrderBy {
  InputpokemonV2ContesteffecteffecttextMinOrderBy(
      {this.contest_effect_id, this.effect, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextMinOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$effect, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextOrderBy {
  InputpokemonV2ContesteffecteffecttextOrderBy(
      {this.contest_effect_id,
      this.effect,
      this.id,
      this.language_id,
      this.pokemon_v2_contesteffect,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ContesteffecteffecttextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2ContesteffectOrderBy? pokemon_v2_contesteffect;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$contest_effect_id,
      l$effect,
      l$id,
      l$language_id,
      l$pokemon_v2_contesteffect,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final lOther$pokemon_v2_contesteffect = other.pokemon_v2_contesteffect;
    if (l$pokemon_v2_contesteffect != lOther$pokemon_v2_contesteffect)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextStddevOrderBy {
  InputpokemonV2ContesteffecteffecttextStddevOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextStddevOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextStddevPopOrderBy {
  InputpokemonV2ContesteffecteffecttextStddevPopOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextStddevSampOrderBy {
  InputpokemonV2ContesteffecteffecttextStddevSampOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextSumOrderBy {
  InputpokemonV2ContesteffecteffecttextSumOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextSumOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextVarPopOrderBy {
  InputpokemonV2ContesteffecteffecttextVarPopOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextVarPopOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextVarSampOrderBy {
  InputpokemonV2ContesteffecteffecttextVarSampOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextVarSampOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffecteffecttextVarianceOrderBy {
  InputpokemonV2ContesteffecteffecttextVarianceOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffecteffecttextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffecteffecttextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffecteffecttextVarianceOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffecteffecttextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextAggregateOrderBy {
  InputpokemonV2ContesteffectflavortextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ContesteffectflavortextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextAggregateOrderByFromJson(json);

  final InputpokemonV2ContesteffectflavortextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ContesteffectflavortextMaxOrderBy? max;

  final InputpokemonV2ContesteffectflavortextMinOrderBy? min;

  final InputpokemonV2ContesteffectflavortextStddevOrderBy? stddev;

  final InputpokemonV2ContesteffectflavortextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ContesteffectflavortextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ContesteffectflavortextSumOrderBy? sum;

  final InputpokemonV2ContesteffectflavortextVarPopOrderBy? var_pop;

  final InputpokemonV2ContesteffectflavortextVarSampOrderBy? var_samp;

  final InputpokemonV2ContesteffectflavortextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextAvgOrderBy {
  InputpokemonV2ContesteffectflavortextAvgOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextAvgOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextBoolExp {
  InputpokemonV2ContesteffectflavortextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.contest_effect_id,
      this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_v2_contesteffect,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ContesteffectflavortextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ContesteffectflavortextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ContesteffectflavortextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ContesteffectflavortextBoolExp>? $_or;

  final InputIntComparisonExp? contest_effect_id;

  final InputStringComparisonExp? flavor_text;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2ContesteffectBoolExp? pokemon_v2_contesteffect;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$contest_effect_id = contest_effect_id;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$contest_effect_id,
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_v2_contesteffect,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final lOther$pokemon_v2_contesteffect = other.pokemon_v2_contesteffect;
    if (l$pokemon_v2_contesteffect != lOther$pokemon_v2_contesteffect)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextMaxOrderBy {
  InputpokemonV2ContesteffectflavortextMaxOrderBy(
      {this.contest_effect_id, this.flavor_text, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextMaxOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$contest_effect_id, l$flavor_text, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextMinOrderBy {
  InputpokemonV2ContesteffectflavortextMinOrderBy(
      {this.contest_effect_id, this.flavor_text, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextMinOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$contest_effect_id, l$flavor_text, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextOrderBy {
  InputpokemonV2ContesteffectflavortextOrderBy(
      {this.contest_effect_id,
      this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_v2_contesteffect,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ContesteffectflavortextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2ContesteffectOrderBy? pokemon_v2_contesteffect;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$contest_effect_id,
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_v2_contesteffect,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final lOther$pokemon_v2_contesteffect = other.pokemon_v2_contesteffect;
    if (l$pokemon_v2_contesteffect != lOther$pokemon_v2_contesteffect)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextStddevOrderBy {
  InputpokemonV2ContesteffectflavortextStddevOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextStddevOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextStddevPopOrderBy {
  InputpokemonV2ContesteffectflavortextStddevPopOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextStddevSampOrderBy {
  InputpokemonV2ContesteffectflavortextStddevSampOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextSumOrderBy {
  InputpokemonV2ContesteffectflavortextSumOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextSumOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextVarPopOrderBy {
  InputpokemonV2ContesteffectflavortextVarPopOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextVarPopOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextVarSampOrderBy {
  InputpokemonV2ContesteffectflavortextVarSampOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextVarSampOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesteffectflavortextVarianceOrderBy {
  InputpokemonV2ContesteffectflavortextVarianceOrderBy(
      {this.contest_effect_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesteffectflavortextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesteffectflavortextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesteffectflavortextVarianceOrderByToJson(this);
  int get hashCode {
    final l$contest_effect_id = contest_effect_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_effect_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesteffectflavortextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypeBoolExp {
  InputpokemonV2ContesttypeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_berryflavors,
      this.pokemon_v2_contesttypenames,
      this.pokemon_v2_moves});

  @override
  factory InputpokemonV2ContesttypeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ContesttypeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ContesttypeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ContesttypeBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2BerryflavorBoolExp? pokemon_v2_berryflavors;

  final InputpokemonV2ContesttypenameBoolExp? pokemon_v2_contesttypenames;

  final InputpokemonV2MoveBoolExp? pokemon_v2_moves;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_berryflavors = pokemon_v2_berryflavors;
    final l$pokemon_v2_contesttypenames = pokemon_v2_contesttypenames;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_berryflavors,
      l$pokemon_v2_contesttypenames,
      l$pokemon_v2_moves
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_berryflavors = pokemon_v2_berryflavors;
    final lOther$pokemon_v2_berryflavors = other.pokemon_v2_berryflavors;
    if (l$pokemon_v2_berryflavors != lOther$pokemon_v2_berryflavors)
      return false;
    final l$pokemon_v2_contesttypenames = pokemon_v2_contesttypenames;
    final lOther$pokemon_v2_contesttypenames =
        other.pokemon_v2_contesttypenames;
    if (l$pokemon_v2_contesttypenames != lOther$pokemon_v2_contesttypenames)
      return false;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final lOther$pokemon_v2_moves = other.pokemon_v2_moves;
    if (l$pokemon_v2_moves != lOther$pokemon_v2_moves) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypeOrderBy {
  InputpokemonV2ContesttypeOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_berryflavors_aggregate,
      this.pokemon_v2_contesttypenames_aggregate,
      this.pokemon_v2_moves_aggregate});

  @override
  factory InputpokemonV2ContesttypeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2BerryflavorAggregateOrderBy?
      pokemon_v2_berryflavors_aggregate;

  final InputpokemonV2ContesttypenameAggregateOrderBy?
      pokemon_v2_contesttypenames_aggregate;

  final InputpokemonV2MoveAggregateOrderBy? pokemon_v2_moves_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypeOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_berryflavors_aggregate =
        pokemon_v2_berryflavors_aggregate;
    final l$pokemon_v2_contesttypenames_aggregate =
        pokemon_v2_contesttypenames_aggregate;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_berryflavors_aggregate,
      l$pokemon_v2_contesttypenames_aggregate,
      l$pokemon_v2_moves_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_berryflavors_aggregate =
        pokemon_v2_berryflavors_aggregate;
    final lOther$pokemon_v2_berryflavors_aggregate =
        other.pokemon_v2_berryflavors_aggregate;
    if (l$pokemon_v2_berryflavors_aggregate !=
        lOther$pokemon_v2_berryflavors_aggregate) return false;
    final l$pokemon_v2_contesttypenames_aggregate =
        pokemon_v2_contesttypenames_aggregate;
    final lOther$pokemon_v2_contesttypenames_aggregate =
        other.pokemon_v2_contesttypenames_aggregate;
    if (l$pokemon_v2_contesttypenames_aggregate !=
        lOther$pokemon_v2_contesttypenames_aggregate) return false;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final lOther$pokemon_v2_moves_aggregate = other.pokemon_v2_moves_aggregate;
    if (l$pokemon_v2_moves_aggregate != lOther$pokemon_v2_moves_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameAggregateOrderBy {
  InputpokemonV2ContesttypenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ContesttypenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameAggregateOrderByFromJson(json);

  final InputpokemonV2ContesttypenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ContesttypenameMaxOrderBy? max;

  final InputpokemonV2ContesttypenameMinOrderBy? min;

  final InputpokemonV2ContesttypenameStddevOrderBy? stddev;

  final InputpokemonV2ContesttypenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ContesttypenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ContesttypenameSumOrderBy? sum;

  final InputpokemonV2ContesttypenameVarPopOrderBy? var_pop;

  final InputpokemonV2ContesttypenameVarSampOrderBy? var_samp;

  final InputpokemonV2ContesttypenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameAvgOrderBy {
  InputpokemonV2ContesttypenameAvgOrderBy(
      {this.contest_type_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesttypenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameAvgOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_type_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameBoolExp {
  InputpokemonV2ContesttypenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.color,
      this.contest_type_id,
      this.flavor,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_contesttype,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ContesttypenameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ContesttypenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ContesttypenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ContesttypenameBoolExp>? $_or;

  final InputStringComparisonExp? color;

  final InputIntComparisonExp? contest_type_id;

  final InputStringComparisonExp? flavor;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ContesttypeBoolExp? pokemon_v2_contesttype;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$color = color;
    final l$contest_type_id = contest_type_id;
    final l$flavor = flavor;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$color,
      l$contest_type_id,
      l$flavor,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_contesttype,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$color = color;
    final lOther$color = other.color;
    if (l$color != lOther$color) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$flavor = flavor;
    final lOther$flavor = other.flavor;
    if (l$flavor != lOther$flavor) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final lOther$pokemon_v2_contesttype = other.pokemon_v2_contesttype;
    if (l$pokemon_v2_contesttype != lOther$pokemon_v2_contesttype) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameMaxOrderBy {
  InputpokemonV2ContesttypenameMaxOrderBy(
      {this.color,
      this.contest_type_id,
      this.flavor,
      this.id,
      this.language_id,
      this.name});

  @override
  factory InputpokemonV2ContesttypenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? color;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameMaxOrderByToJson(this);
  int get hashCode {
    final l$color = color;
    final l$contest_type_id = contest_type_id;
    final l$flavor = flavor;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll(
        [l$color, l$contest_type_id, l$flavor, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$color = color;
    final lOther$color = other.color;
    if (l$color != lOther$color) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$flavor = flavor;
    final lOther$flavor = other.flavor;
    if (l$flavor != lOther$flavor) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameMinOrderBy {
  InputpokemonV2ContesttypenameMinOrderBy(
      {this.color,
      this.contest_type_id,
      this.flavor,
      this.id,
      this.language_id,
      this.name});

  @override
  factory InputpokemonV2ContesttypenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? color;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameMinOrderByToJson(this);
  int get hashCode {
    final l$color = color;
    final l$contest_type_id = contest_type_id;
    final l$flavor = flavor;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll(
        [l$color, l$contest_type_id, l$flavor, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$color = color;
    final lOther$color = other.color;
    if (l$color != lOther$color) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$flavor = flavor;
    final lOther$flavor = other.flavor;
    if (l$flavor != lOther$flavor) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameOrderBy {
  InputpokemonV2ContesttypenameOrderBy(
      {this.color,
      this.contest_type_id,
      this.flavor,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_contesttype,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ContesttypenameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? color;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ContesttypeOrderBy? pokemon_v2_contesttype;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameOrderByToJson(this);
  int get hashCode {
    final l$color = color;
    final l$contest_type_id = contest_type_id;
    final l$flavor = flavor;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$color,
      l$contest_type_id,
      l$flavor,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_contesttype,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$color = color;
    final lOther$color = other.color;
    if (l$color != lOther$color) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$flavor = flavor;
    final lOther$flavor = other.flavor;
    if (l$flavor != lOther$flavor) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final lOther$pokemon_v2_contesttype = other.pokemon_v2_contesttype;
    if (l$pokemon_v2_contesttype != lOther$pokemon_v2_contesttype) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameStddevOrderBy {
  InputpokemonV2ContesttypenameStddevOrderBy(
      {this.contest_type_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesttypenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameStddevOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_type_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameStddevPopOrderBy {
  InputpokemonV2ContesttypenameStddevPopOrderBy(
      {this.contest_type_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesttypenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_type_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameStddevSampOrderBy {
  InputpokemonV2ContesttypenameStddevSampOrderBy(
      {this.contest_type_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesttypenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_type_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameSumOrderBy {
  InputpokemonV2ContesttypenameSumOrderBy(
      {this.contest_type_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesttypenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameSumOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_type_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameVarPopOrderBy {
  InputpokemonV2ContesttypenameVarPopOrderBy(
      {this.contest_type_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesttypenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_type_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameVarSampOrderBy {
  InputpokemonV2ContesttypenameVarSampOrderBy(
      {this.contest_type_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesttypenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_type_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ContesttypenameVarianceOrderBy {
  InputpokemonV2ContesttypenameVarianceOrderBy(
      {this.contest_type_id, this.id, this.language_id});

  @override
  factory InputpokemonV2ContesttypenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ContesttypenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ContesttypenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$contest_type_id = contest_type_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$contest_type_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ContesttypenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupBoolExp {
  InputpokemonV2EgggroupBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_egggroupnames,
      this.pokemon_v2_pokemonegggroups});

  @override
  factory InputpokemonV2EgggroupBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EgggroupBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EgggroupBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EgggroupBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EgggroupnameBoolExp? pokemon_v2_egggroupnames;

  final InputpokemonV2PokemonegggroupBoolExp? pokemon_v2_pokemonegggroups;

  Map<String, dynamic> toJson() => _$InputpokemonV2EgggroupBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_egggroupnames = pokemon_v2_egggroupnames;
    final l$pokemon_v2_pokemonegggroups = pokemon_v2_pokemonegggroups;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_egggroupnames,
      l$pokemon_v2_pokemonegggroups
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_egggroupnames = pokemon_v2_egggroupnames;
    final lOther$pokemon_v2_egggroupnames = other.pokemon_v2_egggroupnames;
    if (l$pokemon_v2_egggroupnames != lOther$pokemon_v2_egggroupnames)
      return false;
    final l$pokemon_v2_pokemonegggroups = pokemon_v2_pokemonegggroups;
    final lOther$pokemon_v2_pokemonegggroups =
        other.pokemon_v2_pokemonegggroups;
    if (l$pokemon_v2_pokemonegggroups != lOther$pokemon_v2_pokemonegggroups)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupOrderBy {
  InputpokemonV2EgggroupOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_egggroupnames_aggregate,
      this.pokemon_v2_pokemonegggroups_aggregate});

  @override
  factory InputpokemonV2EgggroupOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EgggroupnameAggregateOrderBy?
      pokemon_v2_egggroupnames_aggregate;

  final InputpokemonV2PokemonegggroupAggregateOrderBy?
      pokemon_v2_pokemonegggroups_aggregate;

  Map<String, dynamic> toJson() => _$InputpokemonV2EgggroupOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_egggroupnames_aggregate =
        pokemon_v2_egggroupnames_aggregate;
    final l$pokemon_v2_pokemonegggroups_aggregate =
        pokemon_v2_pokemonegggroups_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_egggroupnames_aggregate,
      l$pokemon_v2_pokemonegggroups_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_egggroupnames_aggregate =
        pokemon_v2_egggroupnames_aggregate;
    final lOther$pokemon_v2_egggroupnames_aggregate =
        other.pokemon_v2_egggroupnames_aggregate;
    if (l$pokemon_v2_egggroupnames_aggregate !=
        lOther$pokemon_v2_egggroupnames_aggregate) return false;
    final l$pokemon_v2_pokemonegggroups_aggregate =
        pokemon_v2_pokemonegggroups_aggregate;
    final lOther$pokemon_v2_pokemonegggroups_aggregate =
        other.pokemon_v2_pokemonegggroups_aggregate;
    if (l$pokemon_v2_pokemonegggroups_aggregate !=
        lOther$pokemon_v2_pokemonegggroups_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameAggregateOrderBy {
  InputpokemonV2EgggroupnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EgggroupnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameAggregateOrderByFromJson(json);

  final InputpokemonV2EgggroupnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EgggroupnameMaxOrderBy? max;

  final InputpokemonV2EgggroupnameMinOrderBy? min;

  final InputpokemonV2EgggroupnameStddevOrderBy? stddev;

  final InputpokemonV2EgggroupnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EgggroupnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EgggroupnameSumOrderBy? sum;

  final InputpokemonV2EgggroupnameVarPopOrderBy? var_pop;

  final InputpokemonV2EgggroupnameVarSampOrderBy? var_samp;

  final InputpokemonV2EgggroupnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameAvgOrderBy {
  InputpokemonV2EgggroupnameAvgOrderBy(
      {this.egg_group_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EgggroupnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameAvgOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameBoolExp {
  InputpokemonV2EgggroupnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.egg_group_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_egggroup,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EgggroupnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EgggroupnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EgggroupnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EgggroupnameBoolExp>? $_or;

  final InputIntComparisonExp? egg_group_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EgggroupBoolExp? pokemon_v2_egggroup;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_egggroup = pokemon_v2_egggroup;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$egg_group_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_egggroup,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_egggroup = pokemon_v2_egggroup;
    final lOther$pokemon_v2_egggroup = other.pokemon_v2_egggroup;
    if (l$pokemon_v2_egggroup != lOther$pokemon_v2_egggroup) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameMaxOrderBy {
  InputpokemonV2EgggroupnameMaxOrderBy(
      {this.egg_group_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2EgggroupnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameMaxOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameMinOrderBy {
  InputpokemonV2EgggroupnameMinOrderBy(
      {this.egg_group_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2EgggroupnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameMinOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameOrderBy {
  InputpokemonV2EgggroupnameOrderBy(
      {this.egg_group_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_egggroup,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EgggroupnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EgggroupOrderBy? pokemon_v2_egggroup;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_egggroup = pokemon_v2_egggroup;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$egg_group_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_egggroup,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_egggroup = pokemon_v2_egggroup;
    final lOther$pokemon_v2_egggroup = other.pokemon_v2_egggroup;
    if (l$pokemon_v2_egggroup != lOther$pokemon_v2_egggroup) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameStddevOrderBy {
  InputpokemonV2EgggroupnameStddevOrderBy(
      {this.egg_group_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EgggroupnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameStddevOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameStddevPopOrderBy {
  InputpokemonV2EgggroupnameStddevPopOrderBy(
      {this.egg_group_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EgggroupnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameStddevSampOrderBy {
  InputpokemonV2EgggroupnameStddevSampOrderBy(
      {this.egg_group_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EgggroupnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameSumOrderBy {
  InputpokemonV2EgggroupnameSumOrderBy(
      {this.egg_group_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EgggroupnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameSumOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameVarPopOrderBy {
  InputpokemonV2EgggroupnameVarPopOrderBy(
      {this.egg_group_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EgggroupnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameVarSampOrderBy {
  InputpokemonV2EgggroupnameVarSampOrderBy(
      {this.egg_group_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EgggroupnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EgggroupnameVarianceOrderBy {
  InputpokemonV2EgggroupnameVarianceOrderBy(
      {this.egg_group_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EgggroupnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EgggroupnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EgggroupnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$egg_group_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EgggroupnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterAggregateOrderBy {
  InputpokemonV2EncounterAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EncounterAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterAggregateOrderByFromJson(json);

  final InputpokemonV2EncounterAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EncounterMaxOrderBy? max;

  final InputpokemonV2EncounterMinOrderBy? min;

  final InputpokemonV2EncounterStddevOrderBy? stddev;

  final InputpokemonV2EncounterStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EncounterStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EncounterSumOrderBy? sum;

  final InputpokemonV2EncounterVarPopOrderBy? var_pop;

  final InputpokemonV2EncounterVarSampOrderBy? var_samp;

  final InputpokemonV2EncounterVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterAvgOrderBy {
  InputpokemonV2EncounterAvgOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterAvgOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterBoolExp {
  InputpokemonV2EncounterBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.pokemon_v2_encounterconditionvaluemaps,
      this.pokemon_v2_encounterslot,
      this.pokemon_v2_locationarea,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_version,
      this.version_id});

  @override
  factory InputpokemonV2EncounterBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncounterBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncounterBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncounterBoolExp>? $_or;

  final InputIntComparisonExp? encounter_slot_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? location_area_id;

  final InputIntComparisonExp? max_level;

  final InputIntComparisonExp? min_level;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2EncounterconditionvaluemapBoolExp?
      pokemon_v2_encounterconditionvaluemaps;

  final InputpokemonV2EncounterslotBoolExp? pokemon_v2_encounterslot;

  final InputpokemonV2LocationareaBoolExp? pokemon_v2_locationarea;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputpokemonV2VersionBoolExp? pokemon_v2_version;

  final InputIntComparisonExp? version_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2EncounterBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_encounterconditionvaluemaps =
        pokemon_v2_encounterconditionvaluemaps;
    final l$pokemon_v2_encounterslot = pokemon_v2_encounterslot;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$version_id = version_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$pokemon_v2_encounterconditionvaluemaps,
      l$pokemon_v2_encounterslot,
      l$pokemon_v2_locationarea,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_version,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_encounterconditionvaluemaps =
        pokemon_v2_encounterconditionvaluemaps;
    final lOther$pokemon_v2_encounterconditionvaluemaps =
        other.pokemon_v2_encounterconditionvaluemaps;
    if (l$pokemon_v2_encounterconditionvaluemaps !=
        lOther$pokemon_v2_encounterconditionvaluemaps) return false;
    final l$pokemon_v2_encounterslot = pokemon_v2_encounterslot;
    final lOther$pokemon_v2_encounterslot = other.pokemon_v2_encounterslot;
    if (l$pokemon_v2_encounterslot != lOther$pokemon_v2_encounterslot)
      return false;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final lOther$pokemon_v2_locationarea = other.pokemon_v2_locationarea;
    if (l$pokemon_v2_locationarea != lOther$pokemon_v2_locationarea)
      return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterMaxOrderBy {
  InputpokemonV2EncounterMaxOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterMaxOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterMinOrderBy {
  InputpokemonV2EncounterMinOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterMinOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterOrderBy {
  InputpokemonV2EncounterOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.pokemon_v2_encounterconditionvaluemaps_aggregate,
      this.pokemon_v2_encounterslot,
      this.pokemon_v2_locationarea,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_version,
      this.version_id});

  @override
  factory InputpokemonV2EncounterOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2EncounterconditionvaluemapAggregateOrderBy?
      pokemon_v2_encounterconditionvaluemaps_aggregate;

  final InputpokemonV2EncounterslotOrderBy? pokemon_v2_encounterslot;

  final InputpokemonV2LocationareaOrderBy? pokemon_v2_locationarea;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  final InputpokemonV2VersionOrderBy? pokemon_v2_version;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2EncounterOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_encounterconditionvaluemaps_aggregate =
        pokemon_v2_encounterconditionvaluemaps_aggregate;
    final l$pokemon_v2_encounterslot = pokemon_v2_encounterslot;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$pokemon_v2_encounterconditionvaluemaps_aggregate,
      l$pokemon_v2_encounterslot,
      l$pokemon_v2_locationarea,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_version,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_encounterconditionvaluemaps_aggregate =
        pokemon_v2_encounterconditionvaluemaps_aggregate;
    final lOther$pokemon_v2_encounterconditionvaluemaps_aggregate =
        other.pokemon_v2_encounterconditionvaluemaps_aggregate;
    if (l$pokemon_v2_encounterconditionvaluemaps_aggregate !=
        lOther$pokemon_v2_encounterconditionvaluemaps_aggregate) return false;
    final l$pokemon_v2_encounterslot = pokemon_v2_encounterslot;
    final lOther$pokemon_v2_encounterslot = other.pokemon_v2_encounterslot;
    if (l$pokemon_v2_encounterslot != lOther$pokemon_v2_encounterslot)
      return false;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final lOther$pokemon_v2_locationarea = other.pokemon_v2_locationarea;
    if (l$pokemon_v2_locationarea != lOther$pokemon_v2_locationarea)
      return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterStddevOrderBy {
  InputpokemonV2EncounterStddevOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterStddevOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterStddevPopOrderBy {
  InputpokemonV2EncounterStddevPopOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterStddevPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterStddevSampOrderBy {
  InputpokemonV2EncounterStddevSampOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterStddevSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterSumOrderBy {
  InputpokemonV2EncounterSumOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterSumOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterVarPopOrderBy {
  InputpokemonV2EncounterVarPopOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterVarPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterVarSampOrderBy {
  InputpokemonV2EncounterVarSampOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterVarSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterVarianceOrderBy {
  InputpokemonV2EncounterVarianceOrderBy(
      {this.encounter_slot_id,
      this.id,
      this.location_area_id,
      this.max_level,
      this.min_level,
      this.pokemon_id,
      this.version_id});

  @override
  factory InputpokemonV2EncounterVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_slot_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterVarianceOrderByToJson(this);
  int get hashCode {
    final l$encounter_slot_id = encounter_slot_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$max_level = max_level;
    final l$min_level = min_level;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_slot_id,
      l$id,
      l$location_area_id,
      l$max_level,
      l$min_level,
      l$pokemon_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_slot_id = encounter_slot_id;
    final lOther$encounter_slot_id = other.encounter_slot_id;
    if (l$encounter_slot_id != lOther$encounter_slot_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$max_level = max_level;
    final lOther$max_level = other.max_level;
    if (l$max_level != lOther$max_level) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionBoolExp {
  InputpokemonV2EncounterconditionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_encounterconditionnames,
      this.pokemon_v2_encounterconditionvalues});

  @override
  factory InputpokemonV2EncounterconditionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncounterconditionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncounterconditionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncounterconditionBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EncounterconditionnameBoolExp?
      pokemon_v2_encounterconditionnames;

  final InputpokemonV2EncounterconditionvalueBoolExp?
      pokemon_v2_encounterconditionvalues;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_encounterconditionnames =
        pokemon_v2_encounterconditionnames;
    final l$pokemon_v2_encounterconditionvalues =
        pokemon_v2_encounterconditionvalues;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_encounterconditionnames,
      l$pokemon_v2_encounterconditionvalues
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encounterconditionnames =
        pokemon_v2_encounterconditionnames;
    final lOther$pokemon_v2_encounterconditionnames =
        other.pokemon_v2_encounterconditionnames;
    if (l$pokemon_v2_encounterconditionnames !=
        lOther$pokemon_v2_encounterconditionnames) return false;
    final l$pokemon_v2_encounterconditionvalues =
        pokemon_v2_encounterconditionvalues;
    final lOther$pokemon_v2_encounterconditionvalues =
        other.pokemon_v2_encounterconditionvalues;
    if (l$pokemon_v2_encounterconditionvalues !=
        lOther$pokemon_v2_encounterconditionvalues) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionOrderBy {
  InputpokemonV2EncounterconditionOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_encounterconditionnames_aggregate,
      this.pokemon_v2_encounterconditionvalues_aggregate});

  @override
  factory InputpokemonV2EncounterconditionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EncounterconditionnameAggregateOrderBy?
      pokemon_v2_encounterconditionnames_aggregate;

  final InputpokemonV2EncounterconditionvalueAggregateOrderBy?
      pokemon_v2_encounterconditionvalues_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_encounterconditionnames_aggregate =
        pokemon_v2_encounterconditionnames_aggregate;
    final l$pokemon_v2_encounterconditionvalues_aggregate =
        pokemon_v2_encounterconditionvalues_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_encounterconditionnames_aggregate,
      l$pokemon_v2_encounterconditionvalues_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encounterconditionnames_aggregate =
        pokemon_v2_encounterconditionnames_aggregate;
    final lOther$pokemon_v2_encounterconditionnames_aggregate =
        other.pokemon_v2_encounterconditionnames_aggregate;
    if (l$pokemon_v2_encounterconditionnames_aggregate !=
        lOther$pokemon_v2_encounterconditionnames_aggregate) return false;
    final l$pokemon_v2_encounterconditionvalues_aggregate =
        pokemon_v2_encounterconditionvalues_aggregate;
    final lOther$pokemon_v2_encounterconditionvalues_aggregate =
        other.pokemon_v2_encounterconditionvalues_aggregate;
    if (l$pokemon_v2_encounterconditionvalues_aggregate !=
        lOther$pokemon_v2_encounterconditionvalues_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameAggregateOrderBy {
  InputpokemonV2EncounterconditionnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EncounterconditionnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameAggregateOrderByFromJson(json);

  final InputpokemonV2EncounterconditionnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EncounterconditionnameMaxOrderBy? max;

  final InputpokemonV2EncounterconditionnameMinOrderBy? min;

  final InputpokemonV2EncounterconditionnameStddevOrderBy? stddev;

  final InputpokemonV2EncounterconditionnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EncounterconditionnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EncounterconditionnameSumOrderBy? sum;

  final InputpokemonV2EncounterconditionnameVarPopOrderBy? var_pop;

  final InputpokemonV2EncounterconditionnameVarSampOrderBy? var_samp;

  final InputpokemonV2EncounterconditionnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameAvgOrderBy {
  InputpokemonV2EncounterconditionnameAvgOrderBy(
      {this.encounter_condition_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameAvgOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_condition_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameBoolExp {
  InputpokemonV2EncounterconditionnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.encounter_condition_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_encountercondition,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EncounterconditionnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncounterconditionnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncounterconditionnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncounterconditionnameBoolExp>? $_or;

  final InputIntComparisonExp? encounter_condition_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EncounterconditionBoolExp? pokemon_v2_encountercondition;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_encountercondition = pokemon_v2_encountercondition;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$encounter_condition_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_encountercondition,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encountercondition = pokemon_v2_encountercondition;
    final lOther$pokemon_v2_encountercondition =
        other.pokemon_v2_encountercondition;
    if (l$pokemon_v2_encountercondition != lOther$pokemon_v2_encountercondition)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameMaxOrderBy {
  InputpokemonV2EncounterconditionnameMaxOrderBy(
      {this.encounter_condition_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2EncounterconditionnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameMaxOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll(
        [l$encounter_condition_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameMinOrderBy {
  InputpokemonV2EncounterconditionnameMinOrderBy(
      {this.encounter_condition_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2EncounterconditionnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameMinOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll(
        [l$encounter_condition_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameOrderBy {
  InputpokemonV2EncounterconditionnameOrderBy(
      {this.encounter_condition_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_encountercondition,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EncounterconditionnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EncounterconditionOrderBy? pokemon_v2_encountercondition;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_encountercondition = pokemon_v2_encountercondition;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$encounter_condition_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_encountercondition,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encountercondition = pokemon_v2_encountercondition;
    final lOther$pokemon_v2_encountercondition =
        other.pokemon_v2_encountercondition;
    if (l$pokemon_v2_encountercondition != lOther$pokemon_v2_encountercondition)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameStddevOrderBy {
  InputpokemonV2EncounterconditionnameStddevOrderBy(
      {this.encounter_condition_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameStddevOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_condition_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameStddevPopOrderBy {
  InputpokemonV2EncounterconditionnameStddevPopOrderBy(
      {this.encounter_condition_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_condition_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameStddevSampOrderBy {
  InputpokemonV2EncounterconditionnameStddevSampOrderBy(
      {this.encounter_condition_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_condition_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameSumOrderBy {
  InputpokemonV2EncounterconditionnameSumOrderBy(
      {this.encounter_condition_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameSumOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_condition_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameVarPopOrderBy {
  InputpokemonV2EncounterconditionnameVarPopOrderBy(
      {this.encounter_condition_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_condition_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameVarSampOrderBy {
  InputpokemonV2EncounterconditionnameVarSampOrderBy(
      {this.encounter_condition_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_condition_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionnameVarianceOrderBy {
  InputpokemonV2EncounterconditionnameVarianceOrderBy(
      {this.encounter_condition_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_condition_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueAggregateOrderBy {
  InputpokemonV2EncounterconditionvalueAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EncounterconditionvalueAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueAggregateOrderByFromJson(json);

  final InputpokemonV2EncounterconditionvalueAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EncounterconditionvalueMaxOrderBy? max;

  final InputpokemonV2EncounterconditionvalueMinOrderBy? min;

  final InputpokemonV2EncounterconditionvalueStddevOrderBy? stddev;

  final InputpokemonV2EncounterconditionvalueStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EncounterconditionvalueStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EncounterconditionvalueSumOrderBy? sum;

  final InputpokemonV2EncounterconditionvalueVarPopOrderBy? var_pop;

  final InputpokemonV2EncounterconditionvalueVarSampOrderBy? var_samp;

  final InputpokemonV2EncounterconditionvalueVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueAvgOrderBy {
  InputpokemonV2EncounterconditionvalueAvgOrderBy(
      {this.encounter_condition_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvalueAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueAvgOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    return Object.hashAll([l$encounter_condition_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueBoolExp {
  InputpokemonV2EncounterconditionvalueBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.encounter_condition_id,
      this.id,
      this.is_default,
      this.name,
      this.pokemon_v2_encountercondition,
      this.pokemon_v2_encounterconditionvaluemaps,
      this.pokemon_v2_encounterconditionvaluenames});

  @override
  factory InputpokemonV2EncounterconditionvalueBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncounterconditionvalueBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncounterconditionvalueBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncounterconditionvalueBoolExp>? $_or;

  final InputIntComparisonExp? encounter_condition_id;

  final InputIntComparisonExp? id;

  final InputBooleanComparisonExp? is_default;

  final InputStringComparisonExp? name;

  final InputpokemonV2EncounterconditionBoolExp? pokemon_v2_encountercondition;

  final InputpokemonV2EncounterconditionvaluemapBoolExp?
      pokemon_v2_encounterconditionvaluemaps;

  final InputpokemonV2EncounterconditionvaluenameBoolExp?
      pokemon_v2_encounterconditionvaluenames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$is_default = is_default;
    final l$name = name;
    final l$pokemon_v2_encountercondition = pokemon_v2_encountercondition;
    final l$pokemon_v2_encounterconditionvaluemaps =
        pokemon_v2_encounterconditionvaluemaps;
    final l$pokemon_v2_encounterconditionvaluenames =
        pokemon_v2_encounterconditionvaluenames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$encounter_condition_id,
      l$id,
      l$is_default,
      l$name,
      l$pokemon_v2_encountercondition,
      l$pokemon_v2_encounterconditionvaluemaps,
      l$pokemon_v2_encounterconditionvaluenames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_default = is_default;
    final lOther$is_default = other.is_default;
    if (l$is_default != lOther$is_default) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encountercondition = pokemon_v2_encountercondition;
    final lOther$pokemon_v2_encountercondition =
        other.pokemon_v2_encountercondition;
    if (l$pokemon_v2_encountercondition != lOther$pokemon_v2_encountercondition)
      return false;
    final l$pokemon_v2_encounterconditionvaluemaps =
        pokemon_v2_encounterconditionvaluemaps;
    final lOther$pokemon_v2_encounterconditionvaluemaps =
        other.pokemon_v2_encounterconditionvaluemaps;
    if (l$pokemon_v2_encounterconditionvaluemaps !=
        lOther$pokemon_v2_encounterconditionvaluemaps) return false;
    final l$pokemon_v2_encounterconditionvaluenames =
        pokemon_v2_encounterconditionvaluenames;
    final lOther$pokemon_v2_encounterconditionvaluenames =
        other.pokemon_v2_encounterconditionvaluenames;
    if (l$pokemon_v2_encounterconditionvaluenames !=
        lOther$pokemon_v2_encounterconditionvaluenames) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueMaxOrderBy {
  InputpokemonV2EncounterconditionvalueMaxOrderBy(
      {this.encounter_condition_id, this.id, this.name});

  @override
  factory InputpokemonV2EncounterconditionvalueMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueMaxOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$name = name;
    return Object.hashAll([l$encounter_condition_id, l$id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueMinOrderBy {
  InputpokemonV2EncounterconditionvalueMinOrderBy(
      {this.encounter_condition_id, this.id, this.name});

  @override
  factory InputpokemonV2EncounterconditionvalueMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueMinOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$name = name;
    return Object.hashAll([l$encounter_condition_id, l$id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueOrderBy {
  InputpokemonV2EncounterconditionvalueOrderBy(
      {this.encounter_condition_id,
      this.id,
      this.is_default,
      this.name,
      this.pokemon_v2_encountercondition,
      this.pokemon_v2_encounterconditionvaluemaps_aggregate,
      this.pokemon_v2_encounterconditionvaluenames_aggregate});

  @override
  factory InputpokemonV2EncounterconditionvalueOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_default;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EncounterconditionOrderBy? pokemon_v2_encountercondition;

  final InputpokemonV2EncounterconditionvaluemapAggregateOrderBy?
      pokemon_v2_encounterconditionvaluemaps_aggregate;

  final InputpokemonV2EncounterconditionvaluenameAggregateOrderBy?
      pokemon_v2_encounterconditionvaluenames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    final l$is_default = is_default;
    final l$name = name;
    final l$pokemon_v2_encountercondition = pokemon_v2_encountercondition;
    final l$pokemon_v2_encounterconditionvaluemaps_aggregate =
        pokemon_v2_encounterconditionvaluemaps_aggregate;
    final l$pokemon_v2_encounterconditionvaluenames_aggregate =
        pokemon_v2_encounterconditionvaluenames_aggregate;
    return Object.hashAll([
      l$encounter_condition_id,
      l$id,
      l$is_default,
      l$name,
      l$pokemon_v2_encountercondition,
      l$pokemon_v2_encounterconditionvaluemaps_aggregate,
      l$pokemon_v2_encounterconditionvaluenames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_default = is_default;
    final lOther$is_default = other.is_default;
    if (l$is_default != lOther$is_default) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encountercondition = pokemon_v2_encountercondition;
    final lOther$pokemon_v2_encountercondition =
        other.pokemon_v2_encountercondition;
    if (l$pokemon_v2_encountercondition != lOther$pokemon_v2_encountercondition)
      return false;
    final l$pokemon_v2_encounterconditionvaluemaps_aggregate =
        pokemon_v2_encounterconditionvaluemaps_aggregate;
    final lOther$pokemon_v2_encounterconditionvaluemaps_aggregate =
        other.pokemon_v2_encounterconditionvaluemaps_aggregate;
    if (l$pokemon_v2_encounterconditionvaluemaps_aggregate !=
        lOther$pokemon_v2_encounterconditionvaluemaps_aggregate) return false;
    final l$pokemon_v2_encounterconditionvaluenames_aggregate =
        pokemon_v2_encounterconditionvaluenames_aggregate;
    final lOther$pokemon_v2_encounterconditionvaluenames_aggregate =
        other.pokemon_v2_encounterconditionvaluenames_aggregate;
    if (l$pokemon_v2_encounterconditionvaluenames_aggregate !=
        lOther$pokemon_v2_encounterconditionvaluenames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueStddevOrderBy {
  InputpokemonV2EncounterconditionvalueStddevOrderBy(
      {this.encounter_condition_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvalueStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueStddevOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    return Object.hashAll([l$encounter_condition_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueStddevPopOrderBy {
  InputpokemonV2EncounterconditionvalueStddevPopOrderBy(
      {this.encounter_condition_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvalueStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueStddevPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    return Object.hashAll([l$encounter_condition_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueStddevSampOrderBy {
  InputpokemonV2EncounterconditionvalueStddevSampOrderBy(
      {this.encounter_condition_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvalueStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueStddevSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    return Object.hashAll([l$encounter_condition_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueSumOrderBy {
  InputpokemonV2EncounterconditionvalueSumOrderBy(
      {this.encounter_condition_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvalueSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueSumOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    return Object.hashAll([l$encounter_condition_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueVarPopOrderBy {
  InputpokemonV2EncounterconditionvalueVarPopOrderBy(
      {this.encounter_condition_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvalueVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueVarPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    return Object.hashAll([l$encounter_condition_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueVarSampOrderBy {
  InputpokemonV2EncounterconditionvalueVarSampOrderBy(
      {this.encounter_condition_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvalueVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueVarSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    return Object.hashAll([l$encounter_condition_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvalueVarianceOrderBy {
  InputpokemonV2EncounterconditionvalueVarianceOrderBy(
      {this.encounter_condition_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvalueVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvalueVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvalueVarianceOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_id = encounter_condition_id;
    final l$id = id;
    return Object.hashAll([l$encounter_condition_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvalueVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_id = encounter_condition_id;
    final lOther$encounter_condition_id = other.encounter_condition_id;
    if (l$encounter_condition_id != lOther$encounter_condition_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapAggregateOrderBy {
  InputpokemonV2EncounterconditionvaluemapAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EncounterconditionvaluemapAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapAggregateOrderByFromJson(json);

  final InputpokemonV2EncounterconditionvaluemapAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EncounterconditionvaluemapMaxOrderBy? max;

  final InputpokemonV2EncounterconditionvaluemapMinOrderBy? min;

  final InputpokemonV2EncounterconditionvaluemapStddevOrderBy? stddev;

  final InputpokemonV2EncounterconditionvaluemapStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EncounterconditionvaluemapStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EncounterconditionvaluemapSumOrderBy? sum;

  final InputpokemonV2EncounterconditionvaluemapVarPopOrderBy? var_pop;

  final InputpokemonV2EncounterconditionvaluemapVarSampOrderBy? var_samp;

  final InputpokemonV2EncounterconditionvaluemapVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapAvgOrderBy {
  InputpokemonV2EncounterconditionvaluemapAvgOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapAvgOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapBoolExp {
  InputpokemonV2EncounterconditionvaluemapBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.encounter_condition_value_id,
      this.encounter_id,
      this.id,
      this.pokemon_v2_encounter,
      this.pokemon_v2_encounterconditionvalue});

  @override
  factory InputpokemonV2EncounterconditionvaluemapBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncounterconditionvaluemapBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncounterconditionvaluemapBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncounterconditionvaluemapBoolExp>? $_or;

  final InputIntComparisonExp? encounter_condition_value_id;

  final InputIntComparisonExp? encounter_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2EncounterBoolExp? pokemon_v2_encounter;

  final InputpokemonV2EncounterconditionvalueBoolExp?
      pokemon_v2_encounterconditionvalue;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    final l$pokemon_v2_encounter = pokemon_v2_encounter;
    final l$pokemon_v2_encounterconditionvalue =
        pokemon_v2_encounterconditionvalue;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$encounter_condition_value_id,
      l$encounter_id,
      l$id,
      l$pokemon_v2_encounter,
      l$pokemon_v2_encounterconditionvalue
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_encounter = pokemon_v2_encounter;
    final lOther$pokemon_v2_encounter = other.pokemon_v2_encounter;
    if (l$pokemon_v2_encounter != lOther$pokemon_v2_encounter) return false;
    final l$pokemon_v2_encounterconditionvalue =
        pokemon_v2_encounterconditionvalue;
    final lOther$pokemon_v2_encounterconditionvalue =
        other.pokemon_v2_encounterconditionvalue;
    if (l$pokemon_v2_encounterconditionvalue !=
        lOther$pokemon_v2_encounterconditionvalue) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapMaxOrderBy {
  InputpokemonV2EncounterconditionvaluemapMaxOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapMaxOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapMinOrderBy {
  InputpokemonV2EncounterconditionvaluemapMinOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapMinOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapOrderBy {
  InputpokemonV2EncounterconditionvaluemapOrderBy(
      {this.encounter_condition_value_id,
      this.encounter_id,
      this.id,
      this.pokemon_v2_encounter,
      this.pokemon_v2_encounterconditionvalue});

  @override
  factory InputpokemonV2EncounterconditionvaluemapOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2EncounterOrderBy? pokemon_v2_encounter;

  final InputpokemonV2EncounterconditionvalueOrderBy?
      pokemon_v2_encounterconditionvalue;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    final l$pokemon_v2_encounter = pokemon_v2_encounter;
    final l$pokemon_v2_encounterconditionvalue =
        pokemon_v2_encounterconditionvalue;
    return Object.hashAll([
      l$encounter_condition_value_id,
      l$encounter_id,
      l$id,
      l$pokemon_v2_encounter,
      l$pokemon_v2_encounterconditionvalue
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_encounter = pokemon_v2_encounter;
    final lOther$pokemon_v2_encounter = other.pokemon_v2_encounter;
    if (l$pokemon_v2_encounter != lOther$pokemon_v2_encounter) return false;
    final l$pokemon_v2_encounterconditionvalue =
        pokemon_v2_encounterconditionvalue;
    final lOther$pokemon_v2_encounterconditionvalue =
        other.pokemon_v2_encounterconditionvalue;
    if (l$pokemon_v2_encounterconditionvalue !=
        lOther$pokemon_v2_encounterconditionvalue) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapStddevOrderBy {
  InputpokemonV2EncounterconditionvaluemapStddevOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapStddevOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapStddevPopOrderBy {
  InputpokemonV2EncounterconditionvaluemapStddevPopOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapStddevPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapStddevSampOrderBy {
  InputpokemonV2EncounterconditionvaluemapStddevSampOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapStddevSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapSumOrderBy {
  InputpokemonV2EncounterconditionvaluemapSumOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapSumOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapVarPopOrderBy {
  InputpokemonV2EncounterconditionvaluemapVarPopOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapVarPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapVarSampOrderBy {
  InputpokemonV2EncounterconditionvaluemapVarSampOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapVarSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluemapVarianceOrderBy {
  InputpokemonV2EncounterconditionvaluemapVarianceOrderBy(
      {this.encounter_condition_value_id, this.encounter_id, this.id});

  @override
  factory InputpokemonV2EncounterconditionvaluemapVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluemapVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluemapVarianceOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$encounter_id = encounter_id;
    final l$id = id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$encounter_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluemapVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$encounter_id = encounter_id;
    final lOther$encounter_id = other.encounter_id;
    if (l$encounter_id != lOther$encounter_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameAggregateOrderBy {
  InputpokemonV2EncounterconditionvaluenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EncounterconditionvaluenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameAggregateOrderByFromJson(json);

  final InputpokemonV2EncounterconditionvaluenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EncounterconditionvaluenameMaxOrderBy? max;

  final InputpokemonV2EncounterconditionvaluenameMinOrderBy? min;

  final InputpokemonV2EncounterconditionvaluenameStddevOrderBy? stddev;

  final InputpokemonV2EncounterconditionvaluenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EncounterconditionvaluenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EncounterconditionvaluenameSumOrderBy? sum;

  final InputpokemonV2EncounterconditionvaluenameVarPopOrderBy? var_pop;

  final InputpokemonV2EncounterconditionvaluenameVarSampOrderBy? var_samp;

  final InputpokemonV2EncounterconditionvaluenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameAvgOrderBy {
  InputpokemonV2EncounterconditionvaluenameAvgOrderBy(
      {this.encounter_condition_value_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionvaluenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameAvgOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameBoolExp {
  InputpokemonV2EncounterconditionvaluenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.encounter_condition_value_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_encounterconditionvalue,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EncounterconditionvaluenameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncounterconditionvaluenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncounterconditionvaluenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncounterconditionvaluenameBoolExp>? $_or;

  final InputIntComparisonExp? encounter_condition_value_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EncounterconditionvalueBoolExp?
      pokemon_v2_encounterconditionvalue;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_encounterconditionvalue =
        pokemon_v2_encounterconditionvalue;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$encounter_condition_value_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_encounterconditionvalue,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encounterconditionvalue =
        pokemon_v2_encounterconditionvalue;
    final lOther$pokemon_v2_encounterconditionvalue =
        other.pokemon_v2_encounterconditionvalue;
    if (l$pokemon_v2_encounterconditionvalue !=
        lOther$pokemon_v2_encounterconditionvalue) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameMaxOrderBy {
  InputpokemonV2EncounterconditionvaluenameMaxOrderBy(
      {this.encounter_condition_value_id,
      this.id,
      this.language_id,
      this.name});

  @override
  factory InputpokemonV2EncounterconditionvaluenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameMaxOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameMinOrderBy {
  InputpokemonV2EncounterconditionvaluenameMinOrderBy(
      {this.encounter_condition_value_id,
      this.id,
      this.language_id,
      this.name});

  @override
  factory InputpokemonV2EncounterconditionvaluenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameMinOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameOrderBy {
  InputpokemonV2EncounterconditionvaluenameOrderBy(
      {this.encounter_condition_value_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_encounterconditionvalue,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EncounterconditionvaluenameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EncounterconditionvalueOrderBy?
      pokemon_v2_encounterconditionvalue;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_encounterconditionvalue =
        pokemon_v2_encounterconditionvalue;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$encounter_condition_value_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_encounterconditionvalue,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encounterconditionvalue =
        pokemon_v2_encounterconditionvalue;
    final lOther$pokemon_v2_encounterconditionvalue =
        other.pokemon_v2_encounterconditionvalue;
    if (l$pokemon_v2_encounterconditionvalue !=
        lOther$pokemon_v2_encounterconditionvalue) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameStddevOrderBy {
  InputpokemonV2EncounterconditionvaluenameStddevOrderBy(
      {this.encounter_condition_value_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionvaluenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameStddevOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameStddevPopOrderBy {
  InputpokemonV2EncounterconditionvaluenameStddevPopOrderBy(
      {this.encounter_condition_value_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionvaluenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameStddevSampOrderBy {
  InputpokemonV2EncounterconditionvaluenameStddevSampOrderBy(
      {this.encounter_condition_value_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionvaluenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameStddevSampOrderByFromJson(
          json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other
            is InputpokemonV2EncounterconditionvaluenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameSumOrderBy {
  InputpokemonV2EncounterconditionvaluenameSumOrderBy(
      {this.encounter_condition_value_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionvaluenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameSumOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameVarPopOrderBy {
  InputpokemonV2EncounterconditionvaluenameVarPopOrderBy(
      {this.encounter_condition_value_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionvaluenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameVarSampOrderBy {
  InputpokemonV2EncounterconditionvaluenameVarSampOrderBy(
      {this.encounter_condition_value_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionvaluenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterconditionvaluenameVarianceOrderBy {
  InputpokemonV2EncounterconditionvaluenameVarianceOrderBy(
      {this.encounter_condition_value_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncounterconditionvaluenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterconditionvaluenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_condition_value_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterconditionvaluenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$encounter_condition_value_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterconditionvaluenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_condition_value_id = encounter_condition_value_id;
    final lOther$encounter_condition_value_id =
        other.encounter_condition_value_id;
    if (l$encounter_condition_value_id != lOther$encounter_condition_value_id)
      return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodBoolExp {
  InputpokemonV2EncountermethodBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.order,
      this.pokemon_v2_encountermethodnames,
      this.pokemon_v2_encounterslots,
      this.pokemon_v2_locationareaencounterrates});

  @override
  factory InputpokemonV2EncountermethodBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncountermethodBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncountermethodBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncountermethodBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? order;

  final InputpokemonV2EncountermethodnameBoolExp?
      pokemon_v2_encountermethodnames;

  final InputpokemonV2EncounterslotBoolExp? pokemon_v2_encounterslots;

  final InputpokemonV2LocationareaencounterrateBoolExp?
      pokemon_v2_locationareaencounterrates;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_v2_encountermethodnames = pokemon_v2_encountermethodnames;
    final l$pokemon_v2_encounterslots = pokemon_v2_encounterslots;
    final l$pokemon_v2_locationareaencounterrates =
        pokemon_v2_locationareaencounterrates;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$order,
      l$pokemon_v2_encountermethodnames,
      l$pokemon_v2_encounterslots,
      l$pokemon_v2_locationareaencounterrates
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_v2_encountermethodnames = pokemon_v2_encountermethodnames;
    final lOther$pokemon_v2_encountermethodnames =
        other.pokemon_v2_encountermethodnames;
    if (l$pokemon_v2_encountermethodnames !=
        lOther$pokemon_v2_encountermethodnames) return false;
    final l$pokemon_v2_encounterslots = pokemon_v2_encounterslots;
    final lOther$pokemon_v2_encounterslots = other.pokemon_v2_encounterslots;
    if (l$pokemon_v2_encounterslots != lOther$pokemon_v2_encounterslots)
      return false;
    final l$pokemon_v2_locationareaencounterrates =
        pokemon_v2_locationareaencounterrates;
    final lOther$pokemon_v2_locationareaencounterrates =
        other.pokemon_v2_locationareaencounterrates;
    if (l$pokemon_v2_locationareaencounterrates !=
        lOther$pokemon_v2_locationareaencounterrates) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodOrderBy {
  InputpokemonV2EncountermethodOrderBy(
      {this.id,
      this.name,
      this.order,
      this.pokemon_v2_encountermethodnames_aggregate,
      this.pokemon_v2_encounterslots_aggregate,
      this.pokemon_v2_locationareaencounterrates_aggregate});

  @override
  factory InputpokemonV2EncountermethodOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  final InputpokemonV2EncountermethodnameAggregateOrderBy?
      pokemon_v2_encountermethodnames_aggregate;

  final InputpokemonV2EncounterslotAggregateOrderBy?
      pokemon_v2_encounterslots_aggregate;

  final InputpokemonV2LocationareaencounterrateAggregateOrderBy?
      pokemon_v2_locationareaencounterrates_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_v2_encountermethodnames_aggregate =
        pokemon_v2_encountermethodnames_aggregate;
    final l$pokemon_v2_encounterslots_aggregate =
        pokemon_v2_encounterslots_aggregate;
    final l$pokemon_v2_locationareaencounterrates_aggregate =
        pokemon_v2_locationareaencounterrates_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$order,
      l$pokemon_v2_encountermethodnames_aggregate,
      l$pokemon_v2_encounterslots_aggregate,
      l$pokemon_v2_locationareaencounterrates_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_v2_encountermethodnames_aggregate =
        pokemon_v2_encountermethodnames_aggregate;
    final lOther$pokemon_v2_encountermethodnames_aggregate =
        other.pokemon_v2_encountermethodnames_aggregate;
    if (l$pokemon_v2_encountermethodnames_aggregate !=
        lOther$pokemon_v2_encountermethodnames_aggregate) return false;
    final l$pokemon_v2_encounterslots_aggregate =
        pokemon_v2_encounterslots_aggregate;
    final lOther$pokemon_v2_encounterslots_aggregate =
        other.pokemon_v2_encounterslots_aggregate;
    if (l$pokemon_v2_encounterslots_aggregate !=
        lOther$pokemon_v2_encounterslots_aggregate) return false;
    final l$pokemon_v2_locationareaencounterrates_aggregate =
        pokemon_v2_locationareaencounterrates_aggregate;
    final lOther$pokemon_v2_locationareaencounterrates_aggregate =
        other.pokemon_v2_locationareaencounterrates_aggregate;
    if (l$pokemon_v2_locationareaencounterrates_aggregate !=
        lOther$pokemon_v2_locationareaencounterrates_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameAggregateOrderBy {
  InputpokemonV2EncountermethodnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EncountermethodnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameAggregateOrderByFromJson(json);

  final InputpokemonV2EncountermethodnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EncountermethodnameMaxOrderBy? max;

  final InputpokemonV2EncountermethodnameMinOrderBy? min;

  final InputpokemonV2EncountermethodnameStddevOrderBy? stddev;

  final InputpokemonV2EncountermethodnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EncountermethodnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EncountermethodnameSumOrderBy? sum;

  final InputpokemonV2EncountermethodnameVarPopOrderBy? var_pop;

  final InputpokemonV2EncountermethodnameVarSampOrderBy? var_samp;

  final InputpokemonV2EncountermethodnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameAvgOrderBy {
  InputpokemonV2EncountermethodnameAvgOrderBy(
      {this.encounter_method_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncountermethodnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameAvgOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameBoolExp {
  InputpokemonV2EncountermethodnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.encounter_method_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_encountermethod,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EncountermethodnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncountermethodnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncountermethodnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncountermethodnameBoolExp>? $_or;

  final InputIntComparisonExp? encounter_method_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EncountermethodBoolExp? pokemon_v2_encountermethod;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$encounter_method_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_encountermethod,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final lOther$pokemon_v2_encountermethod = other.pokemon_v2_encountermethod;
    if (l$pokemon_v2_encountermethod != lOther$pokemon_v2_encountermethod)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameMaxOrderBy {
  InputpokemonV2EncountermethodnameMaxOrderBy(
      {this.encounter_method_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2EncountermethodnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameMaxOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameMinOrderBy {
  InputpokemonV2EncountermethodnameMinOrderBy(
      {this.encounter_method_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2EncountermethodnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameMinOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameOrderBy {
  InputpokemonV2EncountermethodnameOrderBy(
      {this.encounter_method_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_encountermethod,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EncountermethodnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EncountermethodOrderBy? pokemon_v2_encountermethod;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_encountermethod,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final lOther$pokemon_v2_encountermethod = other.pokemon_v2_encountermethod;
    if (l$pokemon_v2_encountermethod != lOther$pokemon_v2_encountermethod)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameStddevOrderBy {
  InputpokemonV2EncountermethodnameStddevOrderBy(
      {this.encounter_method_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncountermethodnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameStddevOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameStddevPopOrderBy {
  InputpokemonV2EncountermethodnameStddevPopOrderBy(
      {this.encounter_method_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncountermethodnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameStddevSampOrderBy {
  InputpokemonV2EncountermethodnameStddevSampOrderBy(
      {this.encounter_method_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncountermethodnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameSumOrderBy {
  InputpokemonV2EncountermethodnameSumOrderBy(
      {this.encounter_method_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncountermethodnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameSumOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameVarPopOrderBy {
  InputpokemonV2EncountermethodnameVarPopOrderBy(
      {this.encounter_method_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncountermethodnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameVarSampOrderBy {
  InputpokemonV2EncountermethodnameVarSampOrderBy(
      {this.encounter_method_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncountermethodnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncountermethodnameVarianceOrderBy {
  InputpokemonV2EncountermethodnameVarianceOrderBy(
      {this.encounter_method_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EncountermethodnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncountermethodnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncountermethodnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$encounter_method_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncountermethodnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotAggregateOrderBy {
  InputpokemonV2EncounterslotAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EncounterslotAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotAggregateOrderByFromJson(json);

  final InputpokemonV2EncounterslotAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EncounterslotMaxOrderBy? max;

  final InputpokemonV2EncounterslotMinOrderBy? min;

  final InputpokemonV2EncounterslotStddevOrderBy? stddev;

  final InputpokemonV2EncounterslotStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EncounterslotStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EncounterslotSumOrderBy? sum;

  final InputpokemonV2EncounterslotVarPopOrderBy? var_pop;

  final InputpokemonV2EncounterslotVarSampOrderBy? var_samp;

  final InputpokemonV2EncounterslotVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotAvgOrderBy {
  InputpokemonV2EncounterslotAvgOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotAvgOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotBoolExp {
  InputpokemonV2EncounterslotBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.encounter_method_id,
      this.id,
      this.pokemon_v2_encountermethod,
      this.pokemon_v2_encounters,
      this.pokemon_v2_versiongroup,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EncounterslotBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EncounterslotBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EncounterslotBoolExp>? $_or;

  final InputIntComparisonExp? encounter_method_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2EncountermethodBoolExp? pokemon_v2_encountermethod;

  final InputpokemonV2EncounterBoolExp? pokemon_v2_encounters;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? rarity;

  final InputIntComparisonExp? slot;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final l$pokemon_v2_encounters = pokemon_v2_encounters;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$encounter_method_id,
      l$id,
      l$pokemon_v2_encountermethod,
      l$pokemon_v2_encounters,
      l$pokemon_v2_versiongroup,
      l$rarity,
      l$slot,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final lOther$pokemon_v2_encountermethod = other.pokemon_v2_encountermethod;
    if (l$pokemon_v2_encountermethod != lOther$pokemon_v2_encountermethod)
      return false;
    final l$pokemon_v2_encounters = pokemon_v2_encounters;
    final lOther$pokemon_v2_encounters = other.pokemon_v2_encounters;
    if (l$pokemon_v2_encounters != lOther$pokemon_v2_encounters) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotMaxOrderBy {
  InputpokemonV2EncounterslotMaxOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotMaxOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotMinOrderBy {
  InputpokemonV2EncounterslotMinOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotMinOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotOrderBy {
  InputpokemonV2EncounterslotOrderBy(
      {this.encounter_method_id,
      this.id,
      this.pokemon_v2_encountermethod,
      this.pokemon_v2_encounters_aggregate,
      this.pokemon_v2_versiongroup,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2EncountermethodOrderBy? pokemon_v2_encountermethod;

  final InputpokemonV2EncounterAggregateOrderBy?
      pokemon_v2_encounters_aggregate;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final l$pokemon_v2_encounters_aggregate = pokemon_v2_encounters_aggregate;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$pokemon_v2_encountermethod,
      l$pokemon_v2_encounters_aggregate,
      l$pokemon_v2_versiongroup,
      l$rarity,
      l$slot,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final lOther$pokemon_v2_encountermethod = other.pokemon_v2_encountermethod;
    if (l$pokemon_v2_encountermethod != lOther$pokemon_v2_encountermethod)
      return false;
    final l$pokemon_v2_encounters_aggregate = pokemon_v2_encounters_aggregate;
    final lOther$pokemon_v2_encounters_aggregate =
        other.pokemon_v2_encounters_aggregate;
    if (l$pokemon_v2_encounters_aggregate !=
        lOther$pokemon_v2_encounters_aggregate) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotStddevOrderBy {
  InputpokemonV2EncounterslotStddevOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotStddevOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotStddevPopOrderBy {
  InputpokemonV2EncounterslotStddevPopOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotStddevPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotStddevSampOrderBy {
  InputpokemonV2EncounterslotStddevSampOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotStddevSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotSumOrderBy {
  InputpokemonV2EncounterslotSumOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotSumOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotVarPopOrderBy {
  InputpokemonV2EncounterslotVarPopOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotVarPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotVarSampOrderBy {
  InputpokemonV2EncounterslotVarSampOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotVarSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EncounterslotVarianceOrderBy {
  InputpokemonV2EncounterslotVarianceOrderBy(
      {this.encounter_method_id,
      this.id,
      this.rarity,
      this.slot,
      this.version_group_id});

  @override
  factory InputpokemonV2EncounterslotVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EncounterslotVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EncounterslotVarianceOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$rarity = rarity;
    final l$slot = slot;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$encounter_method_id, l$id, l$rarity, l$slot, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EncounterslotVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainAggregateOrderBy {
  InputpokemonV2EvolutionchainAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EvolutionchainAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainAggregateOrderByFromJson(json);

  final InputpokemonV2EvolutionchainAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EvolutionchainMaxOrderBy? max;

  final InputpokemonV2EvolutionchainMinOrderBy? min;

  final InputpokemonV2EvolutionchainStddevOrderBy? stddev;

  final InputpokemonV2EvolutionchainStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EvolutionchainStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EvolutionchainSumOrderBy? sum;

  final InputpokemonV2EvolutionchainVarPopOrderBy? var_pop;

  final InputpokemonV2EvolutionchainVarSampOrderBy? var_samp;

  final InputpokemonV2EvolutionchainVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainAvgOrderBy {
  InputpokemonV2EvolutionchainAvgOrderBy({this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainAvgOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainBoolExp {
  InputpokemonV2EvolutionchainBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.baby_trigger_item_id,
      this.id,
      this.pokemon_v2_item,
      this.pokemon_v2_pokemonspecies});

  @override
  factory InputpokemonV2EvolutionchainBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EvolutionchainBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EvolutionchainBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EvolutionchainBoolExp>? $_or;

  final InputIntComparisonExp? baby_trigger_item_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecies;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$baby_trigger_item_id,
      l$id,
      l$pokemon_v2_item,
      l$pokemon_v2_pokemonspecies
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final lOther$pokemon_v2_pokemonspecies = other.pokemon_v2_pokemonspecies;
    if (l$pokemon_v2_pokemonspecies != lOther$pokemon_v2_pokemonspecies)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainMaxOrderBy {
  InputpokemonV2EvolutionchainMaxOrderBy({this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainMaxOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainMinOrderBy {
  InputpokemonV2EvolutionchainMinOrderBy({this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainMinOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainOrderBy {
  InputpokemonV2EvolutionchainOrderBy(
      {this.baby_trigger_item_id,
      this.id,
      this.pokemon_v2_item,
      this.pokemon_v2_pokemonspecies_aggregate});

  @override
  factory InputpokemonV2EvolutionchainOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2PokemonspeciesAggregateOrderBy?
      pokemon_v2_pokemonspecies_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    return Object.hashAll([
      l$baby_trigger_item_id,
      l$id,
      l$pokemon_v2_item,
      l$pokemon_v2_pokemonspecies_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final lOther$pokemon_v2_pokemonspecies_aggregate =
        other.pokemon_v2_pokemonspecies_aggregate;
    if (l$pokemon_v2_pokemonspecies_aggregate !=
        lOther$pokemon_v2_pokemonspecies_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainStddevOrderBy {
  InputpokemonV2EvolutionchainStddevOrderBy(
      {this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainStddevOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainStddevPopOrderBy {
  InputpokemonV2EvolutionchainStddevPopOrderBy(
      {this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainStddevPopOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainStddevSampOrderBy {
  InputpokemonV2EvolutionchainStddevSampOrderBy(
      {this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainStddevSampOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainSumOrderBy {
  InputpokemonV2EvolutionchainSumOrderBy({this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainSumOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainVarPopOrderBy {
  InputpokemonV2EvolutionchainVarPopOrderBy(
      {this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainVarPopOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainVarSampOrderBy {
  InputpokemonV2EvolutionchainVarSampOrderBy(
      {this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainVarSampOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutionchainVarianceOrderBy {
  InputpokemonV2EvolutionchainVarianceOrderBy(
      {this.baby_trigger_item_id, this.id});

  @override
  factory InputpokemonV2EvolutionchainVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutionchainVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? baby_trigger_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutionchainVarianceOrderByToJson(this);
  int get hashCode {
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final l$id = id;
    return Object.hashAll([l$baby_trigger_item_id, l$id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutionchainVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$baby_trigger_item_id = baby_trigger_item_id;
    final lOther$baby_trigger_item_id = other.baby_trigger_item_id;
    if (l$baby_trigger_item_id != lOther$baby_trigger_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggerBoolExp {
  InputpokemonV2EvolutiontriggerBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_evolutiontriggernames,
      this.pokemon_v2_pokemonevolutions});

  @override
  factory InputpokemonV2EvolutiontriggerBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggerBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EvolutiontriggerBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EvolutiontriggerBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EvolutiontriggerBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EvolutiontriggernameBoolExp?
      pokemon_v2_evolutiontriggernames;

  final InputpokemonV2PokemonevolutionBoolExp? pokemon_v2_pokemonevolutions;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggerBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_evolutiontriggernames = pokemon_v2_evolutiontriggernames;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_evolutiontriggernames,
      l$pokemon_v2_pokemonevolutions
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggerBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_evolutiontriggernames = pokemon_v2_evolutiontriggernames;
    final lOther$pokemon_v2_evolutiontriggernames =
        other.pokemon_v2_evolutiontriggernames;
    if (l$pokemon_v2_evolutiontriggernames !=
        lOther$pokemon_v2_evolutiontriggernames) return false;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final lOther$pokemon_v2_pokemonevolutions =
        other.pokemon_v2_pokemonevolutions;
    if (l$pokemon_v2_pokemonevolutions != lOther$pokemon_v2_pokemonevolutions)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggerOrderBy {
  InputpokemonV2EvolutiontriggerOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_evolutiontriggernames_aggregate,
      this.pokemon_v2_pokemonevolutions_aggregate});

  @override
  factory InputpokemonV2EvolutiontriggerOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggerOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EvolutiontriggernameAggregateOrderBy?
      pokemon_v2_evolutiontriggernames_aggregate;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemon_v2_pokemonevolutions_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggerOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_evolutiontriggernames_aggregate =
        pokemon_v2_evolutiontriggernames_aggregate;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_evolutiontriggernames_aggregate,
      l$pokemon_v2_pokemonevolutions_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggerOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_evolutiontriggernames_aggregate =
        pokemon_v2_evolutiontriggernames_aggregate;
    final lOther$pokemon_v2_evolutiontriggernames_aggregate =
        other.pokemon_v2_evolutiontriggernames_aggregate;
    if (l$pokemon_v2_evolutiontriggernames_aggregate !=
        lOther$pokemon_v2_evolutiontriggernames_aggregate) return false;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final lOther$pokemon_v2_pokemonevolutions_aggregate =
        other.pokemon_v2_pokemonevolutions_aggregate;
    if (l$pokemon_v2_pokemonevolutions_aggregate !=
        lOther$pokemon_v2_pokemonevolutions_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameAggregateOrderBy {
  InputpokemonV2EvolutiontriggernameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2EvolutiontriggernameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameAggregateOrderByFromJson(json);

  final InputpokemonV2EvolutiontriggernameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2EvolutiontriggernameMaxOrderBy? max;

  final InputpokemonV2EvolutiontriggernameMinOrderBy? min;

  final InputpokemonV2EvolutiontriggernameStddevOrderBy? stddev;

  final InputpokemonV2EvolutiontriggernameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2EvolutiontriggernameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2EvolutiontriggernameSumOrderBy? sum;

  final InputpokemonV2EvolutiontriggernameVarPopOrderBy? var_pop;

  final InputpokemonV2EvolutiontriggernameVarSampOrderBy? var_samp;

  final InputpokemonV2EvolutiontriggernameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameAvgOrderBy {
  InputpokemonV2EvolutiontriggernameAvgOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EvolutiontriggernameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameAvgOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$evolution_trigger_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameBoolExp {
  InputpokemonV2EvolutiontriggernameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.evolution_trigger_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_evolutiontrigger,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EvolutiontriggernameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2EvolutiontriggernameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2EvolutiontriggernameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2EvolutiontriggernameBoolExp>? $_or;

  final InputIntComparisonExp? evolution_trigger_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EvolutiontriggerBoolExp? pokemon_v2_evolutiontrigger;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_evolutiontrigger = pokemon_v2_evolutiontrigger;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$evolution_trigger_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_evolutiontrigger,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_evolutiontrigger = pokemon_v2_evolutiontrigger;
    final lOther$pokemon_v2_evolutiontrigger =
        other.pokemon_v2_evolutiontrigger;
    if (l$pokemon_v2_evolutiontrigger != lOther$pokemon_v2_evolutiontrigger)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameMaxOrderBy {
  InputpokemonV2EvolutiontriggernameMaxOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2EvolutiontriggernameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameMaxOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll(
        [l$evolution_trigger_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameMinOrderBy {
  InputpokemonV2EvolutiontriggernameMinOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2EvolutiontriggernameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameMinOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll(
        [l$evolution_trigger_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameOrderBy {
  InputpokemonV2EvolutiontriggernameOrderBy(
      {this.evolution_trigger_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_evolutiontrigger,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2EvolutiontriggernameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EvolutiontriggerOrderBy? pokemon_v2_evolutiontrigger;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_evolutiontrigger = pokemon_v2_evolutiontrigger;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$evolution_trigger_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_evolutiontrigger,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_evolutiontrigger = pokemon_v2_evolutiontrigger;
    final lOther$pokemon_v2_evolutiontrigger =
        other.pokemon_v2_evolutiontrigger;
    if (l$pokemon_v2_evolutiontrigger != lOther$pokemon_v2_evolutiontrigger)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameStddevOrderBy {
  InputpokemonV2EvolutiontriggernameStddevOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EvolutiontriggernameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameStddevOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$evolution_trigger_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameStddevPopOrderBy {
  InputpokemonV2EvolutiontriggernameStddevPopOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EvolutiontriggernameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$evolution_trigger_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameStddevSampOrderBy {
  InputpokemonV2EvolutiontriggernameStddevSampOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EvolutiontriggernameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$evolution_trigger_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameSumOrderBy {
  InputpokemonV2EvolutiontriggernameSumOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EvolutiontriggernameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameSumOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$evolution_trigger_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameVarPopOrderBy {
  InputpokemonV2EvolutiontriggernameVarPopOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EvolutiontriggernameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameVarPopOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$evolution_trigger_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameVarSampOrderBy {
  InputpokemonV2EvolutiontriggernameVarSampOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EvolutiontriggernameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameVarSampOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$evolution_trigger_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2EvolutiontriggernameVarianceOrderBy {
  InputpokemonV2EvolutiontriggernameVarianceOrderBy(
      {this.evolution_trigger_id, this.id, this.language_id});

  @override
  factory InputpokemonV2EvolutiontriggernameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2EvolutiontriggernameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2EvolutiontriggernameVarianceOrderByToJson(this);
  int get hashCode {
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$evolution_trigger_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2EvolutiontriggernameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceAggregateOrderBy {
  InputpokemonV2ExperienceAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ExperienceAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceAggregateOrderByFromJson(json);

  final InputpokemonV2ExperienceAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ExperienceMaxOrderBy? max;

  final InputpokemonV2ExperienceMinOrderBy? min;

  final InputpokemonV2ExperienceStddevOrderBy? stddev;

  final InputpokemonV2ExperienceStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ExperienceStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ExperienceSumOrderBy? sum;

  final InputpokemonV2ExperienceVarPopOrderBy? var_pop;

  final InputpokemonV2ExperienceVarSampOrderBy? var_samp;

  final InputpokemonV2ExperienceVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceAvgOrderBy {
  InputpokemonV2ExperienceAvgOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceAvgOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceBoolExp {
  InputpokemonV2ExperienceBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.experience,
      this.growth_rate_id,
      this.id,
      this.level,
      this.pokemon_v2_growthrate});

  @override
  factory InputpokemonV2ExperienceBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ExperienceBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ExperienceBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ExperienceBoolExp>? $_or;

  final InputIntComparisonExp? experience;

  final InputIntComparisonExp? growth_rate_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? level;

  final InputpokemonV2GrowthrateBoolExp? pokemon_v2_growthrate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$experience,
      l$growth_rate_id,
      l$id,
      l$level,
      l$pokemon_v2_growthrate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final lOther$pokemon_v2_growthrate = other.pokemon_v2_growthrate;
    if (l$pokemon_v2_growthrate != lOther$pokemon_v2_growthrate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceMaxOrderBy {
  InputpokemonV2ExperienceMaxOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceMaxOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceMinOrderBy {
  InputpokemonV2ExperienceMinOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceMinOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceOrderBy {
  InputpokemonV2ExperienceOrderBy(
      {this.experience,
      this.growth_rate_id,
      this.id,
      this.level,
      this.pokemon_v2_growthrate});

  @override
  factory InputpokemonV2ExperienceOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  final InputpokemonV2GrowthrateOrderBy? pokemon_v2_growthrate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    return Object.hashAll([
      l$experience,
      l$growth_rate_id,
      l$id,
      l$level,
      l$pokemon_v2_growthrate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final lOther$pokemon_v2_growthrate = other.pokemon_v2_growthrate;
    if (l$pokemon_v2_growthrate != lOther$pokemon_v2_growthrate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceStddevOrderBy {
  InputpokemonV2ExperienceStddevOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceStddevOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceStddevPopOrderBy {
  InputpokemonV2ExperienceStddevPopOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceStddevPopOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceStddevSampOrderBy {
  InputpokemonV2ExperienceStddevSampOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceStddevSampOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceSumOrderBy {
  InputpokemonV2ExperienceSumOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceSumOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceVarPopOrderBy {
  InputpokemonV2ExperienceVarPopOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceVarPopOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceVarSampOrderBy {
  InputpokemonV2ExperienceVarSampOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceVarSampOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ExperienceVarianceOrderBy {
  InputpokemonV2ExperienceVarianceOrderBy(
      {this.experience, this.growth_rate_id, this.id, this.level});

  @override
  factory InputpokemonV2ExperienceVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ExperienceVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ExperienceVarianceOrderByToJson(this);
  int get hashCode {
    final l$experience = experience;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$level = level;
    return Object.hashAll([l$experience, l$growth_rate_id, l$id, l$level]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ExperienceVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$experience = experience;
    final lOther$experience = other.experience;
    if (l$experience != lOther$experience) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenderBoolExp {
  InputpokemonV2GenderBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_pokemonevolutions});

  @override
  factory InputpokemonV2GenderBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2GenderBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2GenderBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2GenderBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2GenderBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2PokemonevolutionBoolExp? pokemon_v2_pokemonevolutions;

  Map<String, dynamic> toJson() => _$InputpokemonV2GenderBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_pokemonevolutions
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenderBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final lOther$pokemon_v2_pokemonevolutions =
        other.pokemon_v2_pokemonevolutions;
    if (l$pokemon_v2_pokemonevolutions != lOther$pokemon_v2_pokemonevolutions)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenderOrderBy {
  InputpokemonV2GenderOrderBy(
      {this.id, this.name, this.pokemon_v2_pokemonevolutions_aggregate});

  @override
  factory InputpokemonV2GenderOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2GenderOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemon_v2_pokemonevolutions_aggregate;

  Map<String, dynamic> toJson() => _$InputpokemonV2GenderOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    return Object.hashAll(
        [l$id, l$name, l$pokemon_v2_pokemonevolutions_aggregate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenderOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final lOther$pokemon_v2_pokemonevolutions_aggregate =
        other.pokemon_v2_pokemonevolutions_aggregate;
    if (l$pokemon_v2_pokemonevolutions_aggregate !=
        lOther$pokemon_v2_pokemonevolutions_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationAggregateOrderBy {
  InputpokemonV2GenerationAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2GenerationAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationAggregateOrderByFromJson(json);

  final InputpokemonV2GenerationAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2GenerationMaxOrderBy? max;

  final InputpokemonV2GenerationMinOrderBy? min;

  final InputpokemonV2GenerationStddevOrderBy? stddev;

  final InputpokemonV2GenerationStddevPopOrderBy? stddev_pop;

  final InputpokemonV2GenerationStddevSampOrderBy? stddev_samp;

  final InputpokemonV2GenerationSumOrderBy? sum;

  final InputpokemonV2GenerationVarPopOrderBy? var_pop;

  final InputpokemonV2GenerationVarSampOrderBy? var_samp;

  final InputpokemonV2GenerationVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationAvgOrderBy {
  InputpokemonV2GenerationAvgOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2GenerationAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationBoolExp {
  InputpokemonV2GenerationBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_abilities,
      this.pokemon_v2_generationnames,
      this.pokemon_v2_itemgameindices,
      this.pokemon_v2_locationgameindices,
      this.pokemon_v2_moves,
      this.pokemon_v2_pokemonformgenerations,
      this.pokemon_v2_pokemonspecies,
      this.pokemon_v2_pokemontypepasts,
      this.pokemon_v2_region,
      this.pokemon_v2_typegameindices,
      this.pokemon_v2_types,
      this.pokemon_v2_versiongroups,
      this.region_id});

  @override
  factory InputpokemonV2GenerationBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2GenerationBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2GenerationBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2GenerationBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2AbilityBoolExp? pokemon_v2_abilities;

  final InputpokemonV2GenerationnameBoolExp? pokemon_v2_generationnames;

  final InputpokemonV2ItemgameindexBoolExp? pokemon_v2_itemgameindices;

  final InputpokemonV2LocationgameindexBoolExp? pokemon_v2_locationgameindices;

  final InputpokemonV2MoveBoolExp? pokemon_v2_moves;

  final InputpokemonV2PokemonformgenerationBoolExp?
      pokemon_v2_pokemonformgenerations;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecies;

  final InputpokemonV2PokemontypepastBoolExp? pokemon_v2_pokemontypepasts;

  final InputpokemonV2RegionBoolExp? pokemon_v2_region;

  final InputpokemonV2TypegameindexBoolExp? pokemon_v2_typegameindices;

  final InputpokemonV2TypeBoolExp? pokemon_v2_types;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroups;

  final InputIntComparisonExp? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_abilities = pokemon_v2_abilities;
    final l$pokemon_v2_generationnames = pokemon_v2_generationnames;
    final l$pokemon_v2_itemgameindices = pokemon_v2_itemgameindices;
    final l$pokemon_v2_locationgameindices = pokemon_v2_locationgameindices;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final l$pokemon_v2_pokemonformgenerations =
        pokemon_v2_pokemonformgenerations;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final l$pokemon_v2_pokemontypepasts = pokemon_v2_pokemontypepasts;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$pokemon_v2_typegameindices = pokemon_v2_typegameindices;
    final l$pokemon_v2_types = pokemon_v2_types;
    final l$pokemon_v2_versiongroups = pokemon_v2_versiongroups;
    final l$region_id = region_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_abilities,
      l$pokemon_v2_generationnames,
      l$pokemon_v2_itemgameindices,
      l$pokemon_v2_locationgameindices,
      l$pokemon_v2_moves,
      l$pokemon_v2_pokemonformgenerations,
      l$pokemon_v2_pokemonspecies,
      l$pokemon_v2_pokemontypepasts,
      l$pokemon_v2_region,
      l$pokemon_v2_typegameindices,
      l$pokemon_v2_types,
      l$pokemon_v2_versiongroups,
      l$region_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_abilities = pokemon_v2_abilities;
    final lOther$pokemon_v2_abilities = other.pokemon_v2_abilities;
    if (l$pokemon_v2_abilities != lOther$pokemon_v2_abilities) return false;
    final l$pokemon_v2_generationnames = pokemon_v2_generationnames;
    final lOther$pokemon_v2_generationnames = other.pokemon_v2_generationnames;
    if (l$pokemon_v2_generationnames != lOther$pokemon_v2_generationnames)
      return false;
    final l$pokemon_v2_itemgameindices = pokemon_v2_itemgameindices;
    final lOther$pokemon_v2_itemgameindices = other.pokemon_v2_itemgameindices;
    if (l$pokemon_v2_itemgameindices != lOther$pokemon_v2_itemgameindices)
      return false;
    final l$pokemon_v2_locationgameindices = pokemon_v2_locationgameindices;
    final lOther$pokemon_v2_locationgameindices =
        other.pokemon_v2_locationgameindices;
    if (l$pokemon_v2_locationgameindices !=
        lOther$pokemon_v2_locationgameindices) return false;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final lOther$pokemon_v2_moves = other.pokemon_v2_moves;
    if (l$pokemon_v2_moves != lOther$pokemon_v2_moves) return false;
    final l$pokemon_v2_pokemonformgenerations =
        pokemon_v2_pokemonformgenerations;
    final lOther$pokemon_v2_pokemonformgenerations =
        other.pokemon_v2_pokemonformgenerations;
    if (l$pokemon_v2_pokemonformgenerations !=
        lOther$pokemon_v2_pokemonformgenerations) return false;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final lOther$pokemon_v2_pokemonspecies = other.pokemon_v2_pokemonspecies;
    if (l$pokemon_v2_pokemonspecies != lOther$pokemon_v2_pokemonspecies)
      return false;
    final l$pokemon_v2_pokemontypepasts = pokemon_v2_pokemontypepasts;
    final lOther$pokemon_v2_pokemontypepasts =
        other.pokemon_v2_pokemontypepasts;
    if (l$pokemon_v2_pokemontypepasts != lOther$pokemon_v2_pokemontypepasts)
      return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$pokemon_v2_typegameindices = pokemon_v2_typegameindices;
    final lOther$pokemon_v2_typegameindices = other.pokemon_v2_typegameindices;
    if (l$pokemon_v2_typegameindices != lOther$pokemon_v2_typegameindices)
      return false;
    final l$pokemon_v2_types = pokemon_v2_types;
    final lOther$pokemon_v2_types = other.pokemon_v2_types;
    if (l$pokemon_v2_types != lOther$pokemon_v2_types) return false;
    final l$pokemon_v2_versiongroups = pokemon_v2_versiongroups;
    final lOther$pokemon_v2_versiongroups = other.pokemon_v2_versiongroups;
    if (l$pokemon_v2_versiongroups != lOther$pokemon_v2_versiongroups)
      return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationMaxOrderBy {
  InputpokemonV2GenerationMaxOrderBy({this.id, this.name, this.region_id});

  @override
  factory InputpokemonV2GenerationMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$name, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationMinOrderBy {
  InputpokemonV2GenerationMinOrderBy({this.id, this.name, this.region_id});

  @override
  factory InputpokemonV2GenerationMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$name, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationOrderBy {
  InputpokemonV2GenerationOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_abilities_aggregate,
      this.pokemon_v2_generationnames_aggregate,
      this.pokemon_v2_itemgameindices_aggregate,
      this.pokemon_v2_locationgameindices_aggregate,
      this.pokemon_v2_moves_aggregate,
      this.pokemon_v2_pokemonformgenerations_aggregate,
      this.pokemon_v2_pokemonspecies_aggregate,
      this.pokemon_v2_pokemontypepasts_aggregate,
      this.pokemon_v2_region,
      this.pokemon_v2_typegameindices_aggregate,
      this.pokemon_v2_types_aggregate,
      this.pokemon_v2_versiongroups_aggregate,
      this.region_id});

  @override
  factory InputpokemonV2GenerationOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2AbilityAggregateOrderBy? pokemon_v2_abilities_aggregate;

  final InputpokemonV2GenerationnameAggregateOrderBy?
      pokemon_v2_generationnames_aggregate;

  final InputpokemonV2ItemgameindexAggregateOrderBy?
      pokemon_v2_itemgameindices_aggregate;

  final InputpokemonV2LocationgameindexAggregateOrderBy?
      pokemon_v2_locationgameindices_aggregate;

  final InputpokemonV2MoveAggregateOrderBy? pokemon_v2_moves_aggregate;

  final InputpokemonV2PokemonformgenerationAggregateOrderBy?
      pokemon_v2_pokemonformgenerations_aggregate;

  final InputpokemonV2PokemonspeciesAggregateOrderBy?
      pokemon_v2_pokemonspecies_aggregate;

  final InputpokemonV2PokemontypepastAggregateOrderBy?
      pokemon_v2_pokemontypepasts_aggregate;

  final InputpokemonV2RegionOrderBy? pokemon_v2_region;

  final InputpokemonV2TypegameindexAggregateOrderBy?
      pokemon_v2_typegameindices_aggregate;

  final InputpokemonV2TypeAggregateOrderBy? pokemon_v2_types_aggregate;

  final InputpokemonV2VersiongroupAggregateOrderBy?
      pokemon_v2_versiongroups_aggregate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_abilities_aggregate = pokemon_v2_abilities_aggregate;
    final l$pokemon_v2_generationnames_aggregate =
        pokemon_v2_generationnames_aggregate;
    final l$pokemon_v2_itemgameindices_aggregate =
        pokemon_v2_itemgameindices_aggregate;
    final l$pokemon_v2_locationgameindices_aggregate =
        pokemon_v2_locationgameindices_aggregate;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final l$pokemon_v2_pokemonformgenerations_aggregate =
        pokemon_v2_pokemonformgenerations_aggregate;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final l$pokemon_v2_pokemontypepasts_aggregate =
        pokemon_v2_pokemontypepasts_aggregate;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$pokemon_v2_typegameindices_aggregate =
        pokemon_v2_typegameindices_aggregate;
    final l$pokemon_v2_types_aggregate = pokemon_v2_types_aggregate;
    final l$pokemon_v2_versiongroups_aggregate =
        pokemon_v2_versiongroups_aggregate;
    final l$region_id = region_id;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_abilities_aggregate,
      l$pokemon_v2_generationnames_aggregate,
      l$pokemon_v2_itemgameindices_aggregate,
      l$pokemon_v2_locationgameindices_aggregate,
      l$pokemon_v2_moves_aggregate,
      l$pokemon_v2_pokemonformgenerations_aggregate,
      l$pokemon_v2_pokemonspecies_aggregate,
      l$pokemon_v2_pokemontypepasts_aggregate,
      l$pokemon_v2_region,
      l$pokemon_v2_typegameindices_aggregate,
      l$pokemon_v2_types_aggregate,
      l$pokemon_v2_versiongroups_aggregate,
      l$region_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_abilities_aggregate = pokemon_v2_abilities_aggregate;
    final lOther$pokemon_v2_abilities_aggregate =
        other.pokemon_v2_abilities_aggregate;
    if (l$pokemon_v2_abilities_aggregate !=
        lOther$pokemon_v2_abilities_aggregate) return false;
    final l$pokemon_v2_generationnames_aggregate =
        pokemon_v2_generationnames_aggregate;
    final lOther$pokemon_v2_generationnames_aggregate =
        other.pokemon_v2_generationnames_aggregate;
    if (l$pokemon_v2_generationnames_aggregate !=
        lOther$pokemon_v2_generationnames_aggregate) return false;
    final l$pokemon_v2_itemgameindices_aggregate =
        pokemon_v2_itemgameindices_aggregate;
    final lOther$pokemon_v2_itemgameindices_aggregate =
        other.pokemon_v2_itemgameindices_aggregate;
    if (l$pokemon_v2_itemgameindices_aggregate !=
        lOther$pokemon_v2_itemgameindices_aggregate) return false;
    final l$pokemon_v2_locationgameindices_aggregate =
        pokemon_v2_locationgameindices_aggregate;
    final lOther$pokemon_v2_locationgameindices_aggregate =
        other.pokemon_v2_locationgameindices_aggregate;
    if (l$pokemon_v2_locationgameindices_aggregate !=
        lOther$pokemon_v2_locationgameindices_aggregate) return false;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final lOther$pokemon_v2_moves_aggregate = other.pokemon_v2_moves_aggregate;
    if (l$pokemon_v2_moves_aggregate != lOther$pokemon_v2_moves_aggregate)
      return false;
    final l$pokemon_v2_pokemonformgenerations_aggregate =
        pokemon_v2_pokemonformgenerations_aggregate;
    final lOther$pokemon_v2_pokemonformgenerations_aggregate =
        other.pokemon_v2_pokemonformgenerations_aggregate;
    if (l$pokemon_v2_pokemonformgenerations_aggregate !=
        lOther$pokemon_v2_pokemonformgenerations_aggregate) return false;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final lOther$pokemon_v2_pokemonspecies_aggregate =
        other.pokemon_v2_pokemonspecies_aggregate;
    if (l$pokemon_v2_pokemonspecies_aggregate !=
        lOther$pokemon_v2_pokemonspecies_aggregate) return false;
    final l$pokemon_v2_pokemontypepasts_aggregate =
        pokemon_v2_pokemontypepasts_aggregate;
    final lOther$pokemon_v2_pokemontypepasts_aggregate =
        other.pokemon_v2_pokemontypepasts_aggregate;
    if (l$pokemon_v2_pokemontypepasts_aggregate !=
        lOther$pokemon_v2_pokemontypepasts_aggregate) return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$pokemon_v2_typegameindices_aggregate =
        pokemon_v2_typegameindices_aggregate;
    final lOther$pokemon_v2_typegameindices_aggregate =
        other.pokemon_v2_typegameindices_aggregate;
    if (l$pokemon_v2_typegameindices_aggregate !=
        lOther$pokemon_v2_typegameindices_aggregate) return false;
    final l$pokemon_v2_types_aggregate = pokemon_v2_types_aggregate;
    final lOther$pokemon_v2_types_aggregate = other.pokemon_v2_types_aggregate;
    if (l$pokemon_v2_types_aggregate != lOther$pokemon_v2_types_aggregate)
      return false;
    final l$pokemon_v2_versiongroups_aggregate =
        pokemon_v2_versiongroups_aggregate;
    final lOther$pokemon_v2_versiongroups_aggregate =
        other.pokemon_v2_versiongroups_aggregate;
    if (l$pokemon_v2_versiongroups_aggregate !=
        lOther$pokemon_v2_versiongroups_aggregate) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationStddevOrderBy {
  InputpokemonV2GenerationStddevOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2GenerationStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationStddevPopOrderBy {
  InputpokemonV2GenerationStddevPopOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2GenerationStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationStddevSampOrderBy {
  InputpokemonV2GenerationStddevSampOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2GenerationStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationSumOrderBy {
  InputpokemonV2GenerationSumOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2GenerationSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationVarPopOrderBy {
  InputpokemonV2GenerationVarPopOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2GenerationVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationVarSampOrderBy {
  InputpokemonV2GenerationVarSampOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2GenerationVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationVarianceOrderBy {
  InputpokemonV2GenerationVarianceOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2GenerationVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameAggregateOrderBy {
  InputpokemonV2GenerationnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2GenerationnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameAggregateOrderByFromJson(json);

  final InputpokemonV2GenerationnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2GenerationnameMaxOrderBy? max;

  final InputpokemonV2GenerationnameMinOrderBy? min;

  final InputpokemonV2GenerationnameStddevOrderBy? stddev;

  final InputpokemonV2GenerationnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2GenerationnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2GenerationnameSumOrderBy? sum;

  final InputpokemonV2GenerationnameVarPopOrderBy? var_pop;

  final InputpokemonV2GenerationnameVarSampOrderBy? var_samp;

  final InputpokemonV2GenerationnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameAvgOrderBy {
  InputpokemonV2GenerationnameAvgOrderBy(
      {this.generation_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GenerationnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameAvgOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$generation_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameBoolExp {
  InputpokemonV2GenerationnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.generation_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_generation,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2GenerationnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2GenerationnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2GenerationnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2GenerationnameBoolExp>? $_or;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$generation_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_generation,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameMaxOrderBy {
  InputpokemonV2GenerationnameMaxOrderBy(
      {this.generation_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2GenerationnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameMaxOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$generation_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameMinOrderBy {
  InputpokemonV2GenerationnameMinOrderBy(
      {this.generation_id, this.id, this.language_id, this.name});

  @override
  factory InputpokemonV2GenerationnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameMinOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$generation_id, l$id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameOrderBy {
  InputpokemonV2GenerationnameOrderBy(
      {this.generation_id,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_generation,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2GenerationnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$generation_id,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_generation,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameStddevOrderBy {
  InputpokemonV2GenerationnameStddevOrderBy(
      {this.generation_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GenerationnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameStddevOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$generation_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameStddevPopOrderBy {
  InputpokemonV2GenerationnameStddevPopOrderBy(
      {this.generation_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GenerationnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$generation_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameStddevSampOrderBy {
  InputpokemonV2GenerationnameStddevSampOrderBy(
      {this.generation_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GenerationnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$generation_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameSumOrderBy {
  InputpokemonV2GenerationnameSumOrderBy(
      {this.generation_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GenerationnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameSumOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$generation_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameVarPopOrderBy {
  InputpokemonV2GenerationnameVarPopOrderBy(
      {this.generation_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GenerationnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$generation_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameVarSampOrderBy {
  InputpokemonV2GenerationnameVarSampOrderBy(
      {this.generation_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GenerationnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$generation_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GenerationnameVarianceOrderBy {
  InputpokemonV2GenerationnameVarianceOrderBy(
      {this.generation_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GenerationnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GenerationnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GenerationnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$generation_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GenerationnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthrateBoolExp {
  InputpokemonV2GrowthrateBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.formula,
      this.id,
      this.name,
      this.pokemon_v2_experiences,
      this.pokemon_v2_growthratedescriptions,
      this.pokemon_v2_machines,
      this.pokemon_v2_pokemonspecies});

  @override
  factory InputpokemonV2GrowthrateBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthrateBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2GrowthrateBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2GrowthrateBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2GrowthrateBoolExp>? $_or;

  final InputStringComparisonExp? formula;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ExperienceBoolExp? pokemon_v2_experiences;

  final InputpokemonV2GrowthratedescriptionBoolExp?
      pokemon_v2_growthratedescriptions;

  final InputpokemonV2MachineBoolExp? pokemon_v2_machines;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecies;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthrateBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$formula = formula;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_experiences = pokemon_v2_experiences;
    final l$pokemon_v2_growthratedescriptions =
        pokemon_v2_growthratedescriptions;
    final l$pokemon_v2_machines = pokemon_v2_machines;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$formula,
      l$id,
      l$name,
      l$pokemon_v2_experiences,
      l$pokemon_v2_growthratedescriptions,
      l$pokemon_v2_machines,
      l$pokemon_v2_pokemonspecies
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthrateBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$formula = formula;
    final lOther$formula = other.formula;
    if (l$formula != lOther$formula) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_experiences = pokemon_v2_experiences;
    final lOther$pokemon_v2_experiences = other.pokemon_v2_experiences;
    if (l$pokemon_v2_experiences != lOther$pokemon_v2_experiences) return false;
    final l$pokemon_v2_growthratedescriptions =
        pokemon_v2_growthratedescriptions;
    final lOther$pokemon_v2_growthratedescriptions =
        other.pokemon_v2_growthratedescriptions;
    if (l$pokemon_v2_growthratedescriptions !=
        lOther$pokemon_v2_growthratedescriptions) return false;
    final l$pokemon_v2_machines = pokemon_v2_machines;
    final lOther$pokemon_v2_machines = other.pokemon_v2_machines;
    if (l$pokemon_v2_machines != lOther$pokemon_v2_machines) return false;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final lOther$pokemon_v2_pokemonspecies = other.pokemon_v2_pokemonspecies;
    if (l$pokemon_v2_pokemonspecies != lOther$pokemon_v2_pokemonspecies)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthrateOrderBy {
  InputpokemonV2GrowthrateOrderBy(
      {this.formula,
      this.id,
      this.name,
      this.pokemon_v2_experiences_aggregate,
      this.pokemon_v2_growthratedescriptions_aggregate,
      this.pokemon_v2_machines_aggregate,
      this.pokemon_v2_pokemonspecies_aggregate});

  @override
  factory InputpokemonV2GrowthrateOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthrateOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? formula;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ExperienceAggregateOrderBy?
      pokemon_v2_experiences_aggregate;

  final InputpokemonV2GrowthratedescriptionAggregateOrderBy?
      pokemon_v2_growthratedescriptions_aggregate;

  final InputpokemonV2MachineAggregateOrderBy? pokemon_v2_machines_aggregate;

  final InputpokemonV2PokemonspeciesAggregateOrderBy?
      pokemon_v2_pokemonspecies_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthrateOrderByToJson(this);
  int get hashCode {
    final l$formula = formula;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_experiences_aggregate = pokemon_v2_experiences_aggregate;
    final l$pokemon_v2_growthratedescriptions_aggregate =
        pokemon_v2_growthratedescriptions_aggregate;
    final l$pokemon_v2_machines_aggregate = pokemon_v2_machines_aggregate;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    return Object.hashAll([
      l$formula,
      l$id,
      l$name,
      l$pokemon_v2_experiences_aggregate,
      l$pokemon_v2_growthratedescriptions_aggregate,
      l$pokemon_v2_machines_aggregate,
      l$pokemon_v2_pokemonspecies_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthrateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$formula = formula;
    final lOther$formula = other.formula;
    if (l$formula != lOther$formula) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_experiences_aggregate = pokemon_v2_experiences_aggregate;
    final lOther$pokemon_v2_experiences_aggregate =
        other.pokemon_v2_experiences_aggregate;
    if (l$pokemon_v2_experiences_aggregate !=
        lOther$pokemon_v2_experiences_aggregate) return false;
    final l$pokemon_v2_growthratedescriptions_aggregate =
        pokemon_v2_growthratedescriptions_aggregate;
    final lOther$pokemon_v2_growthratedescriptions_aggregate =
        other.pokemon_v2_growthratedescriptions_aggregate;
    if (l$pokemon_v2_growthratedescriptions_aggregate !=
        lOther$pokemon_v2_growthratedescriptions_aggregate) return false;
    final l$pokemon_v2_machines_aggregate = pokemon_v2_machines_aggregate;
    final lOther$pokemon_v2_machines_aggregate =
        other.pokemon_v2_machines_aggregate;
    if (l$pokemon_v2_machines_aggregate != lOther$pokemon_v2_machines_aggregate)
      return false;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final lOther$pokemon_v2_pokemonspecies_aggregate =
        other.pokemon_v2_pokemonspecies_aggregate;
    if (l$pokemon_v2_pokemonspecies_aggregate !=
        lOther$pokemon_v2_pokemonspecies_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionAggregateOrderBy {
  InputpokemonV2GrowthratedescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2GrowthratedescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2GrowthratedescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2GrowthratedescriptionMaxOrderBy? max;

  final InputpokemonV2GrowthratedescriptionMinOrderBy? min;

  final InputpokemonV2GrowthratedescriptionStddevOrderBy? stddev;

  final InputpokemonV2GrowthratedescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2GrowthratedescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2GrowthratedescriptionSumOrderBy? sum;

  final InputpokemonV2GrowthratedescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2GrowthratedescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2GrowthratedescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionAvgOrderBy {
  InputpokemonV2GrowthratedescriptionAvgOrderBy(
      {this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionBoolExp {
  InputpokemonV2GrowthratedescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.growth_rate_id,
      this.id,
      this.language_id,
      this.pokemon_v2_growthrate,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2GrowthratedescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2GrowthratedescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2GrowthratedescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2GrowthratedescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? growth_rate_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2GrowthrateBoolExp? pokemon_v2_growthrate;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$growth_rate_id,
      l$id,
      l$language_id,
      l$pokemon_v2_growthrate,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final lOther$pokemon_v2_growthrate = other.pokemon_v2_growthrate;
    if (l$pokemon_v2_growthrate != lOther$pokemon_v2_growthrate) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionMaxOrderBy {
  InputpokemonV2GrowthratedescriptionMaxOrderBy(
      {this.description, this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$description, l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionMinOrderBy {
  InputpokemonV2GrowthratedescriptionMinOrderBy(
      {this.description, this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$description, l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionOrderBy {
  InputpokemonV2GrowthratedescriptionOrderBy(
      {this.description,
      this.growth_rate_id,
      this.id,
      this.language_id,
      this.pokemon_v2_growthrate,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2GrowthratedescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2GrowthrateOrderBy? pokemon_v2_growthrate;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$description,
      l$growth_rate_id,
      l$id,
      l$language_id,
      l$pokemon_v2_growthrate,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final lOther$pokemon_v2_growthrate = other.pokemon_v2_growthrate;
    if (l$pokemon_v2_growthrate != lOther$pokemon_v2_growthrate) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionStddevOrderBy {
  InputpokemonV2GrowthratedescriptionStddevOrderBy(
      {this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionStddevPopOrderBy {
  InputpokemonV2GrowthratedescriptionStddevPopOrderBy(
      {this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionStddevSampOrderBy {
  InputpokemonV2GrowthratedescriptionStddevSampOrderBy(
      {this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionSumOrderBy {
  InputpokemonV2GrowthratedescriptionSumOrderBy(
      {this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionVarPopOrderBy {
  InputpokemonV2GrowthratedescriptionVarPopOrderBy(
      {this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionVarSampOrderBy {
  InputpokemonV2GrowthratedescriptionVarSampOrderBy(
      {this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2GrowthratedescriptionVarianceOrderBy {
  InputpokemonV2GrowthratedescriptionVarianceOrderBy(
      {this.growth_rate_id, this.id, this.language_id});

  @override
  factory InputpokemonV2GrowthratedescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2GrowthratedescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2GrowthratedescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$language_id = language_id;
    return Object.hashAll([l$growth_rate_id, l$id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2GrowthratedescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemAggregateOrderBy {
  InputpokemonV2ItemAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemAggregateOrderByFromJson(json);

  final InputpokemonV2ItemAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemMaxOrderBy? max;

  final InputpokemonV2ItemMinOrderBy? min;

  final InputpokemonV2ItemStddevOrderBy? stddev;

  final InputpokemonV2ItemStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemSumOrderBy? sum;

  final InputpokemonV2ItemVarPopOrderBy? var_pop;

  final InputpokemonV2ItemVarSampOrderBy? var_samp;

  final InputpokemonV2ItemVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemAvgOrderBy {
  InputpokemonV2ItemAvgOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id});

  @override
  factory InputpokemonV2ItemAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2ItemAvgOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemBoolExp {
  InputpokemonV2ItemBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id,
      this.name,
      this.pokemonV2PokemonevolutionsByHeldItemId,
      this.pokemon_v2_berries,
      this.pokemon_v2_evolutionchains,
      this.pokemon_v2_itemattributemaps,
      this.pokemon_v2_itemcategory,
      this.pokemon_v2_itemeffecttexts,
      this.pokemon_v2_itemflavortexts,
      this.pokemon_v2_itemflingeffect,
      this.pokemon_v2_itemgameindices,
      this.pokemon_v2_itemnames,
      this.pokemon_v2_itemsprites,
      this.pokemon_v2_machines,
      this.pokemon_v2_pokemonevolutions,
      this.pokemon_v2_pokemonitems});

  @override
  factory InputpokemonV2ItemBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemBoolExp>? $_or;

  final InputIntComparisonExp? cost;

  final InputIntComparisonExp? fling_power;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_category_id;

  final InputIntComparisonExp? item_fling_effect_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2PokemonevolutionBoolExp?
      pokemonV2PokemonevolutionsByHeldItemId;

  final InputpokemonV2BerryBoolExp? pokemon_v2_berries;

  final InputpokemonV2EvolutionchainBoolExp? pokemon_v2_evolutionchains;

  final InputpokemonV2ItemattributemapBoolExp? pokemon_v2_itemattributemaps;

  final InputpokemonV2ItemcategoryBoolExp? pokemon_v2_itemcategory;

  final InputpokemonV2ItemeffecttextBoolExp? pokemon_v2_itemeffecttexts;

  final InputpokemonV2ItemflavortextBoolExp? pokemon_v2_itemflavortexts;

  final InputpokemonV2ItemflingeffectBoolExp? pokemon_v2_itemflingeffect;

  final InputpokemonV2ItemgameindexBoolExp? pokemon_v2_itemgameindices;

  final InputpokemonV2ItemnameBoolExp? pokemon_v2_itemnames;

  final InputpokemonV2ItemspritesBoolExp? pokemon_v2_itemsprites;

  final InputpokemonV2MachineBoolExp? pokemon_v2_machines;

  final InputpokemonV2PokemonevolutionBoolExp? pokemon_v2_pokemonevolutions;

  final InputpokemonV2PokemonitemBoolExp? pokemon_v2_pokemonitems;

  Map<String, dynamic> toJson() => _$InputpokemonV2ItemBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$name = name;
    final l$pokemonV2PokemonevolutionsByHeldItemId =
        pokemonV2PokemonevolutionsByHeldItemId;
    final l$pokemon_v2_berries = pokemon_v2_berries;
    final l$pokemon_v2_evolutionchains = pokemon_v2_evolutionchains;
    final l$pokemon_v2_itemattributemaps = pokemon_v2_itemattributemaps;
    final l$pokemon_v2_itemcategory = pokemon_v2_itemcategory;
    final l$pokemon_v2_itemeffecttexts = pokemon_v2_itemeffecttexts;
    final l$pokemon_v2_itemflavortexts = pokemon_v2_itemflavortexts;
    final l$pokemon_v2_itemflingeffect = pokemon_v2_itemflingeffect;
    final l$pokemon_v2_itemgameindices = pokemon_v2_itemgameindices;
    final l$pokemon_v2_itemnames = pokemon_v2_itemnames;
    final l$pokemon_v2_itemsprites = pokemon_v2_itemsprites;
    final l$pokemon_v2_machines = pokemon_v2_machines;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final l$pokemon_v2_pokemonitems = pokemon_v2_pokemonitems;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id,
      l$name,
      l$pokemonV2PokemonevolutionsByHeldItemId,
      l$pokemon_v2_berries,
      l$pokemon_v2_evolutionchains,
      l$pokemon_v2_itemattributemaps,
      l$pokemon_v2_itemcategory,
      l$pokemon_v2_itemeffecttexts,
      l$pokemon_v2_itemflavortexts,
      l$pokemon_v2_itemflingeffect,
      l$pokemon_v2_itemgameindices,
      l$pokemon_v2_itemnames,
      l$pokemon_v2_itemsprites,
      l$pokemon_v2_machines,
      l$pokemon_v2_pokemonevolutions,
      l$pokemon_v2_pokemonitems
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2PokemonevolutionsByHeldItemId =
        pokemonV2PokemonevolutionsByHeldItemId;
    final lOther$pokemonV2PokemonevolutionsByHeldItemId =
        other.pokemonV2PokemonevolutionsByHeldItemId;
    if (l$pokemonV2PokemonevolutionsByHeldItemId !=
        lOther$pokemonV2PokemonevolutionsByHeldItemId) return false;
    final l$pokemon_v2_berries = pokemon_v2_berries;
    final lOther$pokemon_v2_berries = other.pokemon_v2_berries;
    if (l$pokemon_v2_berries != lOther$pokemon_v2_berries) return false;
    final l$pokemon_v2_evolutionchains = pokemon_v2_evolutionchains;
    final lOther$pokemon_v2_evolutionchains = other.pokemon_v2_evolutionchains;
    if (l$pokemon_v2_evolutionchains != lOther$pokemon_v2_evolutionchains)
      return false;
    final l$pokemon_v2_itemattributemaps = pokemon_v2_itemattributemaps;
    final lOther$pokemon_v2_itemattributemaps =
        other.pokemon_v2_itemattributemaps;
    if (l$pokemon_v2_itemattributemaps != lOther$pokemon_v2_itemattributemaps)
      return false;
    final l$pokemon_v2_itemcategory = pokemon_v2_itemcategory;
    final lOther$pokemon_v2_itemcategory = other.pokemon_v2_itemcategory;
    if (l$pokemon_v2_itemcategory != lOther$pokemon_v2_itemcategory)
      return false;
    final l$pokemon_v2_itemeffecttexts = pokemon_v2_itemeffecttexts;
    final lOther$pokemon_v2_itemeffecttexts = other.pokemon_v2_itemeffecttexts;
    if (l$pokemon_v2_itemeffecttexts != lOther$pokemon_v2_itemeffecttexts)
      return false;
    final l$pokemon_v2_itemflavortexts = pokemon_v2_itemflavortexts;
    final lOther$pokemon_v2_itemflavortexts = other.pokemon_v2_itemflavortexts;
    if (l$pokemon_v2_itemflavortexts != lOther$pokemon_v2_itemflavortexts)
      return false;
    final l$pokemon_v2_itemflingeffect = pokemon_v2_itemflingeffect;
    final lOther$pokemon_v2_itemflingeffect = other.pokemon_v2_itemflingeffect;
    if (l$pokemon_v2_itemflingeffect != lOther$pokemon_v2_itemflingeffect)
      return false;
    final l$pokemon_v2_itemgameindices = pokemon_v2_itemgameindices;
    final lOther$pokemon_v2_itemgameindices = other.pokemon_v2_itemgameindices;
    if (l$pokemon_v2_itemgameindices != lOther$pokemon_v2_itemgameindices)
      return false;
    final l$pokemon_v2_itemnames = pokemon_v2_itemnames;
    final lOther$pokemon_v2_itemnames = other.pokemon_v2_itemnames;
    if (l$pokemon_v2_itemnames != lOther$pokemon_v2_itemnames) return false;
    final l$pokemon_v2_itemsprites = pokemon_v2_itemsprites;
    final lOther$pokemon_v2_itemsprites = other.pokemon_v2_itemsprites;
    if (l$pokemon_v2_itemsprites != lOther$pokemon_v2_itemsprites) return false;
    final l$pokemon_v2_machines = pokemon_v2_machines;
    final lOther$pokemon_v2_machines = other.pokemon_v2_machines;
    if (l$pokemon_v2_machines != lOther$pokemon_v2_machines) return false;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final lOther$pokemon_v2_pokemonevolutions =
        other.pokemon_v2_pokemonevolutions;
    if (l$pokemon_v2_pokemonevolutions != lOther$pokemon_v2_pokemonevolutions)
      return false;
    final l$pokemon_v2_pokemonitems = pokemon_v2_pokemonitems;
    final lOther$pokemon_v2_pokemonitems = other.pokemon_v2_pokemonitems;
    if (l$pokemon_v2_pokemonitems != lOther$pokemon_v2_pokemonitems)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemMaxOrderBy {
  InputpokemonV2ItemMaxOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id,
      this.name});

  @override
  factory InputpokemonV2ItemMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() => _$InputpokemonV2ItemMaxOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$name = name;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id,
      l$name
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemMinOrderBy {
  InputpokemonV2ItemMinOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id,
      this.name});

  @override
  factory InputpokemonV2ItemMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() => _$InputpokemonV2ItemMinOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$name = name;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id,
      l$name
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemOrderBy {
  InputpokemonV2ItemOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id,
      this.name,
      this.pokemonV2PokemonevolutionsByHeldItemId_aggregate,
      this.pokemon_v2_berries_aggregate,
      this.pokemon_v2_evolutionchains_aggregate,
      this.pokemon_v2_itemattributemaps_aggregate,
      this.pokemon_v2_itemcategory,
      this.pokemon_v2_itemeffecttexts_aggregate,
      this.pokemon_v2_itemflavortexts_aggregate,
      this.pokemon_v2_itemflingeffect,
      this.pokemon_v2_itemgameindices_aggregate,
      this.pokemon_v2_itemnames_aggregate,
      this.pokemon_v2_itemsprites_aggregate,
      this.pokemon_v2_machines_aggregate,
      this.pokemon_v2_pokemonevolutions_aggregate,
      this.pokemon_v2_pokemonitems_aggregate});

  @override
  factory InputpokemonV2ItemOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemonV2PokemonevolutionsByHeldItemId_aggregate;

  final InputpokemonV2BerryAggregateOrderBy? pokemon_v2_berries_aggregate;

  final InputpokemonV2EvolutionchainAggregateOrderBy?
      pokemon_v2_evolutionchains_aggregate;

  final InputpokemonV2ItemattributemapAggregateOrderBy?
      pokemon_v2_itemattributemaps_aggregate;

  final InputpokemonV2ItemcategoryOrderBy? pokemon_v2_itemcategory;

  final InputpokemonV2ItemeffecttextAggregateOrderBy?
      pokemon_v2_itemeffecttexts_aggregate;

  final InputpokemonV2ItemflavortextAggregateOrderBy?
      pokemon_v2_itemflavortexts_aggregate;

  final InputpokemonV2ItemflingeffectOrderBy? pokemon_v2_itemflingeffect;

  final InputpokemonV2ItemgameindexAggregateOrderBy?
      pokemon_v2_itemgameindices_aggregate;

  final InputpokemonV2ItemnameAggregateOrderBy? pokemon_v2_itemnames_aggregate;

  final InputpokemonV2ItemspritesAggregateOrderBy?
      pokemon_v2_itemsprites_aggregate;

  final InputpokemonV2MachineAggregateOrderBy? pokemon_v2_machines_aggregate;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemon_v2_pokemonevolutions_aggregate;

  final InputpokemonV2PokemonitemAggregateOrderBy?
      pokemon_v2_pokemonitems_aggregate;

  Map<String, dynamic> toJson() => _$InputpokemonV2ItemOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$name = name;
    final l$pokemonV2PokemonevolutionsByHeldItemId_aggregate =
        pokemonV2PokemonevolutionsByHeldItemId_aggregate;
    final l$pokemon_v2_berries_aggregate = pokemon_v2_berries_aggregate;
    final l$pokemon_v2_evolutionchains_aggregate =
        pokemon_v2_evolutionchains_aggregate;
    final l$pokemon_v2_itemattributemaps_aggregate =
        pokemon_v2_itemattributemaps_aggregate;
    final l$pokemon_v2_itemcategory = pokemon_v2_itemcategory;
    final l$pokemon_v2_itemeffecttexts_aggregate =
        pokemon_v2_itemeffecttexts_aggregate;
    final l$pokemon_v2_itemflavortexts_aggregate =
        pokemon_v2_itemflavortexts_aggregate;
    final l$pokemon_v2_itemflingeffect = pokemon_v2_itemflingeffect;
    final l$pokemon_v2_itemgameindices_aggregate =
        pokemon_v2_itemgameindices_aggregate;
    final l$pokemon_v2_itemnames_aggregate = pokemon_v2_itemnames_aggregate;
    final l$pokemon_v2_itemsprites_aggregate = pokemon_v2_itemsprites_aggregate;
    final l$pokemon_v2_machines_aggregate = pokemon_v2_machines_aggregate;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final l$pokemon_v2_pokemonitems_aggregate =
        pokemon_v2_pokemonitems_aggregate;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id,
      l$name,
      l$pokemonV2PokemonevolutionsByHeldItemId_aggregate,
      l$pokemon_v2_berries_aggregate,
      l$pokemon_v2_evolutionchains_aggregate,
      l$pokemon_v2_itemattributemaps_aggregate,
      l$pokemon_v2_itemcategory,
      l$pokemon_v2_itemeffecttexts_aggregate,
      l$pokemon_v2_itemflavortexts_aggregate,
      l$pokemon_v2_itemflingeffect,
      l$pokemon_v2_itemgameindices_aggregate,
      l$pokemon_v2_itemnames_aggregate,
      l$pokemon_v2_itemsprites_aggregate,
      l$pokemon_v2_machines_aggregate,
      l$pokemon_v2_pokemonevolutions_aggregate,
      l$pokemon_v2_pokemonitems_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2PokemonevolutionsByHeldItemId_aggregate =
        pokemonV2PokemonevolutionsByHeldItemId_aggregate;
    final lOther$pokemonV2PokemonevolutionsByHeldItemId_aggregate =
        other.pokemonV2PokemonevolutionsByHeldItemId_aggregate;
    if (l$pokemonV2PokemonevolutionsByHeldItemId_aggregate !=
        lOther$pokemonV2PokemonevolutionsByHeldItemId_aggregate) return false;
    final l$pokemon_v2_berries_aggregate = pokemon_v2_berries_aggregate;
    final lOther$pokemon_v2_berries_aggregate =
        other.pokemon_v2_berries_aggregate;
    if (l$pokemon_v2_berries_aggregate != lOther$pokemon_v2_berries_aggregate)
      return false;
    final l$pokemon_v2_evolutionchains_aggregate =
        pokemon_v2_evolutionchains_aggregate;
    final lOther$pokemon_v2_evolutionchains_aggregate =
        other.pokemon_v2_evolutionchains_aggregate;
    if (l$pokemon_v2_evolutionchains_aggregate !=
        lOther$pokemon_v2_evolutionchains_aggregate) return false;
    final l$pokemon_v2_itemattributemaps_aggregate =
        pokemon_v2_itemattributemaps_aggregate;
    final lOther$pokemon_v2_itemattributemaps_aggregate =
        other.pokemon_v2_itemattributemaps_aggregate;
    if (l$pokemon_v2_itemattributemaps_aggregate !=
        lOther$pokemon_v2_itemattributemaps_aggregate) return false;
    final l$pokemon_v2_itemcategory = pokemon_v2_itemcategory;
    final lOther$pokemon_v2_itemcategory = other.pokemon_v2_itemcategory;
    if (l$pokemon_v2_itemcategory != lOther$pokemon_v2_itemcategory)
      return false;
    final l$pokemon_v2_itemeffecttexts_aggregate =
        pokemon_v2_itemeffecttexts_aggregate;
    final lOther$pokemon_v2_itemeffecttexts_aggregate =
        other.pokemon_v2_itemeffecttexts_aggregate;
    if (l$pokemon_v2_itemeffecttexts_aggregate !=
        lOther$pokemon_v2_itemeffecttexts_aggregate) return false;
    final l$pokemon_v2_itemflavortexts_aggregate =
        pokemon_v2_itemflavortexts_aggregate;
    final lOther$pokemon_v2_itemflavortexts_aggregate =
        other.pokemon_v2_itemflavortexts_aggregate;
    if (l$pokemon_v2_itemflavortexts_aggregate !=
        lOther$pokemon_v2_itemflavortexts_aggregate) return false;
    final l$pokemon_v2_itemflingeffect = pokemon_v2_itemflingeffect;
    final lOther$pokemon_v2_itemflingeffect = other.pokemon_v2_itemflingeffect;
    if (l$pokemon_v2_itemflingeffect != lOther$pokemon_v2_itemflingeffect)
      return false;
    final l$pokemon_v2_itemgameindices_aggregate =
        pokemon_v2_itemgameindices_aggregate;
    final lOther$pokemon_v2_itemgameindices_aggregate =
        other.pokemon_v2_itemgameindices_aggregate;
    if (l$pokemon_v2_itemgameindices_aggregate !=
        lOther$pokemon_v2_itemgameindices_aggregate) return false;
    final l$pokemon_v2_itemnames_aggregate = pokemon_v2_itemnames_aggregate;
    final lOther$pokemon_v2_itemnames_aggregate =
        other.pokemon_v2_itemnames_aggregate;
    if (l$pokemon_v2_itemnames_aggregate !=
        lOther$pokemon_v2_itemnames_aggregate) return false;
    final l$pokemon_v2_itemsprites_aggregate = pokemon_v2_itemsprites_aggregate;
    final lOther$pokemon_v2_itemsprites_aggregate =
        other.pokemon_v2_itemsprites_aggregate;
    if (l$pokemon_v2_itemsprites_aggregate !=
        lOther$pokemon_v2_itemsprites_aggregate) return false;
    final l$pokemon_v2_machines_aggregate = pokemon_v2_machines_aggregate;
    final lOther$pokemon_v2_machines_aggregate =
        other.pokemon_v2_machines_aggregate;
    if (l$pokemon_v2_machines_aggregate != lOther$pokemon_v2_machines_aggregate)
      return false;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final lOther$pokemon_v2_pokemonevolutions_aggregate =
        other.pokemon_v2_pokemonevolutions_aggregate;
    if (l$pokemon_v2_pokemonevolutions_aggregate !=
        lOther$pokemon_v2_pokemonevolutions_aggregate) return false;
    final l$pokemon_v2_pokemonitems_aggregate =
        pokemon_v2_pokemonitems_aggregate;
    final lOther$pokemon_v2_pokemonitems_aggregate =
        other.pokemon_v2_pokemonitems_aggregate;
    if (l$pokemon_v2_pokemonitems_aggregate !=
        lOther$pokemon_v2_pokemonitems_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemStddevOrderBy {
  InputpokemonV2ItemStddevOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id});

  @override
  factory InputpokemonV2ItemStddevOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemStddevOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemStddevPopOrderBy {
  InputpokemonV2ItemStddevPopOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id});

  @override
  factory InputpokemonV2ItemStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemStddevPopOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemStddevSampOrderBy {
  InputpokemonV2ItemStddevSampOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id});

  @override
  factory InputpokemonV2ItemStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemStddevSampOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemSumOrderBy {
  InputpokemonV2ItemSumOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id});

  @override
  factory InputpokemonV2ItemSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2ItemSumOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemVarPopOrderBy {
  InputpokemonV2ItemVarPopOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id});

  @override
  factory InputpokemonV2ItemVarPopOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemVarPopOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemVarSampOrderBy {
  InputpokemonV2ItemVarSampOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id});

  @override
  factory InputpokemonV2ItemVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemVarSampOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemVarianceOrderBy {
  InputpokemonV2ItemVarianceOrderBy(
      {this.cost,
      this.fling_power,
      this.id,
      this.item_category_id,
      this.item_fling_effect_id});

  @override
  factory InputpokemonV2ItemVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? cost;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? fling_power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemVarianceOrderByToJson(this);
  int get hashCode {
    final l$cost = cost;
    final l$fling_power = fling_power;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$item_fling_effect_id = item_fling_effect_id;
    return Object.hashAll([
      l$cost,
      l$fling_power,
      l$id,
      l$item_category_id,
      l$item_fling_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$cost = cost;
    final lOther$cost = other.cost;
    if (l$cost != lOther$cost) return false;
    final l$fling_power = fling_power;
    final lOther$fling_power = other.fling_power;
    if (l$fling_power != lOther$fling_power) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributeBoolExp {
  InputpokemonV2ItemattributeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_itemattributedescriptions,
      this.pokemon_v2_itemattributemaps,
      this.pokemon_v2_itemattributenames});

  @override
  factory InputpokemonV2ItemattributeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemattributeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemattributeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemattributeBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ItemattributedescriptionBoolExp?
      pokemon_v2_itemattributedescriptions;

  final InputpokemonV2ItemattributemapBoolExp? pokemon_v2_itemattributemaps;

  final InputpokemonV2ItemattributenameBoolExp? pokemon_v2_itemattributenames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_itemattributedescriptions =
        pokemon_v2_itemattributedescriptions;
    final l$pokemon_v2_itemattributemaps = pokemon_v2_itemattributemaps;
    final l$pokemon_v2_itemattributenames = pokemon_v2_itemattributenames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_itemattributedescriptions,
      l$pokemon_v2_itemattributemaps,
      l$pokemon_v2_itemattributenames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemattributedescriptions =
        pokemon_v2_itemattributedescriptions;
    final lOther$pokemon_v2_itemattributedescriptions =
        other.pokemon_v2_itemattributedescriptions;
    if (l$pokemon_v2_itemattributedescriptions !=
        lOther$pokemon_v2_itemattributedescriptions) return false;
    final l$pokemon_v2_itemattributemaps = pokemon_v2_itemattributemaps;
    final lOther$pokemon_v2_itemattributemaps =
        other.pokemon_v2_itemattributemaps;
    if (l$pokemon_v2_itemattributemaps != lOther$pokemon_v2_itemattributemaps)
      return false;
    final l$pokemon_v2_itemattributenames = pokemon_v2_itemattributenames;
    final lOther$pokemon_v2_itemattributenames =
        other.pokemon_v2_itemattributenames;
    if (l$pokemon_v2_itemattributenames != lOther$pokemon_v2_itemattributenames)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributeOrderBy {
  InputpokemonV2ItemattributeOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_itemattributedescriptions_aggregate,
      this.pokemon_v2_itemattributemaps_aggregate,
      this.pokemon_v2_itemattributenames_aggregate});

  @override
  factory InputpokemonV2ItemattributeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ItemattributedescriptionAggregateOrderBy?
      pokemon_v2_itemattributedescriptions_aggregate;

  final InputpokemonV2ItemattributemapAggregateOrderBy?
      pokemon_v2_itemattributemaps_aggregate;

  final InputpokemonV2ItemattributenameAggregateOrderBy?
      pokemon_v2_itemattributenames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributeOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_itemattributedescriptions_aggregate =
        pokemon_v2_itemattributedescriptions_aggregate;
    final l$pokemon_v2_itemattributemaps_aggregate =
        pokemon_v2_itemattributemaps_aggregate;
    final l$pokemon_v2_itemattributenames_aggregate =
        pokemon_v2_itemattributenames_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_itemattributedescriptions_aggregate,
      l$pokemon_v2_itemattributemaps_aggregate,
      l$pokemon_v2_itemattributenames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemattributedescriptions_aggregate =
        pokemon_v2_itemattributedescriptions_aggregate;
    final lOther$pokemon_v2_itemattributedescriptions_aggregate =
        other.pokemon_v2_itemattributedescriptions_aggregate;
    if (l$pokemon_v2_itemattributedescriptions_aggregate !=
        lOther$pokemon_v2_itemattributedescriptions_aggregate) return false;
    final l$pokemon_v2_itemattributemaps_aggregate =
        pokemon_v2_itemattributemaps_aggregate;
    final lOther$pokemon_v2_itemattributemaps_aggregate =
        other.pokemon_v2_itemattributemaps_aggregate;
    if (l$pokemon_v2_itemattributemaps_aggregate !=
        lOther$pokemon_v2_itemattributemaps_aggregate) return false;
    final l$pokemon_v2_itemattributenames_aggregate =
        pokemon_v2_itemattributenames_aggregate;
    final lOther$pokemon_v2_itemattributenames_aggregate =
        other.pokemon_v2_itemattributenames_aggregate;
    if (l$pokemon_v2_itemattributenames_aggregate !=
        lOther$pokemon_v2_itemattributenames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionAggregateOrderBy {
  InputpokemonV2ItemattributedescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemattributedescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2ItemattributedescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemattributedescriptionMaxOrderBy? max;

  final InputpokemonV2ItemattributedescriptionMinOrderBy? min;

  final InputpokemonV2ItemattributedescriptionStddevOrderBy? stddev;

  final InputpokemonV2ItemattributedescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemattributedescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemattributedescriptionSumOrderBy? sum;

  final InputpokemonV2ItemattributedescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2ItemattributedescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2ItemattributedescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionAvgOrderBy {
  InputpokemonV2ItemattributedescriptionAvgOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionBoolExp {
  InputpokemonV2ItemattributedescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.id,
      this.item_attribute_id,
      this.language_id,
      this.pokemon_v2_itemattribute,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemattributedescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemattributedescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemattributedescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemattributedescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_attribute_id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2ItemattributeBoolExp? pokemon_v2_itemattribute;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$id,
      l$item_attribute_id,
      l$language_id,
      l$pokemon_v2_itemattribute,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final lOther$pokemon_v2_itemattribute = other.pokemon_v2_itemattribute;
    if (l$pokemon_v2_itemattribute != lOther$pokemon_v2_itemattribute)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionMaxOrderBy {
  InputpokemonV2ItemattributedescriptionMaxOrderBy(
      {this.description, this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$description, l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionMinOrderBy {
  InputpokemonV2ItemattributedescriptionMinOrderBy(
      {this.description, this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$description, l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionOrderBy {
  InputpokemonV2ItemattributedescriptionOrderBy(
      {this.description,
      this.id,
      this.item_attribute_id,
      this.language_id,
      this.pokemon_v2_itemattribute,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemattributedescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2ItemattributeOrderBy? pokemon_v2_itemattribute;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$description,
      l$id,
      l$item_attribute_id,
      l$language_id,
      l$pokemon_v2_itemattribute,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final lOther$pokemon_v2_itemattribute = other.pokemon_v2_itemattribute;
    if (l$pokemon_v2_itemattribute != lOther$pokemon_v2_itemattribute)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionStddevOrderBy {
  InputpokemonV2ItemattributedescriptionStddevOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionStddevPopOrderBy {
  InputpokemonV2ItemattributedescriptionStddevPopOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionStddevSampOrderBy {
  InputpokemonV2ItemattributedescriptionStddevSampOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionSumOrderBy {
  InputpokemonV2ItemattributedescriptionSumOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionVarPopOrderBy {
  InputpokemonV2ItemattributedescriptionVarPopOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionVarSampOrderBy {
  InputpokemonV2ItemattributedescriptionVarSampOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributedescriptionVarianceOrderBy {
  InputpokemonV2ItemattributedescriptionVarianceOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributedescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributedescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributedescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributedescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapAggregateOrderBy {
  InputpokemonV2ItemattributemapAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemattributemapAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapAggregateOrderByFromJson(json);

  final InputpokemonV2ItemattributemapAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemattributemapMaxOrderBy? max;

  final InputpokemonV2ItemattributemapMinOrderBy? min;

  final InputpokemonV2ItemattributemapStddevOrderBy? stddev;

  final InputpokemonV2ItemattributemapStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemattributemapStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemattributemapSumOrderBy? sum;

  final InputpokemonV2ItemattributemapVarPopOrderBy? var_pop;

  final InputpokemonV2ItemattributemapVarSampOrderBy? var_samp;

  final InputpokemonV2ItemattributemapVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapAvgOrderBy {
  InputpokemonV2ItemattributemapAvgOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapBoolExp {
  InputpokemonV2ItemattributemapBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.item_attribute_id,
      this.item_id,
      this.pokemon_v2_item,
      this.pokemon_v2_itemattribute});

  @override
  factory InputpokemonV2ItemattributemapBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemattributemapBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemattributemapBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemattributemapBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_attribute_id;

  final InputIntComparisonExp? item_id;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2ItemattributeBoolExp? pokemon_v2_itemattribute;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$item_attribute_id,
      l$item_id,
      l$pokemon_v2_item,
      l$pokemon_v2_itemattribute
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final lOther$pokemon_v2_itemattribute = other.pokemon_v2_itemattribute;
    if (l$pokemon_v2_itemattribute != lOther$pokemon_v2_itemattribute)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapMaxOrderBy {
  InputpokemonV2ItemattributemapMaxOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapMinOrderBy {
  InputpokemonV2ItemattributemapMinOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapOrderBy {
  InputpokemonV2ItemattributemapOrderBy(
      {this.id,
      this.item_attribute_id,
      this.item_id,
      this.pokemon_v2_item,
      this.pokemon_v2_itemattribute});

  @override
  factory InputpokemonV2ItemattributemapOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2ItemattributeOrderBy? pokemon_v2_itemattribute;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    return Object.hashAll([
      l$id,
      l$item_attribute_id,
      l$item_id,
      l$pokemon_v2_item,
      l$pokemon_v2_itemattribute
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final lOther$pokemon_v2_itemattribute = other.pokemon_v2_itemattribute;
    if (l$pokemon_v2_itemattribute != lOther$pokemon_v2_itemattribute)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapStddevOrderBy {
  InputpokemonV2ItemattributemapStddevOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapStddevPopOrderBy {
  InputpokemonV2ItemattributemapStddevPopOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapStddevSampOrderBy {
  InputpokemonV2ItemattributemapStddevSampOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapSumOrderBy {
  InputpokemonV2ItemattributemapSumOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapVarPopOrderBy {
  InputpokemonV2ItemattributemapVarPopOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapVarSampOrderBy {
  InputpokemonV2ItemattributemapVarSampOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributemapVarianceOrderBy {
  InputpokemonV2ItemattributemapVarianceOrderBy(
      {this.id, this.item_attribute_id, this.item_id});

  @override
  factory InputpokemonV2ItemattributemapVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributemapVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributemapVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributemapVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameAggregateOrderBy {
  InputpokemonV2ItemattributenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemattributenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameAggregateOrderByFromJson(json);

  final InputpokemonV2ItemattributenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemattributenameMaxOrderBy? max;

  final InputpokemonV2ItemattributenameMinOrderBy? min;

  final InputpokemonV2ItemattributenameStddevOrderBy? stddev;

  final InputpokemonV2ItemattributenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemattributenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemattributenameSumOrderBy? sum;

  final InputpokemonV2ItemattributenameVarPopOrderBy? var_pop;

  final InputpokemonV2ItemattributenameVarSampOrderBy? var_samp;

  final InputpokemonV2ItemattributenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameAvgOrderBy {
  InputpokemonV2ItemattributenameAvgOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameBoolExp {
  InputpokemonV2ItemattributenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.item_attribute_id,
      this.language_id,
      this.name,
      this.pokemon_v2_itemattribute,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemattributenameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemattributenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemattributenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemattributenameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_attribute_id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ItemattributeBoolExp? pokemon_v2_itemattribute;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$item_attribute_id,
      l$language_id,
      l$name,
      l$pokemon_v2_itemattribute,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final lOther$pokemon_v2_itemattribute = other.pokemon_v2_itemattribute;
    if (l$pokemon_v2_itemattribute != lOther$pokemon_v2_itemattribute)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameMaxOrderBy {
  InputpokemonV2ItemattributenameMaxOrderBy(
      {this.id, this.item_attribute_id, this.language_id, this.name});

  @override
  factory InputpokemonV2ItemattributenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameMinOrderBy {
  InputpokemonV2ItemattributenameMinOrderBy(
      {this.id, this.item_attribute_id, this.language_id, this.name});

  @override
  factory InputpokemonV2ItemattributenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameOrderBy {
  InputpokemonV2ItemattributenameOrderBy(
      {this.id,
      this.item_attribute_id,
      this.language_id,
      this.name,
      this.pokemon_v2_itemattribute,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemattributenameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ItemattributeOrderBy? pokemon_v2_itemattribute;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$id,
      l$item_attribute_id,
      l$language_id,
      l$name,
      l$pokemon_v2_itemattribute,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemattribute = pokemon_v2_itemattribute;
    final lOther$pokemon_v2_itemattribute = other.pokemon_v2_itemattribute;
    if (l$pokemon_v2_itemattribute != lOther$pokemon_v2_itemattribute)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameStddevOrderBy {
  InputpokemonV2ItemattributenameStddevOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameStddevPopOrderBy {
  InputpokemonV2ItemattributenameStddevPopOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameStddevSampOrderBy {
  InputpokemonV2ItemattributenameStddevSampOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameSumOrderBy {
  InputpokemonV2ItemattributenameSumOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameVarPopOrderBy {
  InputpokemonV2ItemattributenameVarPopOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameVarSampOrderBy {
  InputpokemonV2ItemattributenameVarSampOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemattributenameVarianceOrderBy {
  InputpokemonV2ItemattributenameVarianceOrderBy(
      {this.id, this.item_attribute_id, this.language_id});

  @override
  factory InputpokemonV2ItemattributenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemattributenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemattributenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_attribute_id = item_attribute_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_attribute_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemattributenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_attribute_id = item_attribute_id;
    final lOther$item_attribute_id = other.item_attribute_id;
    if (l$item_attribute_id != lOther$item_attribute_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryAggregateOrderBy {
  InputpokemonV2ItemcategoryAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemcategoryAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryAggregateOrderByFromJson(json);

  final InputpokemonV2ItemcategoryAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemcategoryMaxOrderBy? max;

  final InputpokemonV2ItemcategoryMinOrderBy? min;

  final InputpokemonV2ItemcategoryStddevOrderBy? stddev;

  final InputpokemonV2ItemcategoryStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemcategoryStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemcategorySumOrderBy? sum;

  final InputpokemonV2ItemcategoryVarPopOrderBy? var_pop;

  final InputpokemonV2ItemcategoryVarSampOrderBy? var_samp;

  final InputpokemonV2ItemcategoryVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryAvgOrderBy {
  InputpokemonV2ItemcategoryAvgOrderBy({this.id, this.item_pocket_id});

  @override
  factory InputpokemonV2ItemcategoryAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    return Object.hashAll([l$id, l$item_pocket_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryBoolExp {
  InputpokemonV2ItemcategoryBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.item_pocket_id,
      this.name,
      this.pokemon_v2_itemcategorynames,
      this.pokemon_v2_itempocket,
      this.pokemon_v2_items});

  @override
  factory InputpokemonV2ItemcategoryBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemcategoryBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemcategoryBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemcategoryBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_pocket_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ItemcategorynameBoolExp? pokemon_v2_itemcategorynames;

  final InputpokemonV2ItempocketBoolExp? pokemon_v2_itempocket;

  final InputpokemonV2ItemBoolExp? pokemon_v2_items;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$name = name;
    final l$pokemon_v2_itemcategorynames = pokemon_v2_itemcategorynames;
    final l$pokemon_v2_itempocket = pokemon_v2_itempocket;
    final l$pokemon_v2_items = pokemon_v2_items;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$item_pocket_id,
      l$name,
      l$pokemon_v2_itemcategorynames,
      l$pokemon_v2_itempocket,
      l$pokemon_v2_items
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemcategorynames = pokemon_v2_itemcategorynames;
    final lOther$pokemon_v2_itemcategorynames =
        other.pokemon_v2_itemcategorynames;
    if (l$pokemon_v2_itemcategorynames != lOther$pokemon_v2_itemcategorynames)
      return false;
    final l$pokemon_v2_itempocket = pokemon_v2_itempocket;
    final lOther$pokemon_v2_itempocket = other.pokemon_v2_itempocket;
    if (l$pokemon_v2_itempocket != lOther$pokemon_v2_itempocket) return false;
    final l$pokemon_v2_items = pokemon_v2_items;
    final lOther$pokemon_v2_items = other.pokemon_v2_items;
    if (l$pokemon_v2_items != lOther$pokemon_v2_items) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryMaxOrderBy {
  InputpokemonV2ItemcategoryMaxOrderBy(
      {this.id, this.item_pocket_id, this.name});

  @override
  factory InputpokemonV2ItemcategoryMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_pocket_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryMinOrderBy {
  InputpokemonV2ItemcategoryMinOrderBy(
      {this.id, this.item_pocket_id, this.name});

  @override
  factory InputpokemonV2ItemcategoryMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_pocket_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryOrderBy {
  InputpokemonV2ItemcategoryOrderBy(
      {this.id,
      this.item_pocket_id,
      this.name,
      this.pokemon_v2_itemcategorynames_aggregate,
      this.pokemon_v2_itempocket,
      this.pokemon_v2_items_aggregate});

  @override
  factory InputpokemonV2ItemcategoryOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ItemcategorynameAggregateOrderBy?
      pokemon_v2_itemcategorynames_aggregate;

  final InputpokemonV2ItempocketOrderBy? pokemon_v2_itempocket;

  final InputpokemonV2ItemAggregateOrderBy? pokemon_v2_items_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$name = name;
    final l$pokemon_v2_itemcategorynames_aggregate =
        pokemon_v2_itemcategorynames_aggregate;
    final l$pokemon_v2_itempocket = pokemon_v2_itempocket;
    final l$pokemon_v2_items_aggregate = pokemon_v2_items_aggregate;
    return Object.hashAll([
      l$id,
      l$item_pocket_id,
      l$name,
      l$pokemon_v2_itemcategorynames_aggregate,
      l$pokemon_v2_itempocket,
      l$pokemon_v2_items_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemcategorynames_aggregate =
        pokemon_v2_itemcategorynames_aggregate;
    final lOther$pokemon_v2_itemcategorynames_aggregate =
        other.pokemon_v2_itemcategorynames_aggregate;
    if (l$pokemon_v2_itemcategorynames_aggregate !=
        lOther$pokemon_v2_itemcategorynames_aggregate) return false;
    final l$pokemon_v2_itempocket = pokemon_v2_itempocket;
    final lOther$pokemon_v2_itempocket = other.pokemon_v2_itempocket;
    if (l$pokemon_v2_itempocket != lOther$pokemon_v2_itempocket) return false;
    final l$pokemon_v2_items_aggregate = pokemon_v2_items_aggregate;
    final lOther$pokemon_v2_items_aggregate = other.pokemon_v2_items_aggregate;
    if (l$pokemon_v2_items_aggregate != lOther$pokemon_v2_items_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryStddevOrderBy {
  InputpokemonV2ItemcategoryStddevOrderBy({this.id, this.item_pocket_id});

  @override
  factory InputpokemonV2ItemcategoryStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    return Object.hashAll([l$id, l$item_pocket_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryStddevPopOrderBy {
  InputpokemonV2ItemcategoryStddevPopOrderBy({this.id, this.item_pocket_id});

  @override
  factory InputpokemonV2ItemcategoryStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    return Object.hashAll([l$id, l$item_pocket_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryStddevSampOrderBy {
  InputpokemonV2ItemcategoryStddevSampOrderBy({this.id, this.item_pocket_id});

  @override
  factory InputpokemonV2ItemcategoryStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    return Object.hashAll([l$id, l$item_pocket_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorySumOrderBy {
  InputpokemonV2ItemcategorySumOrderBy({this.id, this.item_pocket_id});

  @override
  factory InputpokemonV2ItemcategorySumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorySumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorySumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    return Object.hashAll([l$id, l$item_pocket_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorySumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryVarPopOrderBy {
  InputpokemonV2ItemcategoryVarPopOrderBy({this.id, this.item_pocket_id});

  @override
  factory InputpokemonV2ItemcategoryVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    return Object.hashAll([l$id, l$item_pocket_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryVarSampOrderBy {
  InputpokemonV2ItemcategoryVarSampOrderBy({this.id, this.item_pocket_id});

  @override
  factory InputpokemonV2ItemcategoryVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    return Object.hashAll([l$id, l$item_pocket_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategoryVarianceOrderBy {
  InputpokemonV2ItemcategoryVarianceOrderBy({this.id, this.item_pocket_id});

  @override
  factory InputpokemonV2ItemcategoryVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategoryVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategoryVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    return Object.hashAll([l$id, l$item_pocket_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategoryVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameAggregateOrderBy {
  InputpokemonV2ItemcategorynameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemcategorynameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameAggregateOrderByFromJson(json);

  final InputpokemonV2ItemcategorynameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemcategorynameMaxOrderBy? max;

  final InputpokemonV2ItemcategorynameMinOrderBy? min;

  final InputpokemonV2ItemcategorynameStddevOrderBy? stddev;

  final InputpokemonV2ItemcategorynameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemcategorynameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemcategorynameSumOrderBy? sum;

  final InputpokemonV2ItemcategorynameVarPopOrderBy? var_pop;

  final InputpokemonV2ItemcategorynameVarSampOrderBy? var_samp;

  final InputpokemonV2ItemcategorynameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameAvgOrderBy {
  InputpokemonV2ItemcategorynameAvgOrderBy(
      {this.id, this.item_category_id, this.language_id});

  @override
  factory InputpokemonV2ItemcategorynameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_category_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameBoolExp {
  InputpokemonV2ItemcategorynameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.item_category_id,
      this.language_id,
      this.name,
      this.pokemon_v2_itemcategory,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemcategorynameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemcategorynameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemcategorynameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemcategorynameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_category_id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ItemcategoryBoolExp? pokemon_v2_itemcategory;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_itemcategory = pokemon_v2_itemcategory;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$item_category_id,
      l$language_id,
      l$name,
      l$pokemon_v2_itemcategory,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemcategory = pokemon_v2_itemcategory;
    final lOther$pokemon_v2_itemcategory = other.pokemon_v2_itemcategory;
    if (l$pokemon_v2_itemcategory != lOther$pokemon_v2_itemcategory)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameMaxOrderBy {
  InputpokemonV2ItemcategorynameMaxOrderBy(
      {this.id, this.item_category_id, this.language_id, this.name});

  @override
  factory InputpokemonV2ItemcategorynameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_category_id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameMinOrderBy {
  InputpokemonV2ItemcategorynameMinOrderBy(
      {this.id, this.item_category_id, this.language_id, this.name});

  @override
  factory InputpokemonV2ItemcategorynameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_category_id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameOrderBy {
  InputpokemonV2ItemcategorynameOrderBy(
      {this.id,
      this.item_category_id,
      this.language_id,
      this.name,
      this.pokemon_v2_itemcategory,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemcategorynameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ItemcategoryOrderBy? pokemon_v2_itemcategory;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_itemcategory = pokemon_v2_itemcategory;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$id,
      l$item_category_id,
      l$language_id,
      l$name,
      l$pokemon_v2_itemcategory,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemcategory = pokemon_v2_itemcategory;
    final lOther$pokemon_v2_itemcategory = other.pokemon_v2_itemcategory;
    if (l$pokemon_v2_itemcategory != lOther$pokemon_v2_itemcategory)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameStddevOrderBy {
  InputpokemonV2ItemcategorynameStddevOrderBy(
      {this.id, this.item_category_id, this.language_id});

  @override
  factory InputpokemonV2ItemcategorynameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_category_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameStddevPopOrderBy {
  InputpokemonV2ItemcategorynameStddevPopOrderBy(
      {this.id, this.item_category_id, this.language_id});

  @override
  factory InputpokemonV2ItemcategorynameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_category_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameStddevSampOrderBy {
  InputpokemonV2ItemcategorynameStddevSampOrderBy(
      {this.id, this.item_category_id, this.language_id});

  @override
  factory InputpokemonV2ItemcategorynameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_category_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameSumOrderBy {
  InputpokemonV2ItemcategorynameSumOrderBy(
      {this.id, this.item_category_id, this.language_id});

  @override
  factory InputpokemonV2ItemcategorynameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_category_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameVarPopOrderBy {
  InputpokemonV2ItemcategorynameVarPopOrderBy(
      {this.id, this.item_category_id, this.language_id});

  @override
  factory InputpokemonV2ItemcategorynameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_category_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameVarSampOrderBy {
  InputpokemonV2ItemcategorynameVarSampOrderBy(
      {this.id, this.item_category_id, this.language_id});

  @override
  factory InputpokemonV2ItemcategorynameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_category_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemcategorynameVarianceOrderBy {
  InputpokemonV2ItemcategorynameVarianceOrderBy(
      {this.id, this.item_category_id, this.language_id});

  @override
  factory InputpokemonV2ItemcategorynameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemcategorynameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemcategorynameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_category_id = item_category_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_category_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemcategorynameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_category_id = item_category_id;
    final lOther$item_category_id = other.item_category_id;
    if (l$item_category_id != lOther$item_category_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextAggregateOrderBy {
  InputpokemonV2ItemeffecttextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemeffecttextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextAggregateOrderByFromJson(json);

  final InputpokemonV2ItemeffecttextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemeffecttextMaxOrderBy? max;

  final InputpokemonV2ItemeffecttextMinOrderBy? min;

  final InputpokemonV2ItemeffecttextStddevOrderBy? stddev;

  final InputpokemonV2ItemeffecttextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemeffecttextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemeffecttextSumOrderBy? sum;

  final InputpokemonV2ItemeffecttextVarPopOrderBy? var_pop;

  final InputpokemonV2ItemeffecttextVarSampOrderBy? var_samp;

  final InputpokemonV2ItemeffecttextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextAvgOrderBy {
  InputpokemonV2ItemeffecttextAvgOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemeffecttextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextBoolExp {
  InputpokemonV2ItemeffecttextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.effect,
      this.id,
      this.item_id,
      this.language_id,
      this.pokemon_v2_item,
      this.pokemon_v2_language,
      this.short_effect});

  @override
  factory InputpokemonV2ItemeffecttextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemeffecttextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemeffecttextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemeffecttextBoolExp>? $_or;

  final InputStringComparisonExp? effect;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputStringComparisonExp? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$effect = effect;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$short_effect = short_effect;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$effect,
      l$id,
      l$item_id,
      l$language_id,
      l$pokemon_v2_item,
      l$pokemon_v2_language,
      l$short_effect
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextMaxOrderBy {
  InputpokemonV2ItemeffecttextMaxOrderBy(
      {this.effect,
      this.id,
      this.item_id,
      this.language_id,
      this.short_effect});

  @override
  factory InputpokemonV2ItemeffecttextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextMaxOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$short_effect = short_effect;
    return Object.hashAll(
        [l$effect, l$id, l$item_id, l$language_id, l$short_effect]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextMinOrderBy {
  InputpokemonV2ItemeffecttextMinOrderBy(
      {this.effect,
      this.id,
      this.item_id,
      this.language_id,
      this.short_effect});

  @override
  factory InputpokemonV2ItemeffecttextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextMinOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$short_effect = short_effect;
    return Object.hashAll(
        [l$effect, l$id, l$item_id, l$language_id, l$short_effect]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextOrderBy {
  InputpokemonV2ItemeffecttextOrderBy(
      {this.effect,
      this.id,
      this.item_id,
      this.language_id,
      this.pokemon_v2_item,
      this.pokemon_v2_language,
      this.short_effect});

  @override
  factory InputpokemonV2ItemeffecttextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$short_effect = short_effect;
    return Object.hashAll([
      l$effect,
      l$id,
      l$item_id,
      l$language_id,
      l$pokemon_v2_item,
      l$pokemon_v2_language,
      l$short_effect
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextStddevOrderBy {
  InputpokemonV2ItemeffecttextStddevOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemeffecttextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextStddevPopOrderBy {
  InputpokemonV2ItemeffecttextStddevPopOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemeffecttextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextStddevSampOrderBy {
  InputpokemonV2ItemeffecttextStddevSampOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemeffecttextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextSumOrderBy {
  InputpokemonV2ItemeffecttextSumOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemeffecttextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextVarPopOrderBy {
  InputpokemonV2ItemeffecttextVarPopOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemeffecttextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextVarSampOrderBy {
  InputpokemonV2ItemeffecttextVarSampOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemeffecttextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemeffecttextVarianceOrderBy {
  InputpokemonV2ItemeffecttextVarianceOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemeffecttextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemeffecttextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemeffecttextVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemeffecttextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextAggregateOrderBy {
  InputpokemonV2ItemflavortextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemflavortextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextAggregateOrderByFromJson(json);

  final InputpokemonV2ItemflavortextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemflavortextMaxOrderBy? max;

  final InputpokemonV2ItemflavortextMinOrderBy? min;

  final InputpokemonV2ItemflavortextStddevOrderBy? stddev;

  final InputpokemonV2ItemflavortextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemflavortextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemflavortextSumOrderBy? sum;

  final InputpokemonV2ItemflavortextVarPopOrderBy? var_pop;

  final InputpokemonV2ItemflavortextVarSampOrderBy? var_samp;

  final InputpokemonV2ItemflavortextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextAvgOrderBy {
  InputpokemonV2ItemflavortextAvgOrderBy(
      {this.id, this.item_id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextBoolExp {
  InputpokemonV2ItemflavortextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.flavor_text,
      this.id,
      this.item_id,
      this.language_id,
      this.pokemon_v2_item,
      this.pokemon_v2_language,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemflavortextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemflavortextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemflavortextBoolExp>? $_or;

  final InputStringComparisonExp? flavor_text;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$flavor_text,
      l$id,
      l$item_id,
      l$language_id,
      l$pokemon_v2_item,
      l$pokemon_v2_language,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextMaxOrderBy {
  InputpokemonV2ItemflavortextMaxOrderBy(
      {this.flavor_text,
      this.id,
      this.item_id,
      this.language_id,
      this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextMaxOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$flavor_text, l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextMinOrderBy {
  InputpokemonV2ItemflavortextMinOrderBy(
      {this.flavor_text,
      this.id,
      this.item_id,
      this.language_id,
      this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextMinOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$flavor_text, l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextOrderBy {
  InputpokemonV2ItemflavortextOrderBy(
      {this.flavor_text,
      this.id,
      this.item_id,
      this.language_id,
      this.pokemon_v2_item,
      this.pokemon_v2_language,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$flavor_text,
      l$id,
      l$item_id,
      l$language_id,
      l$pokemon_v2_item,
      l$pokemon_v2_language,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextStddevOrderBy {
  InputpokemonV2ItemflavortextStddevOrderBy(
      {this.id, this.item_id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextStddevPopOrderBy {
  InputpokemonV2ItemflavortextStddevPopOrderBy(
      {this.id, this.item_id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextStddevSampOrderBy {
  InputpokemonV2ItemflavortextStddevSampOrderBy(
      {this.id, this.item_id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextSumOrderBy {
  InputpokemonV2ItemflavortextSumOrderBy(
      {this.id, this.item_id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextVarPopOrderBy {
  InputpokemonV2ItemflavortextVarPopOrderBy(
      {this.id, this.item_id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextVarSampOrderBy {
  InputpokemonV2ItemflavortextVarSampOrderBy(
      {this.id, this.item_id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflavortextVarianceOrderBy {
  InputpokemonV2ItemflavortextVarianceOrderBy(
      {this.id, this.item_id, this.language_id, this.version_group_id});

  @override
  factory InputpokemonV2ItemflavortextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflavortextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflavortextVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflavortextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffectBoolExp {
  InputpokemonV2ItemflingeffectBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_itemflingeffecteffecttexts,
      this.pokemon_v2_items});

  @override
  factory InputpokemonV2ItemflingeffectBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffectBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemflingeffectBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemflingeffectBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemflingeffectBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ItemflingeffecteffecttextBoolExp?
      pokemon_v2_itemflingeffecteffecttexts;

  final InputpokemonV2ItemBoolExp? pokemon_v2_items;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffectBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_itemflingeffecteffecttexts =
        pokemon_v2_itemflingeffecteffecttexts;
    final l$pokemon_v2_items = pokemon_v2_items;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_itemflingeffecteffecttexts,
      l$pokemon_v2_items
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffectBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemflingeffecteffecttexts =
        pokemon_v2_itemflingeffecteffecttexts;
    final lOther$pokemon_v2_itemflingeffecteffecttexts =
        other.pokemon_v2_itemflingeffecteffecttexts;
    if (l$pokemon_v2_itemflingeffecteffecttexts !=
        lOther$pokemon_v2_itemflingeffecteffecttexts) return false;
    final l$pokemon_v2_items = pokemon_v2_items;
    final lOther$pokemon_v2_items = other.pokemon_v2_items;
    if (l$pokemon_v2_items != lOther$pokemon_v2_items) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffectOrderBy {
  InputpokemonV2ItemflingeffectOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_itemflingeffecteffecttexts_aggregate,
      this.pokemon_v2_items_aggregate});

  @override
  factory InputpokemonV2ItemflingeffectOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffectOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ItemflingeffecteffecttextAggregateOrderBy?
      pokemon_v2_itemflingeffecteffecttexts_aggregate;

  final InputpokemonV2ItemAggregateOrderBy? pokemon_v2_items_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffectOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_itemflingeffecteffecttexts_aggregate =
        pokemon_v2_itemflingeffecteffecttexts_aggregate;
    final l$pokemon_v2_items_aggregate = pokemon_v2_items_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_itemflingeffecteffecttexts_aggregate,
      l$pokemon_v2_items_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffectOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemflingeffecteffecttexts_aggregate =
        pokemon_v2_itemflingeffecteffecttexts_aggregate;
    final lOther$pokemon_v2_itemflingeffecteffecttexts_aggregate =
        other.pokemon_v2_itemflingeffecteffecttexts_aggregate;
    if (l$pokemon_v2_itemflingeffecteffecttexts_aggregate !=
        lOther$pokemon_v2_itemflingeffecteffecttexts_aggregate) return false;
    final l$pokemon_v2_items_aggregate = pokemon_v2_items_aggregate;
    final lOther$pokemon_v2_items_aggregate = other.pokemon_v2_items_aggregate;
    if (l$pokemon_v2_items_aggregate != lOther$pokemon_v2_items_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextAggregateOrderBy {
  InputpokemonV2ItemflingeffecteffecttextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextAggregateOrderByFromJson(json);

  final InputpokemonV2ItemflingeffecteffecttextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemflingeffecteffecttextMaxOrderBy? max;

  final InputpokemonV2ItemflingeffecteffecttextMinOrderBy? min;

  final InputpokemonV2ItemflingeffecteffecttextStddevOrderBy? stddev;

  final InputpokemonV2ItemflingeffecteffecttextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemflingeffecteffecttextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemflingeffecteffecttextSumOrderBy? sum;

  final InputpokemonV2ItemflingeffecteffecttextVarPopOrderBy? var_pop;

  final InputpokemonV2ItemflingeffecteffecttextVarSampOrderBy? var_samp;

  final InputpokemonV2ItemflingeffecteffecttextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextAvgOrderBy {
  InputpokemonV2ItemflingeffecteffecttextAvgOrderBy(
      {this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextBoolExp {
  InputpokemonV2ItemflingeffecteffecttextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.effect,
      this.id,
      this.item_fling_effect_id,
      this.language_id,
      this.pokemon_v2_itemflingeffect,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemflingeffecteffecttextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemflingeffecteffecttextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemflingeffecteffecttextBoolExp>? $_or;

  final InputStringComparisonExp? effect;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_fling_effect_id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2ItemflingeffectBoolExp? pokemon_v2_itemflingeffect;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$effect = effect;
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    final l$pokemon_v2_itemflingeffect = pokemon_v2_itemflingeffect;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$effect,
      l$id,
      l$item_fling_effect_id,
      l$language_id,
      l$pokemon_v2_itemflingeffect,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_itemflingeffect = pokemon_v2_itemflingeffect;
    final lOther$pokemon_v2_itemflingeffect = other.pokemon_v2_itemflingeffect;
    if (l$pokemon_v2_itemflingeffect != lOther$pokemon_v2_itemflingeffect)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextMaxOrderBy {
  InputpokemonV2ItemflingeffecteffecttextMaxOrderBy(
      {this.effect, this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextMaxOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$effect, l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextMinOrderBy {
  InputpokemonV2ItemflingeffecteffecttextMinOrderBy(
      {this.effect, this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextMinOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll(
        [l$effect, l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextOrderBy {
  InputpokemonV2ItemflingeffecteffecttextOrderBy(
      {this.effect,
      this.id,
      this.item_fling_effect_id,
      this.language_id,
      this.pokemon_v2_itemflingeffect,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2ItemflingeffectOrderBy? pokemon_v2_itemflingeffect;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    final l$pokemon_v2_itemflingeffect = pokemon_v2_itemflingeffect;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$effect,
      l$id,
      l$item_fling_effect_id,
      l$language_id,
      l$pokemon_v2_itemflingeffect,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_itemflingeffect = pokemon_v2_itemflingeffect;
    final lOther$pokemon_v2_itemflingeffect = other.pokemon_v2_itemflingeffect;
    if (l$pokemon_v2_itemflingeffect != lOther$pokemon_v2_itemflingeffect)
      return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextStddevOrderBy {
  InputpokemonV2ItemflingeffecteffecttextStddevOrderBy(
      {this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextStddevPopOrderBy {
  InputpokemonV2ItemflingeffecteffecttextStddevPopOrderBy(
      {this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextStddevSampOrderBy {
  InputpokemonV2ItemflingeffecteffecttextStddevSampOrderBy(
      {this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextSumOrderBy {
  InputpokemonV2ItemflingeffecteffecttextSumOrderBy(
      {this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextVarPopOrderBy {
  InputpokemonV2ItemflingeffecteffecttextVarPopOrderBy(
      {this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextVarSampOrderBy {
  InputpokemonV2ItemflingeffecteffecttextVarSampOrderBy(
      {this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemflingeffecteffecttextVarianceOrderBy {
  InputpokemonV2ItemflingeffecteffecttextVarianceOrderBy(
      {this.id, this.item_fling_effect_id, this.language_id});

  @override
  factory InputpokemonV2ItemflingeffecteffecttextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemflingeffecteffecttextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_fling_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemflingeffecteffecttextVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_fling_effect_id = item_fling_effect_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_fling_effect_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemflingeffecteffecttextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_fling_effect_id = item_fling_effect_id;
    final lOther$item_fling_effect_id = other.item_fling_effect_id;
    if (l$item_fling_effect_id != lOther$item_fling_effect_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexAggregateOrderBy {
  InputpokemonV2ItemgameindexAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemgameindexAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexAggregateOrderByFromJson(json);

  final InputpokemonV2ItemgameindexAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemgameindexMaxOrderBy? max;

  final InputpokemonV2ItemgameindexMinOrderBy? min;

  final InputpokemonV2ItemgameindexStddevOrderBy? stddev;

  final InputpokemonV2ItemgameindexStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemgameindexStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemgameindexSumOrderBy? sum;

  final InputpokemonV2ItemgameindexVarPopOrderBy? var_pop;

  final InputpokemonV2ItemgameindexVarSampOrderBy? var_samp;

  final InputpokemonV2ItemgameindexVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexAvgOrderBy {
  InputpokemonV2ItemgameindexAvgOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexAvgOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexBoolExp {
  InputpokemonV2ItemgameindexBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.game_index,
      this.generation_id,
      this.id,
      this.item_id,
      this.pokemon_v2_generation,
      this.pokemon_v2_item});

  @override
  factory InputpokemonV2ItemgameindexBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemgameindexBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemgameindexBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemgameindexBoolExp>? $_or;

  final InputIntComparisonExp? game_index;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_id;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_item = pokemon_v2_item;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$game_index,
      l$generation_id,
      l$id,
      l$item_id,
      l$pokemon_v2_generation,
      l$pokemon_v2_item
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexMaxOrderBy {
  InputpokemonV2ItemgameindexMaxOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexMaxOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexMinOrderBy {
  InputpokemonV2ItemgameindexMinOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexMinOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexOrderBy {
  InputpokemonV2ItemgameindexOrderBy(
      {this.game_index,
      this.generation_id,
      this.id,
      this.item_id,
      this.pokemon_v2_generation,
      this.pokemon_v2_item});

  @override
  factory InputpokemonV2ItemgameindexOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_item = pokemon_v2_item;
    return Object.hashAll([
      l$game_index,
      l$generation_id,
      l$id,
      l$item_id,
      l$pokemon_v2_generation,
      l$pokemon_v2_item
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexStddevOrderBy {
  InputpokemonV2ItemgameindexStddevOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexStddevOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexStddevPopOrderBy {
  InputpokemonV2ItemgameindexStddevPopOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexStddevPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexStddevSampOrderBy {
  InputpokemonV2ItemgameindexStddevSampOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexStddevSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexSumOrderBy {
  InputpokemonV2ItemgameindexSumOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexSumOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexVarPopOrderBy {
  InputpokemonV2ItemgameindexVarPopOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexVarPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexVarSampOrderBy {
  InputpokemonV2ItemgameindexVarSampOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexVarSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemgameindexVarianceOrderBy {
  InputpokemonV2ItemgameindexVarianceOrderBy(
      {this.game_index, this.generation_id, this.id, this.item_id});

  @override
  factory InputpokemonV2ItemgameindexVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemgameindexVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemgameindexVarianceOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemgameindexVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameAggregateOrderBy {
  InputpokemonV2ItemnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameAggregateOrderByFromJson(json);

  final InputpokemonV2ItemnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemnameMaxOrderBy? max;

  final InputpokemonV2ItemnameMinOrderBy? min;

  final InputpokemonV2ItemnameStddevOrderBy? stddev;

  final InputpokemonV2ItemnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemnameSumOrderBy? sum;

  final InputpokemonV2ItemnameVarPopOrderBy? var_pop;

  final InputpokemonV2ItemnameVarSampOrderBy? var_samp;

  final InputpokemonV2ItemnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameAvgOrderBy {
  InputpokemonV2ItemnameAvgOrderBy({this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameBoolExp {
  InputpokemonV2ItemnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.item_id,
      this.language_id,
      this.name,
      this.pokemon_v2_item,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemnameBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() => _$InputpokemonV2ItemnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$item_id,
      l$language_id,
      l$name,
      l$pokemon_v2_item,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameMaxOrderBy {
  InputpokemonV2ItemnameMaxOrderBy(
      {this.id, this.item_id, this.language_id, this.name});

  @override
  factory InputpokemonV2ItemnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameMinOrderBy {
  InputpokemonV2ItemnameMinOrderBy(
      {this.id, this.item_id, this.language_id, this.name});

  @override
  factory InputpokemonV2ItemnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameOrderBy {
  InputpokemonV2ItemnameOrderBy(
      {this.id,
      this.item_id,
      this.language_id,
      this.name,
      this.pokemon_v2_item,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItemnameOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() => _$InputpokemonV2ItemnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$id,
      l$item_id,
      l$language_id,
      l$name,
      l$pokemon_v2_item,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameStddevOrderBy {
  InputpokemonV2ItemnameStddevOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameStddevPopOrderBy {
  InputpokemonV2ItemnameStddevPopOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameStddevSampOrderBy {
  InputpokemonV2ItemnameStddevSampOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameSumOrderBy {
  InputpokemonV2ItemnameSumOrderBy({this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameVarPopOrderBy {
  InputpokemonV2ItemnameVarPopOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameVarSampOrderBy {
  InputpokemonV2ItemnameVarSampOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemnameVarianceOrderBy {
  InputpokemonV2ItemnameVarianceOrderBy(
      {this.id, this.item_id, this.language_id});

  @override
  factory InputpokemonV2ItemnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketBoolExp {
  InputpokemonV2ItempocketBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_itemcategories,
      this.pokemon_v2_itempocketnames});

  @override
  factory InputpokemonV2ItempocketBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItempocketBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItempocketBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItempocketBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ItemcategoryBoolExp? pokemon_v2_itemcategories;

  final InputpokemonV2ItempocketnameBoolExp? pokemon_v2_itempocketnames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_itemcategories = pokemon_v2_itemcategories;
    final l$pokemon_v2_itempocketnames = pokemon_v2_itempocketnames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_itemcategories,
      l$pokemon_v2_itempocketnames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemcategories = pokemon_v2_itemcategories;
    final lOther$pokemon_v2_itemcategories = other.pokemon_v2_itemcategories;
    if (l$pokemon_v2_itemcategories != lOther$pokemon_v2_itemcategories)
      return false;
    final l$pokemon_v2_itempocketnames = pokemon_v2_itempocketnames;
    final lOther$pokemon_v2_itempocketnames = other.pokemon_v2_itempocketnames;
    if (l$pokemon_v2_itempocketnames != lOther$pokemon_v2_itempocketnames)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketOrderBy {
  InputpokemonV2ItempocketOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_itemcategories_aggregate,
      this.pokemon_v2_itempocketnames_aggregate});

  @override
  factory InputpokemonV2ItempocketOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ItemcategoryAggregateOrderBy?
      pokemon_v2_itemcategories_aggregate;

  final InputpokemonV2ItempocketnameAggregateOrderBy?
      pokemon_v2_itempocketnames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_itemcategories_aggregate =
        pokemon_v2_itemcategories_aggregate;
    final l$pokemon_v2_itempocketnames_aggregate =
        pokemon_v2_itempocketnames_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_itemcategories_aggregate,
      l$pokemon_v2_itempocketnames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itemcategories_aggregate =
        pokemon_v2_itemcategories_aggregate;
    final lOther$pokemon_v2_itemcategories_aggregate =
        other.pokemon_v2_itemcategories_aggregate;
    if (l$pokemon_v2_itemcategories_aggregate !=
        lOther$pokemon_v2_itemcategories_aggregate) return false;
    final l$pokemon_v2_itempocketnames_aggregate =
        pokemon_v2_itempocketnames_aggregate;
    final lOther$pokemon_v2_itempocketnames_aggregate =
        other.pokemon_v2_itempocketnames_aggregate;
    if (l$pokemon_v2_itempocketnames_aggregate !=
        lOther$pokemon_v2_itempocketnames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameAggregateOrderBy {
  InputpokemonV2ItempocketnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItempocketnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameAggregateOrderByFromJson(json);

  final InputpokemonV2ItempocketnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItempocketnameMaxOrderBy? max;

  final InputpokemonV2ItempocketnameMinOrderBy? min;

  final InputpokemonV2ItempocketnameStddevOrderBy? stddev;

  final InputpokemonV2ItempocketnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItempocketnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItempocketnameSumOrderBy? sum;

  final InputpokemonV2ItempocketnameVarPopOrderBy? var_pop;

  final InputpokemonV2ItempocketnameVarSampOrderBy? var_samp;

  final InputpokemonV2ItempocketnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameAvgOrderBy {
  InputpokemonV2ItempocketnameAvgOrderBy(
      {this.id, this.item_pocket_id, this.language_id});

  @override
  factory InputpokemonV2ItempocketnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameBoolExp {
  InputpokemonV2ItempocketnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.item_pocket_id,
      this.language_id,
      this.name,
      this.pokemon_v2_itempocket,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItempocketnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItempocketnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItempocketnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItempocketnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_pocket_id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ItempocketBoolExp? pokemon_v2_itempocket;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_itempocket = pokemon_v2_itempocket;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$item_pocket_id,
      l$language_id,
      l$name,
      l$pokemon_v2_itempocket,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itempocket = pokemon_v2_itempocket;
    final lOther$pokemon_v2_itempocket = other.pokemon_v2_itempocket;
    if (l$pokemon_v2_itempocket != lOther$pokemon_v2_itempocket) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameMaxOrderBy {
  InputpokemonV2ItempocketnameMaxOrderBy(
      {this.id, this.item_pocket_id, this.language_id, this.name});

  @override
  factory InputpokemonV2ItempocketnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameMinOrderBy {
  InputpokemonV2ItempocketnameMinOrderBy(
      {this.id, this.item_pocket_id, this.language_id, this.name});

  @override
  factory InputpokemonV2ItempocketnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameOrderBy {
  InputpokemonV2ItempocketnameOrderBy(
      {this.id,
      this.item_pocket_id,
      this.language_id,
      this.name,
      this.pokemon_v2_itempocket,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2ItempocketnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ItempocketOrderBy? pokemon_v2_itempocket;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_itempocket = pokemon_v2_itempocket;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$id,
      l$item_pocket_id,
      l$language_id,
      l$name,
      l$pokemon_v2_itempocket,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_itempocket = pokemon_v2_itempocket;
    final lOther$pokemon_v2_itempocket = other.pokemon_v2_itempocket;
    if (l$pokemon_v2_itempocket != lOther$pokemon_v2_itempocket) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameStddevOrderBy {
  InputpokemonV2ItempocketnameStddevOrderBy(
      {this.id, this.item_pocket_id, this.language_id});

  @override
  factory InputpokemonV2ItempocketnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameStddevPopOrderBy {
  InputpokemonV2ItempocketnameStddevPopOrderBy(
      {this.id, this.item_pocket_id, this.language_id});

  @override
  factory InputpokemonV2ItempocketnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameStddevSampOrderBy {
  InputpokemonV2ItempocketnameStddevSampOrderBy(
      {this.id, this.item_pocket_id, this.language_id});

  @override
  factory InputpokemonV2ItempocketnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameSumOrderBy {
  InputpokemonV2ItempocketnameSumOrderBy(
      {this.id, this.item_pocket_id, this.language_id});

  @override
  factory InputpokemonV2ItempocketnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameVarPopOrderBy {
  InputpokemonV2ItempocketnameVarPopOrderBy(
      {this.id, this.item_pocket_id, this.language_id});

  @override
  factory InputpokemonV2ItempocketnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameVarSampOrderBy {
  InputpokemonV2ItempocketnameVarSampOrderBy(
      {this.id, this.item_pocket_id, this.language_id});

  @override
  factory InputpokemonV2ItempocketnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItempocketnameVarianceOrderBy {
  InputpokemonV2ItempocketnameVarianceOrderBy(
      {this.id, this.item_pocket_id, this.language_id});

  @override
  factory InputpokemonV2ItempocketnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItempocketnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_pocket_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItempocketnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_pocket_id = item_pocket_id;
    final l$language_id = language_id;
    return Object.hashAll([l$id, l$item_pocket_id, l$language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItempocketnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_pocket_id = item_pocket_id;
    final lOther$item_pocket_id = other.item_pocket_id;
    if (l$item_pocket_id != lOther$item_pocket_id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesAggregateOrderBy {
  InputpokemonV2ItemspritesAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2ItemspritesAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesAggregateOrderByFromJson(json);

  final InputpokemonV2ItemspritesAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2ItemspritesMaxOrderBy? max;

  final InputpokemonV2ItemspritesMinOrderBy? min;

  final InputpokemonV2ItemspritesStddevOrderBy? stddev;

  final InputpokemonV2ItemspritesStddevPopOrderBy? stddev_pop;

  final InputpokemonV2ItemspritesStddevSampOrderBy? stddev_samp;

  final InputpokemonV2ItemspritesSumOrderBy? sum;

  final InputpokemonV2ItemspritesVarPopOrderBy? var_pop;

  final InputpokemonV2ItemspritesVarSampOrderBy? var_samp;

  final InputpokemonV2ItemspritesVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesAvgOrderBy {
  InputpokemonV2ItemspritesAvgOrderBy({this.id, this.item_id});

  @override
  factory InputpokemonV2ItemspritesAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesBoolExp {
  InputpokemonV2ItemspritesBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.item_id,
      this.pokemon_v2_item,
      this.sprites});

  @override
  factory InputpokemonV2ItemspritesBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2ItemspritesBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2ItemspritesBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2ItemspritesBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_id;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputStringComparisonExp? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$sprites = sprites;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$item_id,
      l$pokemon_v2_item,
      l$sprites
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesMaxOrderBy {
  InputpokemonV2ItemspritesMaxOrderBy({this.id, this.item_id, this.sprites});

  @override
  factory InputpokemonV2ItemspritesMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$sprites = sprites;
    return Object.hashAll([l$id, l$item_id, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesMinOrderBy {
  InputpokemonV2ItemspritesMinOrderBy({this.id, this.item_id, this.sprites});

  @override
  factory InputpokemonV2ItemspritesMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$sprites = sprites;
    return Object.hashAll([l$id, l$item_id, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesOrderBy {
  InputpokemonV2ItemspritesOrderBy(
      {this.id, this.item_id, this.pokemon_v2_item, this.sprites});

  @override
  factory InputpokemonV2ItemspritesOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$sprites = sprites;
    return Object.hashAll([l$id, l$item_id, l$pokemon_v2_item, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesStddevOrderBy {
  InputpokemonV2ItemspritesStddevOrderBy({this.id, this.item_id});

  @override
  factory InputpokemonV2ItemspritesStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesStddevPopOrderBy {
  InputpokemonV2ItemspritesStddevPopOrderBy({this.id, this.item_id});

  @override
  factory InputpokemonV2ItemspritesStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesStddevSampOrderBy {
  InputpokemonV2ItemspritesStddevSampOrderBy({this.id, this.item_id});

  @override
  factory InputpokemonV2ItemspritesStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesSumOrderBy {
  InputpokemonV2ItemspritesSumOrderBy({this.id, this.item_id});

  @override
  factory InputpokemonV2ItemspritesSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesVarPopOrderBy {
  InputpokemonV2ItemspritesVarPopOrderBy({this.id, this.item_id});

  @override
  factory InputpokemonV2ItemspritesVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesVarSampOrderBy {
  InputpokemonV2ItemspritesVarSampOrderBy({this.id, this.item_id});

  @override
  factory InputpokemonV2ItemspritesVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2ItemspritesVarianceOrderBy {
  InputpokemonV2ItemspritesVarianceOrderBy({this.id, this.item_id});

  @override
  factory InputpokemonV2ItemspritesVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2ItemspritesVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2ItemspritesVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    return Object.hashAll([l$id, l$item_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2ItemspritesVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguageBoolExp {
  InputpokemonV2LanguageBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.iso3166,
      this.iso639,
      this.name,
      this.official,
      this.order,
      this.pokemonV2LanguagenamesByLocalLanguageId,
      this.pokemon_v2_abilitychangeeffecttexts,
      this.pokemon_v2_abilityeffecttexts,
      this.pokemon_v2_abilityflavortexts,
      this.pokemon_v2_abilitynames,
      this.pokemon_v2_berryfirmnessnames,
      this.pokemon_v2_berryflavornames,
      this.pokemon_v2_characteristicdescriptions,
      this.pokemon_v2_contesteffecteffecttexts,
      this.pokemon_v2_contesteffectflavortexts,
      this.pokemon_v2_contesttypenames,
      this.pokemon_v2_egggroupnames,
      this.pokemon_v2_encounterconditionnames,
      this.pokemon_v2_encounterconditionvaluenames,
      this.pokemon_v2_encountermethodnames,
      this.pokemon_v2_evolutiontriggernames,
      this.pokemon_v2_generationnames,
      this.pokemon_v2_growthratedescriptions,
      this.pokemon_v2_itemattributedescriptions,
      this.pokemon_v2_itemattributenames,
      this.pokemon_v2_itemcategorynames,
      this.pokemon_v2_itemeffecttexts,
      this.pokemon_v2_itemflavortexts,
      this.pokemon_v2_itemflingeffecteffecttexts,
      this.pokemon_v2_itemnames,
      this.pokemon_v2_itempocketnames,
      this.pokemon_v2_languagenames,
      this.pokemon_v2_locationareanames,
      this.pokemon_v2_locationnames,
      this.pokemon_v2_moveattributedescriptions,
      this.pokemon_v2_moveattributenames,
      this.pokemon_v2_movebattlestylenames,
      this.pokemon_v2_movedamageclassdescriptions,
      this.pokemon_v2_movedamageclassnames,
      this.pokemon_v2_moveeffectchangeeffecttexts,
      this.pokemon_v2_moveeffecteffecttexts,
      this.pokemon_v2_moveflavortexts,
      this.pokemon_v2_movelearnmethoddescriptions,
      this.pokemon_v2_movelearnmethodnames,
      this.pokemon_v2_movemetaailmentnames,
      this.pokemon_v2_movemetacategorydescriptions,
      this.pokemon_v2_movenames,
      this.pokemon_v2_movetargetdescriptions,
      this.pokemon_v2_movetargetnames,
      this.pokemon_v2_naturenames,
      this.pokemon_v2_palparkareanames,
      this.pokemon_v2_pokeathlonstatnames,
      this.pokemon_v2_pokedexdescriptions,
      this.pokemon_v2_pokedexnames,
      this.pokemon_v2_pokemoncolornames,
      this.pokemon_v2_pokemonformnames,
      this.pokemon_v2_pokemonhabitatnames,
      this.pokemon_v2_pokemonshapenames,
      this.pokemon_v2_pokemonspeciesdescriptions,
      this.pokemon_v2_pokemonspeciesflavortexts,
      this.pokemon_v2_pokemonspeciesnames,
      this.pokemon_v2_regionnames,
      this.pokemon_v2_statnames,
      this.pokemon_v2_supercontesteffectflavortexts,
      this.pokemon_v2_typenames,
      this.pokemon_v2_versionnames});

  @override
  factory InputpokemonV2LanguageBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2LanguageBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2LanguageBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2LanguageBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2LanguageBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? iso3166;

  final InputStringComparisonExp? iso639;

  final InputStringComparisonExp? name;

  final InputBooleanComparisonExp? official;

  final InputIntComparisonExp? order;

  final InputpokemonV2LanguagenameBoolExp?
      pokemonV2LanguagenamesByLocalLanguageId;

  final InputpokemonV2AbilitychangeeffecttextBoolExp?
      pokemon_v2_abilitychangeeffecttexts;

  final InputpokemonV2AbilityeffecttextBoolExp? pokemon_v2_abilityeffecttexts;

  final InputpokemonV2AbilityflavortextBoolExp? pokemon_v2_abilityflavortexts;

  final InputpokemonV2AbilitynameBoolExp? pokemon_v2_abilitynames;

  final InputpokemonV2BerryfirmnessnameBoolExp? pokemon_v2_berryfirmnessnames;

  final InputpokemonV2BerryflavornameBoolExp? pokemon_v2_berryflavornames;

  final InputpokemonV2CharacteristicdescriptionBoolExp?
      pokemon_v2_characteristicdescriptions;

  final InputpokemonV2ContesteffecteffecttextBoolExp?
      pokemon_v2_contesteffecteffecttexts;

  final InputpokemonV2ContesteffectflavortextBoolExp?
      pokemon_v2_contesteffectflavortexts;

  final InputpokemonV2ContesttypenameBoolExp? pokemon_v2_contesttypenames;

  final InputpokemonV2EgggroupnameBoolExp? pokemon_v2_egggroupnames;

  final InputpokemonV2EncounterconditionnameBoolExp?
      pokemon_v2_encounterconditionnames;

  final InputpokemonV2EncounterconditionvaluenameBoolExp?
      pokemon_v2_encounterconditionvaluenames;

  final InputpokemonV2EncountermethodnameBoolExp?
      pokemon_v2_encountermethodnames;

  final InputpokemonV2EvolutiontriggernameBoolExp?
      pokemon_v2_evolutiontriggernames;

  final InputpokemonV2GenerationnameBoolExp? pokemon_v2_generationnames;

  final InputpokemonV2GrowthratedescriptionBoolExp?
      pokemon_v2_growthratedescriptions;

  final InputpokemonV2ItemattributedescriptionBoolExp?
      pokemon_v2_itemattributedescriptions;

  final InputpokemonV2ItemattributenameBoolExp? pokemon_v2_itemattributenames;

  final InputpokemonV2ItemcategorynameBoolExp? pokemon_v2_itemcategorynames;

  final InputpokemonV2ItemeffecttextBoolExp? pokemon_v2_itemeffecttexts;

  final InputpokemonV2ItemflavortextBoolExp? pokemon_v2_itemflavortexts;

  final InputpokemonV2ItemflingeffecteffecttextBoolExp?
      pokemon_v2_itemflingeffecteffecttexts;

  final InputpokemonV2ItemnameBoolExp? pokemon_v2_itemnames;

  final InputpokemonV2ItempocketnameBoolExp? pokemon_v2_itempocketnames;

  final InputpokemonV2LanguagenameBoolExp? pokemon_v2_languagenames;

  final InputpokemonV2LocationareanameBoolExp? pokemon_v2_locationareanames;

  final InputpokemonV2LocationnameBoolExp? pokemon_v2_locationnames;

  final InputpokemonV2MoveattributedescriptionBoolExp?
      pokemon_v2_moveattributedescriptions;

  final InputpokemonV2MoveattributenameBoolExp? pokemon_v2_moveattributenames;

  final InputpokemonV2MovebattlestylenameBoolExp?
      pokemon_v2_movebattlestylenames;

  final InputpokemonV2MovedamageclassdescriptionBoolExp?
      pokemon_v2_movedamageclassdescriptions;

  final InputpokemonV2MovedamageclassnameBoolExp?
      pokemon_v2_movedamageclassnames;

  final InputpokemonV2MoveeffectchangeeffecttextBoolExp?
      pokemon_v2_moveeffectchangeeffecttexts;

  final InputpokemonV2MoveeffecteffecttextBoolExp?
      pokemon_v2_moveeffecteffecttexts;

  final InputpokemonV2MoveflavortextBoolExp? pokemon_v2_moveflavortexts;

  final InputpokemonV2MovelearnmethoddescriptionBoolExp?
      pokemon_v2_movelearnmethoddescriptions;

  final InputpokemonV2MovelearnmethodnameBoolExp?
      pokemon_v2_movelearnmethodnames;

  final InputpokemonV2MovemetaailmentnameBoolExp?
      pokemon_v2_movemetaailmentnames;

  final InputpokemonV2MovemetacategorydescriptionBoolExp?
      pokemon_v2_movemetacategorydescriptions;

  final InputpokemonV2MovenameBoolExp? pokemon_v2_movenames;

  final InputpokemonV2MovetargetdescriptionBoolExp?
      pokemon_v2_movetargetdescriptions;

  final InputpokemonV2MovetargetnameBoolExp? pokemon_v2_movetargetnames;

  final InputpokemonV2NaturenameBoolExp? pokemon_v2_naturenames;

  final InputpokemonV2PalparkareanameBoolExp? pokemon_v2_palparkareanames;

  final InputpokemonV2PokeathlonstatnameBoolExp? pokemon_v2_pokeathlonstatnames;

  final InputpokemonV2PokedexdescriptionBoolExp? pokemon_v2_pokedexdescriptions;

  final InputpokemonV2PokedexnameBoolExp? pokemon_v2_pokedexnames;

  final InputpokemonV2PokemoncolornameBoolExp? pokemon_v2_pokemoncolornames;

  final InputpokemonV2PokemonformnameBoolExp? pokemon_v2_pokemonformnames;

  final InputpokemonV2PokemonhabitatnameBoolExp? pokemon_v2_pokemonhabitatnames;

  final InputpokemonV2PokemonshapenameBoolExp? pokemon_v2_pokemonshapenames;

  final InputpokemonV2PokemonspeciesdescriptionBoolExp?
      pokemon_v2_pokemonspeciesdescriptions;

  final InputpokemonV2PokemonspeciesflavortextBoolExp?
      pokemon_v2_pokemonspeciesflavortexts;

  final InputpokemonV2PokemonspeciesnameBoolExp? pokemon_v2_pokemonspeciesnames;

  final InputpokemonV2RegionnameBoolExp? pokemon_v2_regionnames;

  final InputpokemonV2StatnameBoolExp? pokemon_v2_statnames;

  final InputpokemonV2SupercontesteffectflavortextBoolExp?
      pokemon_v2_supercontesteffectflavortexts;

  final InputpokemonV2TypenameBoolExp? pokemon_v2_typenames;

  final InputpokemonV2VersionnameBoolExp? pokemon_v2_versionnames;

  Map<String, dynamic> toJson() => _$InputpokemonV2LanguageBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$iso3166 = iso3166;
    final l$iso639 = iso639;
    final l$name = name;
    final l$official = official;
    final l$order = order;
    final l$pokemonV2LanguagenamesByLocalLanguageId =
        pokemonV2LanguagenamesByLocalLanguageId;
    final l$pokemon_v2_abilitychangeeffecttexts =
        pokemon_v2_abilitychangeeffecttexts;
    final l$pokemon_v2_abilityeffecttexts = pokemon_v2_abilityeffecttexts;
    final l$pokemon_v2_abilityflavortexts = pokemon_v2_abilityflavortexts;
    final l$pokemon_v2_abilitynames = pokemon_v2_abilitynames;
    final l$pokemon_v2_berryfirmnessnames = pokemon_v2_berryfirmnessnames;
    final l$pokemon_v2_berryflavornames = pokemon_v2_berryflavornames;
    final l$pokemon_v2_characteristicdescriptions =
        pokemon_v2_characteristicdescriptions;
    final l$pokemon_v2_contesteffecteffecttexts =
        pokemon_v2_contesteffecteffecttexts;
    final l$pokemon_v2_contesteffectflavortexts =
        pokemon_v2_contesteffectflavortexts;
    final l$pokemon_v2_contesttypenames = pokemon_v2_contesttypenames;
    final l$pokemon_v2_egggroupnames = pokemon_v2_egggroupnames;
    final l$pokemon_v2_encounterconditionnames =
        pokemon_v2_encounterconditionnames;
    final l$pokemon_v2_encounterconditionvaluenames =
        pokemon_v2_encounterconditionvaluenames;
    final l$pokemon_v2_encountermethodnames = pokemon_v2_encountermethodnames;
    final l$pokemon_v2_evolutiontriggernames = pokemon_v2_evolutiontriggernames;
    final l$pokemon_v2_generationnames = pokemon_v2_generationnames;
    final l$pokemon_v2_growthratedescriptions =
        pokemon_v2_growthratedescriptions;
    final l$pokemon_v2_itemattributedescriptions =
        pokemon_v2_itemattributedescriptions;
    final l$pokemon_v2_itemattributenames = pokemon_v2_itemattributenames;
    final l$pokemon_v2_itemcategorynames = pokemon_v2_itemcategorynames;
    final l$pokemon_v2_itemeffecttexts = pokemon_v2_itemeffecttexts;
    final l$pokemon_v2_itemflavortexts = pokemon_v2_itemflavortexts;
    final l$pokemon_v2_itemflingeffecteffecttexts =
        pokemon_v2_itemflingeffecteffecttexts;
    final l$pokemon_v2_itemnames = pokemon_v2_itemnames;
    final l$pokemon_v2_itempocketnames = pokemon_v2_itempocketnames;
    final l$pokemon_v2_languagenames = pokemon_v2_languagenames;
    final l$pokemon_v2_locationareanames = pokemon_v2_locationareanames;
    final l$pokemon_v2_locationnames = pokemon_v2_locationnames;
    final l$pokemon_v2_moveattributedescriptions =
        pokemon_v2_moveattributedescriptions;
    final l$pokemon_v2_moveattributenames = pokemon_v2_moveattributenames;
    final l$pokemon_v2_movebattlestylenames = pokemon_v2_movebattlestylenames;
    final l$pokemon_v2_movedamageclassdescriptions =
        pokemon_v2_movedamageclassdescriptions;
    final l$pokemon_v2_movedamageclassnames = pokemon_v2_movedamageclassnames;
    final l$pokemon_v2_moveeffectchangeeffecttexts =
        pokemon_v2_moveeffectchangeeffecttexts;
    final l$pokemon_v2_moveeffecteffecttexts = pokemon_v2_moveeffecteffecttexts;
    final l$pokemon_v2_moveflavortexts = pokemon_v2_moveflavortexts;
    final l$pokemon_v2_movelearnmethoddescriptions =
        pokemon_v2_movelearnmethoddescriptions;
    final l$pokemon_v2_movelearnmethodnames = pokemon_v2_movelearnmethodnames;
    final l$pokemon_v2_movemetaailmentnames = pokemon_v2_movemetaailmentnames;
    final l$pokemon_v2_movemetacategorydescriptions =
        pokemon_v2_movemetacategorydescriptions;
    final l$pokemon_v2_movenames = pokemon_v2_movenames;
    final l$pokemon_v2_movetargetdescriptions =
        pokemon_v2_movetargetdescriptions;
    final l$pokemon_v2_movetargetnames = pokemon_v2_movetargetnames;
    final l$pokemon_v2_naturenames = pokemon_v2_naturenames;
    final l$pokemon_v2_palparkareanames = pokemon_v2_palparkareanames;
    final l$pokemon_v2_pokeathlonstatnames = pokemon_v2_pokeathlonstatnames;
    final l$pokemon_v2_pokedexdescriptions = pokemon_v2_pokedexdescriptions;
    final l$pokemon_v2_pokedexnames = pokemon_v2_pokedexnames;
    final l$pokemon_v2_pokemoncolornames = pokemon_v2_pokemoncolornames;
    final l$pokemon_v2_pokemonformnames = pokemon_v2_pokemonformnames;
    final l$pokemon_v2_pokemonhabitatnames = pokemon_v2_pokemonhabitatnames;
    final l$pokemon_v2_pokemonshapenames = pokemon_v2_pokemonshapenames;
    final l$pokemon_v2_pokemonspeciesdescriptions =
        pokemon_v2_pokemonspeciesdescriptions;
    final l$pokemon_v2_pokemonspeciesflavortexts =
        pokemon_v2_pokemonspeciesflavortexts;
    final l$pokemon_v2_pokemonspeciesnames = pokemon_v2_pokemonspeciesnames;
    final l$pokemon_v2_regionnames = pokemon_v2_regionnames;
    final l$pokemon_v2_statnames = pokemon_v2_statnames;
    final l$pokemon_v2_supercontesteffectflavortexts =
        pokemon_v2_supercontesteffectflavortexts;
    final l$pokemon_v2_typenames = pokemon_v2_typenames;
    final l$pokemon_v2_versionnames = pokemon_v2_versionnames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$iso3166,
      l$iso639,
      l$name,
      l$official,
      l$order,
      l$pokemonV2LanguagenamesByLocalLanguageId,
      l$pokemon_v2_abilitychangeeffecttexts,
      l$pokemon_v2_abilityeffecttexts,
      l$pokemon_v2_abilityflavortexts,
      l$pokemon_v2_abilitynames,
      l$pokemon_v2_berryfirmnessnames,
      l$pokemon_v2_berryflavornames,
      l$pokemon_v2_characteristicdescriptions,
      l$pokemon_v2_contesteffecteffecttexts,
      l$pokemon_v2_contesteffectflavortexts,
      l$pokemon_v2_contesttypenames,
      l$pokemon_v2_egggroupnames,
      l$pokemon_v2_encounterconditionnames,
      l$pokemon_v2_encounterconditionvaluenames,
      l$pokemon_v2_encountermethodnames,
      l$pokemon_v2_evolutiontriggernames,
      l$pokemon_v2_generationnames,
      l$pokemon_v2_growthratedescriptions,
      l$pokemon_v2_itemattributedescriptions,
      l$pokemon_v2_itemattributenames,
      l$pokemon_v2_itemcategorynames,
      l$pokemon_v2_itemeffecttexts,
      l$pokemon_v2_itemflavortexts,
      l$pokemon_v2_itemflingeffecteffecttexts,
      l$pokemon_v2_itemnames,
      l$pokemon_v2_itempocketnames,
      l$pokemon_v2_languagenames,
      l$pokemon_v2_locationareanames,
      l$pokemon_v2_locationnames,
      l$pokemon_v2_moveattributedescriptions,
      l$pokemon_v2_moveattributenames,
      l$pokemon_v2_movebattlestylenames,
      l$pokemon_v2_movedamageclassdescriptions,
      l$pokemon_v2_movedamageclassnames,
      l$pokemon_v2_moveeffectchangeeffecttexts,
      l$pokemon_v2_moveeffecteffecttexts,
      l$pokemon_v2_moveflavortexts,
      l$pokemon_v2_movelearnmethoddescriptions,
      l$pokemon_v2_movelearnmethodnames,
      l$pokemon_v2_movemetaailmentnames,
      l$pokemon_v2_movemetacategorydescriptions,
      l$pokemon_v2_movenames,
      l$pokemon_v2_movetargetdescriptions,
      l$pokemon_v2_movetargetnames,
      l$pokemon_v2_naturenames,
      l$pokemon_v2_palparkareanames,
      l$pokemon_v2_pokeathlonstatnames,
      l$pokemon_v2_pokedexdescriptions,
      l$pokemon_v2_pokedexnames,
      l$pokemon_v2_pokemoncolornames,
      l$pokemon_v2_pokemonformnames,
      l$pokemon_v2_pokemonhabitatnames,
      l$pokemon_v2_pokemonshapenames,
      l$pokemon_v2_pokemonspeciesdescriptions,
      l$pokemon_v2_pokemonspeciesflavortexts,
      l$pokemon_v2_pokemonspeciesnames,
      l$pokemon_v2_regionnames,
      l$pokemon_v2_statnames,
      l$pokemon_v2_supercontesteffectflavortexts,
      l$pokemon_v2_typenames,
      l$pokemon_v2_versionnames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguageBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$iso3166 = iso3166;
    final lOther$iso3166 = other.iso3166;
    if (l$iso3166 != lOther$iso3166) return false;
    final l$iso639 = iso639;
    final lOther$iso639 = other.iso639;
    if (l$iso639 != lOther$iso639) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$official = official;
    final lOther$official = other.official;
    if (l$official != lOther$official) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemonV2LanguagenamesByLocalLanguageId =
        pokemonV2LanguagenamesByLocalLanguageId;
    final lOther$pokemonV2LanguagenamesByLocalLanguageId =
        other.pokemonV2LanguagenamesByLocalLanguageId;
    if (l$pokemonV2LanguagenamesByLocalLanguageId !=
        lOther$pokemonV2LanguagenamesByLocalLanguageId) return false;
    final l$pokemon_v2_abilitychangeeffecttexts =
        pokemon_v2_abilitychangeeffecttexts;
    final lOther$pokemon_v2_abilitychangeeffecttexts =
        other.pokemon_v2_abilitychangeeffecttexts;
    if (l$pokemon_v2_abilitychangeeffecttexts !=
        lOther$pokemon_v2_abilitychangeeffecttexts) return false;
    final l$pokemon_v2_abilityeffecttexts = pokemon_v2_abilityeffecttexts;
    final lOther$pokemon_v2_abilityeffecttexts =
        other.pokemon_v2_abilityeffecttexts;
    if (l$pokemon_v2_abilityeffecttexts != lOther$pokemon_v2_abilityeffecttexts)
      return false;
    final l$pokemon_v2_abilityflavortexts = pokemon_v2_abilityflavortexts;
    final lOther$pokemon_v2_abilityflavortexts =
        other.pokemon_v2_abilityflavortexts;
    if (l$pokemon_v2_abilityflavortexts != lOther$pokemon_v2_abilityflavortexts)
      return false;
    final l$pokemon_v2_abilitynames = pokemon_v2_abilitynames;
    final lOther$pokemon_v2_abilitynames = other.pokemon_v2_abilitynames;
    if (l$pokemon_v2_abilitynames != lOther$pokemon_v2_abilitynames)
      return false;
    final l$pokemon_v2_berryfirmnessnames = pokemon_v2_berryfirmnessnames;
    final lOther$pokemon_v2_berryfirmnessnames =
        other.pokemon_v2_berryfirmnessnames;
    if (l$pokemon_v2_berryfirmnessnames != lOther$pokemon_v2_berryfirmnessnames)
      return false;
    final l$pokemon_v2_berryflavornames = pokemon_v2_berryflavornames;
    final lOther$pokemon_v2_berryflavornames =
        other.pokemon_v2_berryflavornames;
    if (l$pokemon_v2_berryflavornames != lOther$pokemon_v2_berryflavornames)
      return false;
    final l$pokemon_v2_characteristicdescriptions =
        pokemon_v2_characteristicdescriptions;
    final lOther$pokemon_v2_characteristicdescriptions =
        other.pokemon_v2_characteristicdescriptions;
    if (l$pokemon_v2_characteristicdescriptions !=
        lOther$pokemon_v2_characteristicdescriptions) return false;
    final l$pokemon_v2_contesteffecteffecttexts =
        pokemon_v2_contesteffecteffecttexts;
    final lOther$pokemon_v2_contesteffecteffecttexts =
        other.pokemon_v2_contesteffecteffecttexts;
    if (l$pokemon_v2_contesteffecteffecttexts !=
        lOther$pokemon_v2_contesteffecteffecttexts) return false;
    final l$pokemon_v2_contesteffectflavortexts =
        pokemon_v2_contesteffectflavortexts;
    final lOther$pokemon_v2_contesteffectflavortexts =
        other.pokemon_v2_contesteffectflavortexts;
    if (l$pokemon_v2_contesteffectflavortexts !=
        lOther$pokemon_v2_contesteffectflavortexts) return false;
    final l$pokemon_v2_contesttypenames = pokemon_v2_contesttypenames;
    final lOther$pokemon_v2_contesttypenames =
        other.pokemon_v2_contesttypenames;
    if (l$pokemon_v2_contesttypenames != lOther$pokemon_v2_contesttypenames)
      return false;
    final l$pokemon_v2_egggroupnames = pokemon_v2_egggroupnames;
    final lOther$pokemon_v2_egggroupnames = other.pokemon_v2_egggroupnames;
    if (l$pokemon_v2_egggroupnames != lOther$pokemon_v2_egggroupnames)
      return false;
    final l$pokemon_v2_encounterconditionnames =
        pokemon_v2_encounterconditionnames;
    final lOther$pokemon_v2_encounterconditionnames =
        other.pokemon_v2_encounterconditionnames;
    if (l$pokemon_v2_encounterconditionnames !=
        lOther$pokemon_v2_encounterconditionnames) return false;
    final l$pokemon_v2_encounterconditionvaluenames =
        pokemon_v2_encounterconditionvaluenames;
    final lOther$pokemon_v2_encounterconditionvaluenames =
        other.pokemon_v2_encounterconditionvaluenames;
    if (l$pokemon_v2_encounterconditionvaluenames !=
        lOther$pokemon_v2_encounterconditionvaluenames) return false;
    final l$pokemon_v2_encountermethodnames = pokemon_v2_encountermethodnames;
    final lOther$pokemon_v2_encountermethodnames =
        other.pokemon_v2_encountermethodnames;
    if (l$pokemon_v2_encountermethodnames !=
        lOther$pokemon_v2_encountermethodnames) return false;
    final l$pokemon_v2_evolutiontriggernames = pokemon_v2_evolutiontriggernames;
    final lOther$pokemon_v2_evolutiontriggernames =
        other.pokemon_v2_evolutiontriggernames;
    if (l$pokemon_v2_evolutiontriggernames !=
        lOther$pokemon_v2_evolutiontriggernames) return false;
    final l$pokemon_v2_generationnames = pokemon_v2_generationnames;
    final lOther$pokemon_v2_generationnames = other.pokemon_v2_generationnames;
    if (l$pokemon_v2_generationnames != lOther$pokemon_v2_generationnames)
      return false;
    final l$pokemon_v2_growthratedescriptions =
        pokemon_v2_growthratedescriptions;
    final lOther$pokemon_v2_growthratedescriptions =
        other.pokemon_v2_growthratedescriptions;
    if (l$pokemon_v2_growthratedescriptions !=
        lOther$pokemon_v2_growthratedescriptions) return false;
    final l$pokemon_v2_itemattributedescriptions =
        pokemon_v2_itemattributedescriptions;
    final lOther$pokemon_v2_itemattributedescriptions =
        other.pokemon_v2_itemattributedescriptions;
    if (l$pokemon_v2_itemattributedescriptions !=
        lOther$pokemon_v2_itemattributedescriptions) return false;
    final l$pokemon_v2_itemattributenames = pokemon_v2_itemattributenames;
    final lOther$pokemon_v2_itemattributenames =
        other.pokemon_v2_itemattributenames;
    if (l$pokemon_v2_itemattributenames != lOther$pokemon_v2_itemattributenames)
      return false;
    final l$pokemon_v2_itemcategorynames = pokemon_v2_itemcategorynames;
    final lOther$pokemon_v2_itemcategorynames =
        other.pokemon_v2_itemcategorynames;
    if (l$pokemon_v2_itemcategorynames != lOther$pokemon_v2_itemcategorynames)
      return false;
    final l$pokemon_v2_itemeffecttexts = pokemon_v2_itemeffecttexts;
    final lOther$pokemon_v2_itemeffecttexts = other.pokemon_v2_itemeffecttexts;
    if (l$pokemon_v2_itemeffecttexts != lOther$pokemon_v2_itemeffecttexts)
      return false;
    final l$pokemon_v2_itemflavortexts = pokemon_v2_itemflavortexts;
    final lOther$pokemon_v2_itemflavortexts = other.pokemon_v2_itemflavortexts;
    if (l$pokemon_v2_itemflavortexts != lOther$pokemon_v2_itemflavortexts)
      return false;
    final l$pokemon_v2_itemflingeffecteffecttexts =
        pokemon_v2_itemflingeffecteffecttexts;
    final lOther$pokemon_v2_itemflingeffecteffecttexts =
        other.pokemon_v2_itemflingeffecteffecttexts;
    if (l$pokemon_v2_itemflingeffecteffecttexts !=
        lOther$pokemon_v2_itemflingeffecteffecttexts) return false;
    final l$pokemon_v2_itemnames = pokemon_v2_itemnames;
    final lOther$pokemon_v2_itemnames = other.pokemon_v2_itemnames;
    if (l$pokemon_v2_itemnames != lOther$pokemon_v2_itemnames) return false;
    final l$pokemon_v2_itempocketnames = pokemon_v2_itempocketnames;
    final lOther$pokemon_v2_itempocketnames = other.pokemon_v2_itempocketnames;
    if (l$pokemon_v2_itempocketnames != lOther$pokemon_v2_itempocketnames)
      return false;
    final l$pokemon_v2_languagenames = pokemon_v2_languagenames;
    final lOther$pokemon_v2_languagenames = other.pokemon_v2_languagenames;
    if (l$pokemon_v2_languagenames != lOther$pokemon_v2_languagenames)
      return false;
    final l$pokemon_v2_locationareanames = pokemon_v2_locationareanames;
    final lOther$pokemon_v2_locationareanames =
        other.pokemon_v2_locationareanames;
    if (l$pokemon_v2_locationareanames != lOther$pokemon_v2_locationareanames)
      return false;
    final l$pokemon_v2_locationnames = pokemon_v2_locationnames;
    final lOther$pokemon_v2_locationnames = other.pokemon_v2_locationnames;
    if (l$pokemon_v2_locationnames != lOther$pokemon_v2_locationnames)
      return false;
    final l$pokemon_v2_moveattributedescriptions =
        pokemon_v2_moveattributedescriptions;
    final lOther$pokemon_v2_moveattributedescriptions =
        other.pokemon_v2_moveattributedescriptions;
    if (l$pokemon_v2_moveattributedescriptions !=
        lOther$pokemon_v2_moveattributedescriptions) return false;
    final l$pokemon_v2_moveattributenames = pokemon_v2_moveattributenames;
    final lOther$pokemon_v2_moveattributenames =
        other.pokemon_v2_moveattributenames;
    if (l$pokemon_v2_moveattributenames != lOther$pokemon_v2_moveattributenames)
      return false;
    final l$pokemon_v2_movebattlestylenames = pokemon_v2_movebattlestylenames;
    final lOther$pokemon_v2_movebattlestylenames =
        other.pokemon_v2_movebattlestylenames;
    if (l$pokemon_v2_movebattlestylenames !=
        lOther$pokemon_v2_movebattlestylenames) return false;
    final l$pokemon_v2_movedamageclassdescriptions =
        pokemon_v2_movedamageclassdescriptions;
    final lOther$pokemon_v2_movedamageclassdescriptions =
        other.pokemon_v2_movedamageclassdescriptions;
    if (l$pokemon_v2_movedamageclassdescriptions !=
        lOther$pokemon_v2_movedamageclassdescriptions) return false;
    final l$pokemon_v2_movedamageclassnames = pokemon_v2_movedamageclassnames;
    final lOther$pokemon_v2_movedamageclassnames =
        other.pokemon_v2_movedamageclassnames;
    if (l$pokemon_v2_movedamageclassnames !=
        lOther$pokemon_v2_movedamageclassnames) return false;
    final l$pokemon_v2_moveeffectchangeeffecttexts =
        pokemon_v2_moveeffectchangeeffecttexts;
    final lOther$pokemon_v2_moveeffectchangeeffecttexts =
        other.pokemon_v2_moveeffectchangeeffecttexts;
    if (l$pokemon_v2_moveeffectchangeeffecttexts !=
        lOther$pokemon_v2_moveeffectchangeeffecttexts) return false;
    final l$pokemon_v2_moveeffecteffecttexts = pokemon_v2_moveeffecteffecttexts;
    final lOther$pokemon_v2_moveeffecteffecttexts =
        other.pokemon_v2_moveeffecteffecttexts;
    if (l$pokemon_v2_moveeffecteffecttexts !=
        lOther$pokemon_v2_moveeffecteffecttexts) return false;
    final l$pokemon_v2_moveflavortexts = pokemon_v2_moveflavortexts;
    final lOther$pokemon_v2_moveflavortexts = other.pokemon_v2_moveflavortexts;
    if (l$pokemon_v2_moveflavortexts != lOther$pokemon_v2_moveflavortexts)
      return false;
    final l$pokemon_v2_movelearnmethoddescriptions =
        pokemon_v2_movelearnmethoddescriptions;
    final lOther$pokemon_v2_movelearnmethoddescriptions =
        other.pokemon_v2_movelearnmethoddescriptions;
    if (l$pokemon_v2_movelearnmethoddescriptions !=
        lOther$pokemon_v2_movelearnmethoddescriptions) return false;
    final l$pokemon_v2_movelearnmethodnames = pokemon_v2_movelearnmethodnames;
    final lOther$pokemon_v2_movelearnmethodnames =
        other.pokemon_v2_movelearnmethodnames;
    if (l$pokemon_v2_movelearnmethodnames !=
        lOther$pokemon_v2_movelearnmethodnames) return false;
    final l$pokemon_v2_movemetaailmentnames = pokemon_v2_movemetaailmentnames;
    final lOther$pokemon_v2_movemetaailmentnames =
        other.pokemon_v2_movemetaailmentnames;
    if (l$pokemon_v2_movemetaailmentnames !=
        lOther$pokemon_v2_movemetaailmentnames) return false;
    final l$pokemon_v2_movemetacategorydescriptions =
        pokemon_v2_movemetacategorydescriptions;
    final lOther$pokemon_v2_movemetacategorydescriptions =
        other.pokemon_v2_movemetacategorydescriptions;
    if (l$pokemon_v2_movemetacategorydescriptions !=
        lOther$pokemon_v2_movemetacategorydescriptions) return false;
    final l$pokemon_v2_movenames = pokemon_v2_movenames;
    final lOther$pokemon_v2_movenames = other.pokemon_v2_movenames;
    if (l$pokemon_v2_movenames != lOther$pokemon_v2_movenames) return false;
    final l$pokemon_v2_movetargetdescriptions =
        pokemon_v2_movetargetdescriptions;
    final lOther$pokemon_v2_movetargetdescriptions =
        other.pokemon_v2_movetargetdescriptions;
    if (l$pokemon_v2_movetargetdescriptions !=
        lOther$pokemon_v2_movetargetdescriptions) return false;
    final l$pokemon_v2_movetargetnames = pokemon_v2_movetargetnames;
    final lOther$pokemon_v2_movetargetnames = other.pokemon_v2_movetargetnames;
    if (l$pokemon_v2_movetargetnames != lOther$pokemon_v2_movetargetnames)
      return false;
    final l$pokemon_v2_naturenames = pokemon_v2_naturenames;
    final lOther$pokemon_v2_naturenames = other.pokemon_v2_naturenames;
    if (l$pokemon_v2_naturenames != lOther$pokemon_v2_naturenames) return false;
    final l$pokemon_v2_palparkareanames = pokemon_v2_palparkareanames;
    final lOther$pokemon_v2_palparkareanames =
        other.pokemon_v2_palparkareanames;
    if (l$pokemon_v2_palparkareanames != lOther$pokemon_v2_palparkareanames)
      return false;
    final l$pokemon_v2_pokeathlonstatnames = pokemon_v2_pokeathlonstatnames;
    final lOther$pokemon_v2_pokeathlonstatnames =
        other.pokemon_v2_pokeathlonstatnames;
    if (l$pokemon_v2_pokeathlonstatnames !=
        lOther$pokemon_v2_pokeathlonstatnames) return false;
    final l$pokemon_v2_pokedexdescriptions = pokemon_v2_pokedexdescriptions;
    final lOther$pokemon_v2_pokedexdescriptions =
        other.pokemon_v2_pokedexdescriptions;
    if (l$pokemon_v2_pokedexdescriptions !=
        lOther$pokemon_v2_pokedexdescriptions) return false;
    final l$pokemon_v2_pokedexnames = pokemon_v2_pokedexnames;
    final lOther$pokemon_v2_pokedexnames = other.pokemon_v2_pokedexnames;
    if (l$pokemon_v2_pokedexnames != lOther$pokemon_v2_pokedexnames)
      return false;
    final l$pokemon_v2_pokemoncolornames = pokemon_v2_pokemoncolornames;
    final lOther$pokemon_v2_pokemoncolornames =
        other.pokemon_v2_pokemoncolornames;
    if (l$pokemon_v2_pokemoncolornames != lOther$pokemon_v2_pokemoncolornames)
      return false;
    final l$pokemon_v2_pokemonformnames = pokemon_v2_pokemonformnames;
    final lOther$pokemon_v2_pokemonformnames =
        other.pokemon_v2_pokemonformnames;
    if (l$pokemon_v2_pokemonformnames != lOther$pokemon_v2_pokemonformnames)
      return false;
    final l$pokemon_v2_pokemonhabitatnames = pokemon_v2_pokemonhabitatnames;
    final lOther$pokemon_v2_pokemonhabitatnames =
        other.pokemon_v2_pokemonhabitatnames;
    if (l$pokemon_v2_pokemonhabitatnames !=
        lOther$pokemon_v2_pokemonhabitatnames) return false;
    final l$pokemon_v2_pokemonshapenames = pokemon_v2_pokemonshapenames;
    final lOther$pokemon_v2_pokemonshapenames =
        other.pokemon_v2_pokemonshapenames;
    if (l$pokemon_v2_pokemonshapenames != lOther$pokemon_v2_pokemonshapenames)
      return false;
    final l$pokemon_v2_pokemonspeciesdescriptions =
        pokemon_v2_pokemonspeciesdescriptions;
    final lOther$pokemon_v2_pokemonspeciesdescriptions =
        other.pokemon_v2_pokemonspeciesdescriptions;
    if (l$pokemon_v2_pokemonspeciesdescriptions !=
        lOther$pokemon_v2_pokemonspeciesdescriptions) return false;
    final l$pokemon_v2_pokemonspeciesflavortexts =
        pokemon_v2_pokemonspeciesflavortexts;
    final lOther$pokemon_v2_pokemonspeciesflavortexts =
        other.pokemon_v2_pokemonspeciesflavortexts;
    if (l$pokemon_v2_pokemonspeciesflavortexts !=
        lOther$pokemon_v2_pokemonspeciesflavortexts) return false;
    final l$pokemon_v2_pokemonspeciesnames = pokemon_v2_pokemonspeciesnames;
    final lOther$pokemon_v2_pokemonspeciesnames =
        other.pokemon_v2_pokemonspeciesnames;
    if (l$pokemon_v2_pokemonspeciesnames !=
        lOther$pokemon_v2_pokemonspeciesnames) return false;
    final l$pokemon_v2_regionnames = pokemon_v2_regionnames;
    final lOther$pokemon_v2_regionnames = other.pokemon_v2_regionnames;
    if (l$pokemon_v2_regionnames != lOther$pokemon_v2_regionnames) return false;
    final l$pokemon_v2_statnames = pokemon_v2_statnames;
    final lOther$pokemon_v2_statnames = other.pokemon_v2_statnames;
    if (l$pokemon_v2_statnames != lOther$pokemon_v2_statnames) return false;
    final l$pokemon_v2_supercontesteffectflavortexts =
        pokemon_v2_supercontesteffectflavortexts;
    final lOther$pokemon_v2_supercontesteffectflavortexts =
        other.pokemon_v2_supercontesteffectflavortexts;
    if (l$pokemon_v2_supercontesteffectflavortexts !=
        lOther$pokemon_v2_supercontesteffectflavortexts) return false;
    final l$pokemon_v2_typenames = pokemon_v2_typenames;
    final lOther$pokemon_v2_typenames = other.pokemon_v2_typenames;
    if (l$pokemon_v2_typenames != lOther$pokemon_v2_typenames) return false;
    final l$pokemon_v2_versionnames = pokemon_v2_versionnames;
    final lOther$pokemon_v2_versionnames = other.pokemon_v2_versionnames;
    if (l$pokemon_v2_versionnames != lOther$pokemon_v2_versionnames)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguageOrderBy {
  InputpokemonV2LanguageOrderBy(
      {this.id,
      this.iso3166,
      this.iso639,
      this.name,
      this.official,
      this.order,
      this.pokemonV2LanguagenamesByLocalLanguageId_aggregate,
      this.pokemon_v2_abilitychangeeffecttexts_aggregate,
      this.pokemon_v2_abilityeffecttexts_aggregate,
      this.pokemon_v2_abilityflavortexts_aggregate,
      this.pokemon_v2_abilitynames_aggregate,
      this.pokemon_v2_berryfirmnessnames_aggregate,
      this.pokemon_v2_berryflavornames_aggregate,
      this.pokemon_v2_characteristicdescriptions_aggregate,
      this.pokemon_v2_contesteffecteffecttexts_aggregate,
      this.pokemon_v2_contesteffectflavortexts_aggregate,
      this.pokemon_v2_contesttypenames_aggregate,
      this.pokemon_v2_egggroupnames_aggregate,
      this.pokemon_v2_encounterconditionnames_aggregate,
      this.pokemon_v2_encounterconditionvaluenames_aggregate,
      this.pokemon_v2_encountermethodnames_aggregate,
      this.pokemon_v2_evolutiontriggernames_aggregate,
      this.pokemon_v2_generationnames_aggregate,
      this.pokemon_v2_growthratedescriptions_aggregate,
      this.pokemon_v2_itemattributedescriptions_aggregate,
      this.pokemon_v2_itemattributenames_aggregate,
      this.pokemon_v2_itemcategorynames_aggregate,
      this.pokemon_v2_itemeffecttexts_aggregate,
      this.pokemon_v2_itemflavortexts_aggregate,
      this.pokemon_v2_itemflingeffecteffecttexts_aggregate,
      this.pokemon_v2_itemnames_aggregate,
      this.pokemon_v2_itempocketnames_aggregate,
      this.pokemon_v2_languagenames_aggregate,
      this.pokemon_v2_locationareanames_aggregate,
      this.pokemon_v2_locationnames_aggregate,
      this.pokemon_v2_moveattributedescriptions_aggregate,
      this.pokemon_v2_moveattributenames_aggregate,
      this.pokemon_v2_movebattlestylenames_aggregate,
      this.pokemon_v2_movedamageclassdescriptions_aggregate,
      this.pokemon_v2_movedamageclassnames_aggregate,
      this.pokemon_v2_moveeffectchangeeffecttexts_aggregate,
      this.pokemon_v2_moveeffecteffecttexts_aggregate,
      this.pokemon_v2_moveflavortexts_aggregate,
      this.pokemon_v2_movelearnmethoddescriptions_aggregate,
      this.pokemon_v2_movelearnmethodnames_aggregate,
      this.pokemon_v2_movemetaailmentnames_aggregate,
      this.pokemon_v2_movemetacategorydescriptions_aggregate,
      this.pokemon_v2_movenames_aggregate,
      this.pokemon_v2_movetargetdescriptions_aggregate,
      this.pokemon_v2_movetargetnames_aggregate,
      this.pokemon_v2_naturenames_aggregate,
      this.pokemon_v2_palparkareanames_aggregate,
      this.pokemon_v2_pokeathlonstatnames_aggregate,
      this.pokemon_v2_pokedexdescriptions_aggregate,
      this.pokemon_v2_pokedexnames_aggregate,
      this.pokemon_v2_pokemoncolornames_aggregate,
      this.pokemon_v2_pokemonformnames_aggregate,
      this.pokemon_v2_pokemonhabitatnames_aggregate,
      this.pokemon_v2_pokemonshapenames_aggregate,
      this.pokemon_v2_pokemonspeciesdescriptions_aggregate,
      this.pokemon_v2_pokemonspeciesflavortexts_aggregate,
      this.pokemon_v2_pokemonspeciesnames_aggregate,
      this.pokemon_v2_regionnames_aggregate,
      this.pokemon_v2_statnames_aggregate,
      this.pokemon_v2_supercontesteffectflavortexts_aggregate,
      this.pokemon_v2_typenames_aggregate,
      this.pokemon_v2_versionnames_aggregate});

  @override
  factory InputpokemonV2LanguageOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2LanguageOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? iso3166;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? iso639;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? official;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  final InputpokemonV2LanguagenameAggregateOrderBy?
      pokemonV2LanguagenamesByLocalLanguageId_aggregate;

  final InputpokemonV2AbilitychangeeffecttextAggregateOrderBy?
      pokemon_v2_abilitychangeeffecttexts_aggregate;

  final InputpokemonV2AbilityeffecttextAggregateOrderBy?
      pokemon_v2_abilityeffecttexts_aggregate;

  final InputpokemonV2AbilityflavortextAggregateOrderBy?
      pokemon_v2_abilityflavortexts_aggregate;

  final InputpokemonV2AbilitynameAggregateOrderBy?
      pokemon_v2_abilitynames_aggregate;

  final InputpokemonV2BerryfirmnessnameAggregateOrderBy?
      pokemon_v2_berryfirmnessnames_aggregate;

  final InputpokemonV2BerryflavornameAggregateOrderBy?
      pokemon_v2_berryflavornames_aggregate;

  final InputpokemonV2CharacteristicdescriptionAggregateOrderBy?
      pokemon_v2_characteristicdescriptions_aggregate;

  final InputpokemonV2ContesteffecteffecttextAggregateOrderBy?
      pokemon_v2_contesteffecteffecttexts_aggregate;

  final InputpokemonV2ContesteffectflavortextAggregateOrderBy?
      pokemon_v2_contesteffectflavortexts_aggregate;

  final InputpokemonV2ContesttypenameAggregateOrderBy?
      pokemon_v2_contesttypenames_aggregate;

  final InputpokemonV2EgggroupnameAggregateOrderBy?
      pokemon_v2_egggroupnames_aggregate;

  final InputpokemonV2EncounterconditionnameAggregateOrderBy?
      pokemon_v2_encounterconditionnames_aggregate;

  final InputpokemonV2EncounterconditionvaluenameAggregateOrderBy?
      pokemon_v2_encounterconditionvaluenames_aggregate;

  final InputpokemonV2EncountermethodnameAggregateOrderBy?
      pokemon_v2_encountermethodnames_aggregate;

  final InputpokemonV2EvolutiontriggernameAggregateOrderBy?
      pokemon_v2_evolutiontriggernames_aggregate;

  final InputpokemonV2GenerationnameAggregateOrderBy?
      pokemon_v2_generationnames_aggregate;

  final InputpokemonV2GrowthratedescriptionAggregateOrderBy?
      pokemon_v2_growthratedescriptions_aggregate;

  final InputpokemonV2ItemattributedescriptionAggregateOrderBy?
      pokemon_v2_itemattributedescriptions_aggregate;

  final InputpokemonV2ItemattributenameAggregateOrderBy?
      pokemon_v2_itemattributenames_aggregate;

  final InputpokemonV2ItemcategorynameAggregateOrderBy?
      pokemon_v2_itemcategorynames_aggregate;

  final InputpokemonV2ItemeffecttextAggregateOrderBy?
      pokemon_v2_itemeffecttexts_aggregate;

  final InputpokemonV2ItemflavortextAggregateOrderBy?
      pokemon_v2_itemflavortexts_aggregate;

  final InputpokemonV2ItemflingeffecteffecttextAggregateOrderBy?
      pokemon_v2_itemflingeffecteffecttexts_aggregate;

  final InputpokemonV2ItemnameAggregateOrderBy? pokemon_v2_itemnames_aggregate;

  final InputpokemonV2ItempocketnameAggregateOrderBy?
      pokemon_v2_itempocketnames_aggregate;

  final InputpokemonV2LanguagenameAggregateOrderBy?
      pokemon_v2_languagenames_aggregate;

  final InputpokemonV2LocationareanameAggregateOrderBy?
      pokemon_v2_locationareanames_aggregate;

  final InputpokemonV2LocationnameAggregateOrderBy?
      pokemon_v2_locationnames_aggregate;

  final InputpokemonV2MoveattributedescriptionAggregateOrderBy?
      pokemon_v2_moveattributedescriptions_aggregate;

  final InputpokemonV2MoveattributenameAggregateOrderBy?
      pokemon_v2_moveattributenames_aggregate;

  final InputpokemonV2MovebattlestylenameAggregateOrderBy?
      pokemon_v2_movebattlestylenames_aggregate;

  final InputpokemonV2MovedamageclassdescriptionAggregateOrderBy?
      pokemon_v2_movedamageclassdescriptions_aggregate;

  final InputpokemonV2MovedamageclassnameAggregateOrderBy?
      pokemon_v2_movedamageclassnames_aggregate;

  final InputpokemonV2MoveeffectchangeeffecttextAggregateOrderBy?
      pokemon_v2_moveeffectchangeeffecttexts_aggregate;

  final InputpokemonV2MoveeffecteffecttextAggregateOrderBy?
      pokemon_v2_moveeffecteffecttexts_aggregate;

  final InputpokemonV2MoveflavortextAggregateOrderBy?
      pokemon_v2_moveflavortexts_aggregate;

  final InputpokemonV2MovelearnmethoddescriptionAggregateOrderBy?
      pokemon_v2_movelearnmethoddescriptions_aggregate;

  final InputpokemonV2MovelearnmethodnameAggregateOrderBy?
      pokemon_v2_movelearnmethodnames_aggregate;

  final InputpokemonV2MovemetaailmentnameAggregateOrderBy?
      pokemon_v2_movemetaailmentnames_aggregate;

  final InputpokemonV2MovemetacategorydescriptionAggregateOrderBy?
      pokemon_v2_movemetacategorydescriptions_aggregate;

  final InputpokemonV2MovenameAggregateOrderBy? pokemon_v2_movenames_aggregate;

  final InputpokemonV2MovetargetdescriptionAggregateOrderBy?
      pokemon_v2_movetargetdescriptions_aggregate;

  final InputpokemonV2MovetargetnameAggregateOrderBy?
      pokemon_v2_movetargetnames_aggregate;

  final InputpokemonV2NaturenameAggregateOrderBy?
      pokemon_v2_naturenames_aggregate;

  final InputpokemonV2PalparkareanameAggregateOrderBy?
      pokemon_v2_palparkareanames_aggregate;

  final InputpokemonV2PokeathlonstatnameAggregateOrderBy?
      pokemon_v2_pokeathlonstatnames_aggregate;

  final InputpokemonV2PokedexdescriptionAggregateOrderBy?
      pokemon_v2_pokedexdescriptions_aggregate;

  final InputpokemonV2PokedexnameAggregateOrderBy?
      pokemon_v2_pokedexnames_aggregate;

  final InputpokemonV2PokemoncolornameAggregateOrderBy?
      pokemon_v2_pokemoncolornames_aggregate;

  final InputpokemonV2PokemonformnameAggregateOrderBy?
      pokemon_v2_pokemonformnames_aggregate;

  final InputpokemonV2PokemonhabitatnameAggregateOrderBy?
      pokemon_v2_pokemonhabitatnames_aggregate;

  final InputpokemonV2PokemonshapenameAggregateOrderBy?
      pokemon_v2_pokemonshapenames_aggregate;

  final InputpokemonV2PokemonspeciesdescriptionAggregateOrderBy?
      pokemon_v2_pokemonspeciesdescriptions_aggregate;

  final InputpokemonV2PokemonspeciesflavortextAggregateOrderBy?
      pokemon_v2_pokemonspeciesflavortexts_aggregate;

  final InputpokemonV2PokemonspeciesnameAggregateOrderBy?
      pokemon_v2_pokemonspeciesnames_aggregate;

  final InputpokemonV2RegionnameAggregateOrderBy?
      pokemon_v2_regionnames_aggregate;

  final InputpokemonV2StatnameAggregateOrderBy? pokemon_v2_statnames_aggregate;

  final InputpokemonV2SupercontesteffectflavortextAggregateOrderBy?
      pokemon_v2_supercontesteffectflavortexts_aggregate;

  final InputpokemonV2TypenameAggregateOrderBy? pokemon_v2_typenames_aggregate;

  final InputpokemonV2VersionnameAggregateOrderBy?
      pokemon_v2_versionnames_aggregate;

  Map<String, dynamic> toJson() => _$InputpokemonV2LanguageOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$iso3166 = iso3166;
    final l$iso639 = iso639;
    final l$name = name;
    final l$official = official;
    final l$order = order;
    final l$pokemonV2LanguagenamesByLocalLanguageId_aggregate =
        pokemonV2LanguagenamesByLocalLanguageId_aggregate;
    final l$pokemon_v2_abilitychangeeffecttexts_aggregate =
        pokemon_v2_abilitychangeeffecttexts_aggregate;
    final l$pokemon_v2_abilityeffecttexts_aggregate =
        pokemon_v2_abilityeffecttexts_aggregate;
    final l$pokemon_v2_abilityflavortexts_aggregate =
        pokemon_v2_abilityflavortexts_aggregate;
    final l$pokemon_v2_abilitynames_aggregate =
        pokemon_v2_abilitynames_aggregate;
    final l$pokemon_v2_berryfirmnessnames_aggregate =
        pokemon_v2_berryfirmnessnames_aggregate;
    final l$pokemon_v2_berryflavornames_aggregate =
        pokemon_v2_berryflavornames_aggregate;
    final l$pokemon_v2_characteristicdescriptions_aggregate =
        pokemon_v2_characteristicdescriptions_aggregate;
    final l$pokemon_v2_contesteffecteffecttexts_aggregate =
        pokemon_v2_contesteffecteffecttexts_aggregate;
    final l$pokemon_v2_contesteffectflavortexts_aggregate =
        pokemon_v2_contesteffectflavortexts_aggregate;
    final l$pokemon_v2_contesttypenames_aggregate =
        pokemon_v2_contesttypenames_aggregate;
    final l$pokemon_v2_egggroupnames_aggregate =
        pokemon_v2_egggroupnames_aggregate;
    final l$pokemon_v2_encounterconditionnames_aggregate =
        pokemon_v2_encounterconditionnames_aggregate;
    final l$pokemon_v2_encounterconditionvaluenames_aggregate =
        pokemon_v2_encounterconditionvaluenames_aggregate;
    final l$pokemon_v2_encountermethodnames_aggregate =
        pokemon_v2_encountermethodnames_aggregate;
    final l$pokemon_v2_evolutiontriggernames_aggregate =
        pokemon_v2_evolutiontriggernames_aggregate;
    final l$pokemon_v2_generationnames_aggregate =
        pokemon_v2_generationnames_aggregate;
    final l$pokemon_v2_growthratedescriptions_aggregate =
        pokemon_v2_growthratedescriptions_aggregate;
    final l$pokemon_v2_itemattributedescriptions_aggregate =
        pokemon_v2_itemattributedescriptions_aggregate;
    final l$pokemon_v2_itemattributenames_aggregate =
        pokemon_v2_itemattributenames_aggregate;
    final l$pokemon_v2_itemcategorynames_aggregate =
        pokemon_v2_itemcategorynames_aggregate;
    final l$pokemon_v2_itemeffecttexts_aggregate =
        pokemon_v2_itemeffecttexts_aggregate;
    final l$pokemon_v2_itemflavortexts_aggregate =
        pokemon_v2_itemflavortexts_aggregate;
    final l$pokemon_v2_itemflingeffecteffecttexts_aggregate =
        pokemon_v2_itemflingeffecteffecttexts_aggregate;
    final l$pokemon_v2_itemnames_aggregate = pokemon_v2_itemnames_aggregate;
    final l$pokemon_v2_itempocketnames_aggregate =
        pokemon_v2_itempocketnames_aggregate;
    final l$pokemon_v2_languagenames_aggregate =
        pokemon_v2_languagenames_aggregate;
    final l$pokemon_v2_locationareanames_aggregate =
        pokemon_v2_locationareanames_aggregate;
    final l$pokemon_v2_locationnames_aggregate =
        pokemon_v2_locationnames_aggregate;
    final l$pokemon_v2_moveattributedescriptions_aggregate =
        pokemon_v2_moveattributedescriptions_aggregate;
    final l$pokemon_v2_moveattributenames_aggregate =
        pokemon_v2_moveattributenames_aggregate;
    final l$pokemon_v2_movebattlestylenames_aggregate =
        pokemon_v2_movebattlestylenames_aggregate;
    final l$pokemon_v2_movedamageclassdescriptions_aggregate =
        pokemon_v2_movedamageclassdescriptions_aggregate;
    final l$pokemon_v2_movedamageclassnames_aggregate =
        pokemon_v2_movedamageclassnames_aggregate;
    final l$pokemon_v2_moveeffectchangeeffecttexts_aggregate =
        pokemon_v2_moveeffectchangeeffecttexts_aggregate;
    final l$pokemon_v2_moveeffecteffecttexts_aggregate =
        pokemon_v2_moveeffecteffecttexts_aggregate;
    final l$pokemon_v2_moveflavortexts_aggregate =
        pokemon_v2_moveflavortexts_aggregate;
    final l$pokemon_v2_movelearnmethoddescriptions_aggregate =
        pokemon_v2_movelearnmethoddescriptions_aggregate;
    final l$pokemon_v2_movelearnmethodnames_aggregate =
        pokemon_v2_movelearnmethodnames_aggregate;
    final l$pokemon_v2_movemetaailmentnames_aggregate =
        pokemon_v2_movemetaailmentnames_aggregate;
    final l$pokemon_v2_movemetacategorydescriptions_aggregate =
        pokemon_v2_movemetacategorydescriptions_aggregate;
    final l$pokemon_v2_movenames_aggregate = pokemon_v2_movenames_aggregate;
    final l$pokemon_v2_movetargetdescriptions_aggregate =
        pokemon_v2_movetargetdescriptions_aggregate;
    final l$pokemon_v2_movetargetnames_aggregate =
        pokemon_v2_movetargetnames_aggregate;
    final l$pokemon_v2_naturenames_aggregate = pokemon_v2_naturenames_aggregate;
    final l$pokemon_v2_palparkareanames_aggregate =
        pokemon_v2_palparkareanames_aggregate;
    final l$pokemon_v2_pokeathlonstatnames_aggregate =
        pokemon_v2_pokeathlonstatnames_aggregate;
    final l$pokemon_v2_pokedexdescriptions_aggregate =
        pokemon_v2_pokedexdescriptions_aggregate;
    final l$pokemon_v2_pokedexnames_aggregate =
        pokemon_v2_pokedexnames_aggregate;
    final l$pokemon_v2_pokemoncolornames_aggregate =
        pokemon_v2_pokemoncolornames_aggregate;
    final l$pokemon_v2_pokemonformnames_aggregate =
        pokemon_v2_pokemonformnames_aggregate;
    final l$pokemon_v2_pokemonhabitatnames_aggregate =
        pokemon_v2_pokemonhabitatnames_aggregate;
    final l$pokemon_v2_pokemonshapenames_aggregate =
        pokemon_v2_pokemonshapenames_aggregate;
    final l$pokemon_v2_pokemonspeciesdescriptions_aggregate =
        pokemon_v2_pokemonspeciesdescriptions_aggregate;
    final l$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        pokemon_v2_pokemonspeciesflavortexts_aggregate;
    final l$pokemon_v2_pokemonspeciesnames_aggregate =
        pokemon_v2_pokemonspeciesnames_aggregate;
    final l$pokemon_v2_regionnames_aggregate = pokemon_v2_regionnames_aggregate;
    final l$pokemon_v2_statnames_aggregate = pokemon_v2_statnames_aggregate;
    final l$pokemon_v2_supercontesteffectflavortexts_aggregate =
        pokemon_v2_supercontesteffectflavortexts_aggregate;
    final l$pokemon_v2_typenames_aggregate = pokemon_v2_typenames_aggregate;
    final l$pokemon_v2_versionnames_aggregate =
        pokemon_v2_versionnames_aggregate;
    return Object.hashAll([
      l$id,
      l$iso3166,
      l$iso639,
      l$name,
      l$official,
      l$order,
      l$pokemonV2LanguagenamesByLocalLanguageId_aggregate,
      l$pokemon_v2_abilitychangeeffecttexts_aggregate,
      l$pokemon_v2_abilityeffecttexts_aggregate,
      l$pokemon_v2_abilityflavortexts_aggregate,
      l$pokemon_v2_abilitynames_aggregate,
      l$pokemon_v2_berryfirmnessnames_aggregate,
      l$pokemon_v2_berryflavornames_aggregate,
      l$pokemon_v2_characteristicdescriptions_aggregate,
      l$pokemon_v2_contesteffecteffecttexts_aggregate,
      l$pokemon_v2_contesteffectflavortexts_aggregate,
      l$pokemon_v2_contesttypenames_aggregate,
      l$pokemon_v2_egggroupnames_aggregate,
      l$pokemon_v2_encounterconditionnames_aggregate,
      l$pokemon_v2_encounterconditionvaluenames_aggregate,
      l$pokemon_v2_encountermethodnames_aggregate,
      l$pokemon_v2_evolutiontriggernames_aggregate,
      l$pokemon_v2_generationnames_aggregate,
      l$pokemon_v2_growthratedescriptions_aggregate,
      l$pokemon_v2_itemattributedescriptions_aggregate,
      l$pokemon_v2_itemattributenames_aggregate,
      l$pokemon_v2_itemcategorynames_aggregate,
      l$pokemon_v2_itemeffecttexts_aggregate,
      l$pokemon_v2_itemflavortexts_aggregate,
      l$pokemon_v2_itemflingeffecteffecttexts_aggregate,
      l$pokemon_v2_itemnames_aggregate,
      l$pokemon_v2_itempocketnames_aggregate,
      l$pokemon_v2_languagenames_aggregate,
      l$pokemon_v2_locationareanames_aggregate,
      l$pokemon_v2_locationnames_aggregate,
      l$pokemon_v2_moveattributedescriptions_aggregate,
      l$pokemon_v2_moveattributenames_aggregate,
      l$pokemon_v2_movebattlestylenames_aggregate,
      l$pokemon_v2_movedamageclassdescriptions_aggregate,
      l$pokemon_v2_movedamageclassnames_aggregate,
      l$pokemon_v2_moveeffectchangeeffecttexts_aggregate,
      l$pokemon_v2_moveeffecteffecttexts_aggregate,
      l$pokemon_v2_moveflavortexts_aggregate,
      l$pokemon_v2_movelearnmethoddescriptions_aggregate,
      l$pokemon_v2_movelearnmethodnames_aggregate,
      l$pokemon_v2_movemetaailmentnames_aggregate,
      l$pokemon_v2_movemetacategorydescriptions_aggregate,
      l$pokemon_v2_movenames_aggregate,
      l$pokemon_v2_movetargetdescriptions_aggregate,
      l$pokemon_v2_movetargetnames_aggregate,
      l$pokemon_v2_naturenames_aggregate,
      l$pokemon_v2_palparkareanames_aggregate,
      l$pokemon_v2_pokeathlonstatnames_aggregate,
      l$pokemon_v2_pokedexdescriptions_aggregate,
      l$pokemon_v2_pokedexnames_aggregate,
      l$pokemon_v2_pokemoncolornames_aggregate,
      l$pokemon_v2_pokemonformnames_aggregate,
      l$pokemon_v2_pokemonhabitatnames_aggregate,
      l$pokemon_v2_pokemonshapenames_aggregate,
      l$pokemon_v2_pokemonspeciesdescriptions_aggregate,
      l$pokemon_v2_pokemonspeciesflavortexts_aggregate,
      l$pokemon_v2_pokemonspeciesnames_aggregate,
      l$pokemon_v2_regionnames_aggregate,
      l$pokemon_v2_statnames_aggregate,
      l$pokemon_v2_supercontesteffectflavortexts_aggregate,
      l$pokemon_v2_typenames_aggregate,
      l$pokemon_v2_versionnames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguageOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$iso3166 = iso3166;
    final lOther$iso3166 = other.iso3166;
    if (l$iso3166 != lOther$iso3166) return false;
    final l$iso639 = iso639;
    final lOther$iso639 = other.iso639;
    if (l$iso639 != lOther$iso639) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$official = official;
    final lOther$official = other.official;
    if (l$official != lOther$official) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemonV2LanguagenamesByLocalLanguageId_aggregate =
        pokemonV2LanguagenamesByLocalLanguageId_aggregate;
    final lOther$pokemonV2LanguagenamesByLocalLanguageId_aggregate =
        other.pokemonV2LanguagenamesByLocalLanguageId_aggregate;
    if (l$pokemonV2LanguagenamesByLocalLanguageId_aggregate !=
        lOther$pokemonV2LanguagenamesByLocalLanguageId_aggregate) return false;
    final l$pokemon_v2_abilitychangeeffecttexts_aggregate =
        pokemon_v2_abilitychangeeffecttexts_aggregate;
    final lOther$pokemon_v2_abilitychangeeffecttexts_aggregate =
        other.pokemon_v2_abilitychangeeffecttexts_aggregate;
    if (l$pokemon_v2_abilitychangeeffecttexts_aggregate !=
        lOther$pokemon_v2_abilitychangeeffecttexts_aggregate) return false;
    final l$pokemon_v2_abilityeffecttexts_aggregate =
        pokemon_v2_abilityeffecttexts_aggregate;
    final lOther$pokemon_v2_abilityeffecttexts_aggregate =
        other.pokemon_v2_abilityeffecttexts_aggregate;
    if (l$pokemon_v2_abilityeffecttexts_aggregate !=
        lOther$pokemon_v2_abilityeffecttexts_aggregate) return false;
    final l$pokemon_v2_abilityflavortexts_aggregate =
        pokemon_v2_abilityflavortexts_aggregate;
    final lOther$pokemon_v2_abilityflavortexts_aggregate =
        other.pokemon_v2_abilityflavortexts_aggregate;
    if (l$pokemon_v2_abilityflavortexts_aggregate !=
        lOther$pokemon_v2_abilityflavortexts_aggregate) return false;
    final l$pokemon_v2_abilitynames_aggregate =
        pokemon_v2_abilitynames_aggregate;
    final lOther$pokemon_v2_abilitynames_aggregate =
        other.pokemon_v2_abilitynames_aggregate;
    if (l$pokemon_v2_abilitynames_aggregate !=
        lOther$pokemon_v2_abilitynames_aggregate) return false;
    final l$pokemon_v2_berryfirmnessnames_aggregate =
        pokemon_v2_berryfirmnessnames_aggregate;
    final lOther$pokemon_v2_berryfirmnessnames_aggregate =
        other.pokemon_v2_berryfirmnessnames_aggregate;
    if (l$pokemon_v2_berryfirmnessnames_aggregate !=
        lOther$pokemon_v2_berryfirmnessnames_aggregate) return false;
    final l$pokemon_v2_berryflavornames_aggregate =
        pokemon_v2_berryflavornames_aggregate;
    final lOther$pokemon_v2_berryflavornames_aggregate =
        other.pokemon_v2_berryflavornames_aggregate;
    if (l$pokemon_v2_berryflavornames_aggregate !=
        lOther$pokemon_v2_berryflavornames_aggregate) return false;
    final l$pokemon_v2_characteristicdescriptions_aggregate =
        pokemon_v2_characteristicdescriptions_aggregate;
    final lOther$pokemon_v2_characteristicdescriptions_aggregate =
        other.pokemon_v2_characteristicdescriptions_aggregate;
    if (l$pokemon_v2_characteristicdescriptions_aggregate !=
        lOther$pokemon_v2_characteristicdescriptions_aggregate) return false;
    final l$pokemon_v2_contesteffecteffecttexts_aggregate =
        pokemon_v2_contesteffecteffecttexts_aggregate;
    final lOther$pokemon_v2_contesteffecteffecttexts_aggregate =
        other.pokemon_v2_contesteffecteffecttexts_aggregate;
    if (l$pokemon_v2_contesteffecteffecttexts_aggregate !=
        lOther$pokemon_v2_contesteffecteffecttexts_aggregate) return false;
    final l$pokemon_v2_contesteffectflavortexts_aggregate =
        pokemon_v2_contesteffectflavortexts_aggregate;
    final lOther$pokemon_v2_contesteffectflavortexts_aggregate =
        other.pokemon_v2_contesteffectflavortexts_aggregate;
    if (l$pokemon_v2_contesteffectflavortexts_aggregate !=
        lOther$pokemon_v2_contesteffectflavortexts_aggregate) return false;
    final l$pokemon_v2_contesttypenames_aggregate =
        pokemon_v2_contesttypenames_aggregate;
    final lOther$pokemon_v2_contesttypenames_aggregate =
        other.pokemon_v2_contesttypenames_aggregate;
    if (l$pokemon_v2_contesttypenames_aggregate !=
        lOther$pokemon_v2_contesttypenames_aggregate) return false;
    final l$pokemon_v2_egggroupnames_aggregate =
        pokemon_v2_egggroupnames_aggregate;
    final lOther$pokemon_v2_egggroupnames_aggregate =
        other.pokemon_v2_egggroupnames_aggregate;
    if (l$pokemon_v2_egggroupnames_aggregate !=
        lOther$pokemon_v2_egggroupnames_aggregate) return false;
    final l$pokemon_v2_encounterconditionnames_aggregate =
        pokemon_v2_encounterconditionnames_aggregate;
    final lOther$pokemon_v2_encounterconditionnames_aggregate =
        other.pokemon_v2_encounterconditionnames_aggregate;
    if (l$pokemon_v2_encounterconditionnames_aggregate !=
        lOther$pokemon_v2_encounterconditionnames_aggregate) return false;
    final l$pokemon_v2_encounterconditionvaluenames_aggregate =
        pokemon_v2_encounterconditionvaluenames_aggregate;
    final lOther$pokemon_v2_encounterconditionvaluenames_aggregate =
        other.pokemon_v2_encounterconditionvaluenames_aggregate;
    if (l$pokemon_v2_encounterconditionvaluenames_aggregate !=
        lOther$pokemon_v2_encounterconditionvaluenames_aggregate) return false;
    final l$pokemon_v2_encountermethodnames_aggregate =
        pokemon_v2_encountermethodnames_aggregate;
    final lOther$pokemon_v2_encountermethodnames_aggregate =
        other.pokemon_v2_encountermethodnames_aggregate;
    if (l$pokemon_v2_encountermethodnames_aggregate !=
        lOther$pokemon_v2_encountermethodnames_aggregate) return false;
    final l$pokemon_v2_evolutiontriggernames_aggregate =
        pokemon_v2_evolutiontriggernames_aggregate;
    final lOther$pokemon_v2_evolutiontriggernames_aggregate =
        other.pokemon_v2_evolutiontriggernames_aggregate;
    if (l$pokemon_v2_evolutiontriggernames_aggregate !=
        lOther$pokemon_v2_evolutiontriggernames_aggregate) return false;
    final l$pokemon_v2_generationnames_aggregate =
        pokemon_v2_generationnames_aggregate;
    final lOther$pokemon_v2_generationnames_aggregate =
        other.pokemon_v2_generationnames_aggregate;
    if (l$pokemon_v2_generationnames_aggregate !=
        lOther$pokemon_v2_generationnames_aggregate) return false;
    final l$pokemon_v2_growthratedescriptions_aggregate =
        pokemon_v2_growthratedescriptions_aggregate;
    final lOther$pokemon_v2_growthratedescriptions_aggregate =
        other.pokemon_v2_growthratedescriptions_aggregate;
    if (l$pokemon_v2_growthratedescriptions_aggregate !=
        lOther$pokemon_v2_growthratedescriptions_aggregate) return false;
    final l$pokemon_v2_itemattributedescriptions_aggregate =
        pokemon_v2_itemattributedescriptions_aggregate;
    final lOther$pokemon_v2_itemattributedescriptions_aggregate =
        other.pokemon_v2_itemattributedescriptions_aggregate;
    if (l$pokemon_v2_itemattributedescriptions_aggregate !=
        lOther$pokemon_v2_itemattributedescriptions_aggregate) return false;
    final l$pokemon_v2_itemattributenames_aggregate =
        pokemon_v2_itemattributenames_aggregate;
    final lOther$pokemon_v2_itemattributenames_aggregate =
        other.pokemon_v2_itemattributenames_aggregate;
    if (l$pokemon_v2_itemattributenames_aggregate !=
        lOther$pokemon_v2_itemattributenames_aggregate) return false;
    final l$pokemon_v2_itemcategorynames_aggregate =
        pokemon_v2_itemcategorynames_aggregate;
    final lOther$pokemon_v2_itemcategorynames_aggregate =
        other.pokemon_v2_itemcategorynames_aggregate;
    if (l$pokemon_v2_itemcategorynames_aggregate !=
        lOther$pokemon_v2_itemcategorynames_aggregate) return false;
    final l$pokemon_v2_itemeffecttexts_aggregate =
        pokemon_v2_itemeffecttexts_aggregate;
    final lOther$pokemon_v2_itemeffecttexts_aggregate =
        other.pokemon_v2_itemeffecttexts_aggregate;
    if (l$pokemon_v2_itemeffecttexts_aggregate !=
        lOther$pokemon_v2_itemeffecttexts_aggregate) return false;
    final l$pokemon_v2_itemflavortexts_aggregate =
        pokemon_v2_itemflavortexts_aggregate;
    final lOther$pokemon_v2_itemflavortexts_aggregate =
        other.pokemon_v2_itemflavortexts_aggregate;
    if (l$pokemon_v2_itemflavortexts_aggregate !=
        lOther$pokemon_v2_itemflavortexts_aggregate) return false;
    final l$pokemon_v2_itemflingeffecteffecttexts_aggregate =
        pokemon_v2_itemflingeffecteffecttexts_aggregate;
    final lOther$pokemon_v2_itemflingeffecteffecttexts_aggregate =
        other.pokemon_v2_itemflingeffecteffecttexts_aggregate;
    if (l$pokemon_v2_itemflingeffecteffecttexts_aggregate !=
        lOther$pokemon_v2_itemflingeffecteffecttexts_aggregate) return false;
    final l$pokemon_v2_itemnames_aggregate = pokemon_v2_itemnames_aggregate;
    final lOther$pokemon_v2_itemnames_aggregate =
        other.pokemon_v2_itemnames_aggregate;
    if (l$pokemon_v2_itemnames_aggregate !=
        lOther$pokemon_v2_itemnames_aggregate) return false;
    final l$pokemon_v2_itempocketnames_aggregate =
        pokemon_v2_itempocketnames_aggregate;
    final lOther$pokemon_v2_itempocketnames_aggregate =
        other.pokemon_v2_itempocketnames_aggregate;
    if (l$pokemon_v2_itempocketnames_aggregate !=
        lOther$pokemon_v2_itempocketnames_aggregate) return false;
    final l$pokemon_v2_languagenames_aggregate =
        pokemon_v2_languagenames_aggregate;
    final lOther$pokemon_v2_languagenames_aggregate =
        other.pokemon_v2_languagenames_aggregate;
    if (l$pokemon_v2_languagenames_aggregate !=
        lOther$pokemon_v2_languagenames_aggregate) return false;
    final l$pokemon_v2_locationareanames_aggregate =
        pokemon_v2_locationareanames_aggregate;
    final lOther$pokemon_v2_locationareanames_aggregate =
        other.pokemon_v2_locationareanames_aggregate;
    if (l$pokemon_v2_locationareanames_aggregate !=
        lOther$pokemon_v2_locationareanames_aggregate) return false;
    final l$pokemon_v2_locationnames_aggregate =
        pokemon_v2_locationnames_aggregate;
    final lOther$pokemon_v2_locationnames_aggregate =
        other.pokemon_v2_locationnames_aggregate;
    if (l$pokemon_v2_locationnames_aggregate !=
        lOther$pokemon_v2_locationnames_aggregate) return false;
    final l$pokemon_v2_moveattributedescriptions_aggregate =
        pokemon_v2_moveattributedescriptions_aggregate;
    final lOther$pokemon_v2_moveattributedescriptions_aggregate =
        other.pokemon_v2_moveattributedescriptions_aggregate;
    if (l$pokemon_v2_moveattributedescriptions_aggregate !=
        lOther$pokemon_v2_moveattributedescriptions_aggregate) return false;
    final l$pokemon_v2_moveattributenames_aggregate =
        pokemon_v2_moveattributenames_aggregate;
    final lOther$pokemon_v2_moveattributenames_aggregate =
        other.pokemon_v2_moveattributenames_aggregate;
    if (l$pokemon_v2_moveattributenames_aggregate !=
        lOther$pokemon_v2_moveattributenames_aggregate) return false;
    final l$pokemon_v2_movebattlestylenames_aggregate =
        pokemon_v2_movebattlestylenames_aggregate;
    final lOther$pokemon_v2_movebattlestylenames_aggregate =
        other.pokemon_v2_movebattlestylenames_aggregate;
    if (l$pokemon_v2_movebattlestylenames_aggregate !=
        lOther$pokemon_v2_movebattlestylenames_aggregate) return false;
    final l$pokemon_v2_movedamageclassdescriptions_aggregate =
        pokemon_v2_movedamageclassdescriptions_aggregate;
    final lOther$pokemon_v2_movedamageclassdescriptions_aggregate =
        other.pokemon_v2_movedamageclassdescriptions_aggregate;
    if (l$pokemon_v2_movedamageclassdescriptions_aggregate !=
        lOther$pokemon_v2_movedamageclassdescriptions_aggregate) return false;
    final l$pokemon_v2_movedamageclassnames_aggregate =
        pokemon_v2_movedamageclassnames_aggregate;
    final lOther$pokemon_v2_movedamageclassnames_aggregate =
        other.pokemon_v2_movedamageclassnames_aggregate;
    if (l$pokemon_v2_movedamageclassnames_aggregate !=
        lOther$pokemon_v2_movedamageclassnames_aggregate) return false;
    final l$pokemon_v2_moveeffectchangeeffecttexts_aggregate =
        pokemon_v2_moveeffectchangeeffecttexts_aggregate;
    final lOther$pokemon_v2_moveeffectchangeeffecttexts_aggregate =
        other.pokemon_v2_moveeffectchangeeffecttexts_aggregate;
    if (l$pokemon_v2_moveeffectchangeeffecttexts_aggregate !=
        lOther$pokemon_v2_moveeffectchangeeffecttexts_aggregate) return false;
    final l$pokemon_v2_moveeffecteffecttexts_aggregate =
        pokemon_v2_moveeffecteffecttexts_aggregate;
    final lOther$pokemon_v2_moveeffecteffecttexts_aggregate =
        other.pokemon_v2_moveeffecteffecttexts_aggregate;
    if (l$pokemon_v2_moveeffecteffecttexts_aggregate !=
        lOther$pokemon_v2_moveeffecteffecttexts_aggregate) return false;
    final l$pokemon_v2_moveflavortexts_aggregate =
        pokemon_v2_moveflavortexts_aggregate;
    final lOther$pokemon_v2_moveflavortexts_aggregate =
        other.pokemon_v2_moveflavortexts_aggregate;
    if (l$pokemon_v2_moveflavortexts_aggregate !=
        lOther$pokemon_v2_moveflavortexts_aggregate) return false;
    final l$pokemon_v2_movelearnmethoddescriptions_aggregate =
        pokemon_v2_movelearnmethoddescriptions_aggregate;
    final lOther$pokemon_v2_movelearnmethoddescriptions_aggregate =
        other.pokemon_v2_movelearnmethoddescriptions_aggregate;
    if (l$pokemon_v2_movelearnmethoddescriptions_aggregate !=
        lOther$pokemon_v2_movelearnmethoddescriptions_aggregate) return false;
    final l$pokemon_v2_movelearnmethodnames_aggregate =
        pokemon_v2_movelearnmethodnames_aggregate;
    final lOther$pokemon_v2_movelearnmethodnames_aggregate =
        other.pokemon_v2_movelearnmethodnames_aggregate;
    if (l$pokemon_v2_movelearnmethodnames_aggregate !=
        lOther$pokemon_v2_movelearnmethodnames_aggregate) return false;
    final l$pokemon_v2_movemetaailmentnames_aggregate =
        pokemon_v2_movemetaailmentnames_aggregate;
    final lOther$pokemon_v2_movemetaailmentnames_aggregate =
        other.pokemon_v2_movemetaailmentnames_aggregate;
    if (l$pokemon_v2_movemetaailmentnames_aggregate !=
        lOther$pokemon_v2_movemetaailmentnames_aggregate) return false;
    final l$pokemon_v2_movemetacategorydescriptions_aggregate =
        pokemon_v2_movemetacategorydescriptions_aggregate;
    final lOther$pokemon_v2_movemetacategorydescriptions_aggregate =
        other.pokemon_v2_movemetacategorydescriptions_aggregate;
    if (l$pokemon_v2_movemetacategorydescriptions_aggregate !=
        lOther$pokemon_v2_movemetacategorydescriptions_aggregate) return false;
    final l$pokemon_v2_movenames_aggregate = pokemon_v2_movenames_aggregate;
    final lOther$pokemon_v2_movenames_aggregate =
        other.pokemon_v2_movenames_aggregate;
    if (l$pokemon_v2_movenames_aggregate !=
        lOther$pokemon_v2_movenames_aggregate) return false;
    final l$pokemon_v2_movetargetdescriptions_aggregate =
        pokemon_v2_movetargetdescriptions_aggregate;
    final lOther$pokemon_v2_movetargetdescriptions_aggregate =
        other.pokemon_v2_movetargetdescriptions_aggregate;
    if (l$pokemon_v2_movetargetdescriptions_aggregate !=
        lOther$pokemon_v2_movetargetdescriptions_aggregate) return false;
    final l$pokemon_v2_movetargetnames_aggregate =
        pokemon_v2_movetargetnames_aggregate;
    final lOther$pokemon_v2_movetargetnames_aggregate =
        other.pokemon_v2_movetargetnames_aggregate;
    if (l$pokemon_v2_movetargetnames_aggregate !=
        lOther$pokemon_v2_movetargetnames_aggregate) return false;
    final l$pokemon_v2_naturenames_aggregate = pokemon_v2_naturenames_aggregate;
    final lOther$pokemon_v2_naturenames_aggregate =
        other.pokemon_v2_naturenames_aggregate;
    if (l$pokemon_v2_naturenames_aggregate !=
        lOther$pokemon_v2_naturenames_aggregate) return false;
    final l$pokemon_v2_palparkareanames_aggregate =
        pokemon_v2_palparkareanames_aggregate;
    final lOther$pokemon_v2_palparkareanames_aggregate =
        other.pokemon_v2_palparkareanames_aggregate;
    if (l$pokemon_v2_palparkareanames_aggregate !=
        lOther$pokemon_v2_palparkareanames_aggregate) return false;
    final l$pokemon_v2_pokeathlonstatnames_aggregate =
        pokemon_v2_pokeathlonstatnames_aggregate;
    final lOther$pokemon_v2_pokeathlonstatnames_aggregate =
        other.pokemon_v2_pokeathlonstatnames_aggregate;
    if (l$pokemon_v2_pokeathlonstatnames_aggregate !=
        lOther$pokemon_v2_pokeathlonstatnames_aggregate) return false;
    final l$pokemon_v2_pokedexdescriptions_aggregate =
        pokemon_v2_pokedexdescriptions_aggregate;
    final lOther$pokemon_v2_pokedexdescriptions_aggregate =
        other.pokemon_v2_pokedexdescriptions_aggregate;
    if (l$pokemon_v2_pokedexdescriptions_aggregate !=
        lOther$pokemon_v2_pokedexdescriptions_aggregate) return false;
    final l$pokemon_v2_pokedexnames_aggregate =
        pokemon_v2_pokedexnames_aggregate;
    final lOther$pokemon_v2_pokedexnames_aggregate =
        other.pokemon_v2_pokedexnames_aggregate;
    if (l$pokemon_v2_pokedexnames_aggregate !=
        lOther$pokemon_v2_pokedexnames_aggregate) return false;
    final l$pokemon_v2_pokemoncolornames_aggregate =
        pokemon_v2_pokemoncolornames_aggregate;
    final lOther$pokemon_v2_pokemoncolornames_aggregate =
        other.pokemon_v2_pokemoncolornames_aggregate;
    if (l$pokemon_v2_pokemoncolornames_aggregate !=
        lOther$pokemon_v2_pokemoncolornames_aggregate) return false;
    final l$pokemon_v2_pokemonformnames_aggregate =
        pokemon_v2_pokemonformnames_aggregate;
    final lOther$pokemon_v2_pokemonformnames_aggregate =
        other.pokemon_v2_pokemonformnames_aggregate;
    if (l$pokemon_v2_pokemonformnames_aggregate !=
        lOther$pokemon_v2_pokemonformnames_aggregate) return false;
    final l$pokemon_v2_pokemonhabitatnames_aggregate =
        pokemon_v2_pokemonhabitatnames_aggregate;
    final lOther$pokemon_v2_pokemonhabitatnames_aggregate =
        other.pokemon_v2_pokemonhabitatnames_aggregate;
    if (l$pokemon_v2_pokemonhabitatnames_aggregate !=
        lOther$pokemon_v2_pokemonhabitatnames_aggregate) return false;
    final l$pokemon_v2_pokemonshapenames_aggregate =
        pokemon_v2_pokemonshapenames_aggregate;
    final lOther$pokemon_v2_pokemonshapenames_aggregate =
        other.pokemon_v2_pokemonshapenames_aggregate;
    if (l$pokemon_v2_pokemonshapenames_aggregate !=
        lOther$pokemon_v2_pokemonshapenames_aggregate) return false;
    final l$pokemon_v2_pokemonspeciesdescriptions_aggregate =
        pokemon_v2_pokemonspeciesdescriptions_aggregate;
    final lOther$pokemon_v2_pokemonspeciesdescriptions_aggregate =
        other.pokemon_v2_pokemonspeciesdescriptions_aggregate;
    if (l$pokemon_v2_pokemonspeciesdescriptions_aggregate !=
        lOther$pokemon_v2_pokemonspeciesdescriptions_aggregate) return false;
    final l$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        pokemon_v2_pokemonspeciesflavortexts_aggregate;
    final lOther$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        other.pokemon_v2_pokemonspeciesflavortexts_aggregate;
    if (l$pokemon_v2_pokemonspeciesflavortexts_aggregate !=
        lOther$pokemon_v2_pokemonspeciesflavortexts_aggregate) return false;
    final l$pokemon_v2_pokemonspeciesnames_aggregate =
        pokemon_v2_pokemonspeciesnames_aggregate;
    final lOther$pokemon_v2_pokemonspeciesnames_aggregate =
        other.pokemon_v2_pokemonspeciesnames_aggregate;
    if (l$pokemon_v2_pokemonspeciesnames_aggregate !=
        lOther$pokemon_v2_pokemonspeciesnames_aggregate) return false;
    final l$pokemon_v2_regionnames_aggregate = pokemon_v2_regionnames_aggregate;
    final lOther$pokemon_v2_regionnames_aggregate =
        other.pokemon_v2_regionnames_aggregate;
    if (l$pokemon_v2_regionnames_aggregate !=
        lOther$pokemon_v2_regionnames_aggregate) return false;
    final l$pokemon_v2_statnames_aggregate = pokemon_v2_statnames_aggregate;
    final lOther$pokemon_v2_statnames_aggregate =
        other.pokemon_v2_statnames_aggregate;
    if (l$pokemon_v2_statnames_aggregate !=
        lOther$pokemon_v2_statnames_aggregate) return false;
    final l$pokemon_v2_supercontesteffectflavortexts_aggregate =
        pokemon_v2_supercontesteffectflavortexts_aggregate;
    final lOther$pokemon_v2_supercontesteffectflavortexts_aggregate =
        other.pokemon_v2_supercontesteffectflavortexts_aggregate;
    if (l$pokemon_v2_supercontesteffectflavortexts_aggregate !=
        lOther$pokemon_v2_supercontesteffectflavortexts_aggregate) return false;
    final l$pokemon_v2_typenames_aggregate = pokemon_v2_typenames_aggregate;
    final lOther$pokemon_v2_typenames_aggregate =
        other.pokemon_v2_typenames_aggregate;
    if (l$pokemon_v2_typenames_aggregate !=
        lOther$pokemon_v2_typenames_aggregate) return false;
    final l$pokemon_v2_versionnames_aggregate =
        pokemon_v2_versionnames_aggregate;
    final lOther$pokemon_v2_versionnames_aggregate =
        other.pokemon_v2_versionnames_aggregate;
    if (l$pokemon_v2_versionnames_aggregate !=
        lOther$pokemon_v2_versionnames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameAggregateOrderBy {
  InputpokemonV2LanguagenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2LanguagenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameAggregateOrderByFromJson(json);

  final InputpokemonV2LanguagenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2LanguagenameMaxOrderBy? max;

  final InputpokemonV2LanguagenameMinOrderBy? min;

  final InputpokemonV2LanguagenameStddevOrderBy? stddev;

  final InputpokemonV2LanguagenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2LanguagenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2LanguagenameSumOrderBy? sum;

  final InputpokemonV2LanguagenameVarPopOrderBy? var_pop;

  final InputpokemonV2LanguagenameVarSampOrderBy? var_samp;

  final InputpokemonV2LanguagenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameAvgOrderBy {
  InputpokemonV2LanguagenameAvgOrderBy(
      {this.id, this.language_id, this.local_language_id});

  @override
  factory InputpokemonV2LanguagenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    return Object.hashAll([l$id, l$language_id, l$local_language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameBoolExp {
  InputpokemonV2LanguagenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.local_language_id,
      this.name,
      this.pokemonV2LanguageByLocalLanguageId,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2LanguagenameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2LanguagenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2LanguagenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2LanguagenameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? local_language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemonV2LanguageByLocalLanguageId;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    final l$name = name;
    final l$pokemonV2LanguageByLocalLanguageId =
        pokemonV2LanguageByLocalLanguageId;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$local_language_id,
      l$name,
      l$pokemonV2LanguageByLocalLanguageId,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2LanguageByLocalLanguageId =
        pokemonV2LanguageByLocalLanguageId;
    final lOther$pokemonV2LanguageByLocalLanguageId =
        other.pokemonV2LanguageByLocalLanguageId;
    if (l$pokemonV2LanguageByLocalLanguageId !=
        lOther$pokemonV2LanguageByLocalLanguageId) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameMaxOrderBy {
  InputpokemonV2LanguagenameMaxOrderBy(
      {this.id, this.language_id, this.local_language_id, this.name});

  @override
  factory InputpokemonV2LanguagenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$local_language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameMinOrderBy {
  InputpokemonV2LanguagenameMinOrderBy(
      {this.id, this.language_id, this.local_language_id, this.name});

  @override
  factory InputpokemonV2LanguagenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$local_language_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameOrderBy {
  InputpokemonV2LanguagenameOrderBy(
      {this.id,
      this.language_id,
      this.local_language_id,
      this.name,
      this.pokemonV2LanguageByLocalLanguageId,
      this.pokemon_v2_language});

  @override
  factory InputpokemonV2LanguagenameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemonV2LanguageByLocalLanguageId;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    final l$name = name;
    final l$pokemonV2LanguageByLocalLanguageId =
        pokemonV2LanguageByLocalLanguageId;
    final l$pokemon_v2_language = pokemon_v2_language;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$local_language_id,
      l$name,
      l$pokemonV2LanguageByLocalLanguageId,
      l$pokemon_v2_language
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2LanguageByLocalLanguageId =
        pokemonV2LanguageByLocalLanguageId;
    final lOther$pokemonV2LanguageByLocalLanguageId =
        other.pokemonV2LanguageByLocalLanguageId;
    if (l$pokemonV2LanguageByLocalLanguageId !=
        lOther$pokemonV2LanguageByLocalLanguageId) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameStddevOrderBy {
  InputpokemonV2LanguagenameStddevOrderBy(
      {this.id, this.language_id, this.local_language_id});

  @override
  factory InputpokemonV2LanguagenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    return Object.hashAll([l$id, l$language_id, l$local_language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameStddevPopOrderBy {
  InputpokemonV2LanguagenameStddevPopOrderBy(
      {this.id, this.language_id, this.local_language_id});

  @override
  factory InputpokemonV2LanguagenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    return Object.hashAll([l$id, l$language_id, l$local_language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameStddevSampOrderBy {
  InputpokemonV2LanguagenameStddevSampOrderBy(
      {this.id, this.language_id, this.local_language_id});

  @override
  factory InputpokemonV2LanguagenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    return Object.hashAll([l$id, l$language_id, l$local_language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameSumOrderBy {
  InputpokemonV2LanguagenameSumOrderBy(
      {this.id, this.language_id, this.local_language_id});

  @override
  factory InputpokemonV2LanguagenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    return Object.hashAll([l$id, l$language_id, l$local_language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameVarPopOrderBy {
  InputpokemonV2LanguagenameVarPopOrderBy(
      {this.id, this.language_id, this.local_language_id});

  @override
  factory InputpokemonV2LanguagenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    return Object.hashAll([l$id, l$language_id, l$local_language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameVarSampOrderBy {
  InputpokemonV2LanguagenameVarSampOrderBy(
      {this.id, this.language_id, this.local_language_id});

  @override
  factory InputpokemonV2LanguagenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    return Object.hashAll([l$id, l$language_id, l$local_language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LanguagenameVarianceOrderBy {
  InputpokemonV2LanguagenameVarianceOrderBy(
      {this.id, this.language_id, this.local_language_id});

  @override
  factory InputpokemonV2LanguagenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LanguagenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? local_language_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LanguagenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$local_language_id = local_language_id;
    return Object.hashAll([l$id, l$language_id, l$local_language_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LanguagenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$local_language_id = local_language_id;
    final lOther$local_language_id = other.local_language_id;
    if (l$local_language_id != lOther$local_language_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationAggregateOrderBy {
  InputpokemonV2LocationAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2LocationAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationAggregateOrderByFromJson(json);

  final InputpokemonV2LocationAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2LocationMaxOrderBy? max;

  final InputpokemonV2LocationMinOrderBy? min;

  final InputpokemonV2LocationStddevOrderBy? stddev;

  final InputpokemonV2LocationStddevPopOrderBy? stddev_pop;

  final InputpokemonV2LocationStddevSampOrderBy? stddev_samp;

  final InputpokemonV2LocationSumOrderBy? sum;

  final InputpokemonV2LocationVarPopOrderBy? var_pop;

  final InputpokemonV2LocationVarSampOrderBy? var_samp;

  final InputpokemonV2LocationVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationAvgOrderBy {
  InputpokemonV2LocationAvgOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2LocationAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationBoolExp {
  InputpokemonV2LocationBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_locationareas,
      this.pokemon_v2_locationgameindices,
      this.pokemon_v2_locationnames,
      this.pokemon_v2_pokemonevolutions,
      this.pokemon_v2_region,
      this.region_id});

  @override
  factory InputpokemonV2LocationBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2LocationBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2LocationBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2LocationBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2LocationBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LocationareaBoolExp? pokemon_v2_locationareas;

  final InputpokemonV2LocationgameindexBoolExp? pokemon_v2_locationgameindices;

  final InputpokemonV2LocationnameBoolExp? pokemon_v2_locationnames;

  final InputpokemonV2PokemonevolutionBoolExp? pokemon_v2_pokemonevolutions;

  final InputpokemonV2RegionBoolExp? pokemon_v2_region;

  final InputIntComparisonExp? region_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2LocationBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_locationareas = pokemon_v2_locationareas;
    final l$pokemon_v2_locationgameindices = pokemon_v2_locationgameindices;
    final l$pokemon_v2_locationnames = pokemon_v2_locationnames;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$region_id = region_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_locationareas,
      l$pokemon_v2_locationgameindices,
      l$pokemon_v2_locationnames,
      l$pokemon_v2_pokemonevolutions,
      l$pokemon_v2_region,
      l$region_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_locationareas = pokemon_v2_locationareas;
    final lOther$pokemon_v2_locationareas = other.pokemon_v2_locationareas;
    if (l$pokemon_v2_locationareas != lOther$pokemon_v2_locationareas)
      return false;
    final l$pokemon_v2_locationgameindices = pokemon_v2_locationgameindices;
    final lOther$pokemon_v2_locationgameindices =
        other.pokemon_v2_locationgameindices;
    if (l$pokemon_v2_locationgameindices !=
        lOther$pokemon_v2_locationgameindices) return false;
    final l$pokemon_v2_locationnames = pokemon_v2_locationnames;
    final lOther$pokemon_v2_locationnames = other.pokemon_v2_locationnames;
    if (l$pokemon_v2_locationnames != lOther$pokemon_v2_locationnames)
      return false;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final lOther$pokemon_v2_pokemonevolutions =
        other.pokemon_v2_pokemonevolutions;
    if (l$pokemon_v2_pokemonevolutions != lOther$pokemon_v2_pokemonevolutions)
      return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationMaxOrderBy {
  InputpokemonV2LocationMaxOrderBy({this.id, this.name, this.region_id});

  @override
  factory InputpokemonV2LocationMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$name, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationMinOrderBy {
  InputpokemonV2LocationMinOrderBy({this.id, this.name, this.region_id});

  @override
  factory InputpokemonV2LocationMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$name, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationOrderBy {
  InputpokemonV2LocationOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_locationareas_aggregate,
      this.pokemon_v2_locationgameindices_aggregate,
      this.pokemon_v2_locationnames_aggregate,
      this.pokemon_v2_pokemonevolutions_aggregate,
      this.pokemon_v2_region,
      this.region_id});

  @override
  factory InputpokemonV2LocationOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2LocationOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LocationareaAggregateOrderBy?
      pokemon_v2_locationareas_aggregate;

  final InputpokemonV2LocationgameindexAggregateOrderBy?
      pokemon_v2_locationgameindices_aggregate;

  final InputpokemonV2LocationnameAggregateOrderBy?
      pokemon_v2_locationnames_aggregate;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemon_v2_pokemonevolutions_aggregate;

  final InputpokemonV2RegionOrderBy? pokemon_v2_region;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2LocationOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_locationareas_aggregate =
        pokemon_v2_locationareas_aggregate;
    final l$pokemon_v2_locationgameindices_aggregate =
        pokemon_v2_locationgameindices_aggregate;
    final l$pokemon_v2_locationnames_aggregate =
        pokemon_v2_locationnames_aggregate;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$region_id = region_id;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_locationareas_aggregate,
      l$pokemon_v2_locationgameindices_aggregate,
      l$pokemon_v2_locationnames_aggregate,
      l$pokemon_v2_pokemonevolutions_aggregate,
      l$pokemon_v2_region,
      l$region_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_locationareas_aggregate =
        pokemon_v2_locationareas_aggregate;
    final lOther$pokemon_v2_locationareas_aggregate =
        other.pokemon_v2_locationareas_aggregate;
    if (l$pokemon_v2_locationareas_aggregate !=
        lOther$pokemon_v2_locationareas_aggregate) return false;
    final l$pokemon_v2_locationgameindices_aggregate =
        pokemon_v2_locationgameindices_aggregate;
    final lOther$pokemon_v2_locationgameindices_aggregate =
        other.pokemon_v2_locationgameindices_aggregate;
    if (l$pokemon_v2_locationgameindices_aggregate !=
        lOther$pokemon_v2_locationgameindices_aggregate) return false;
    final l$pokemon_v2_locationnames_aggregate =
        pokemon_v2_locationnames_aggregate;
    final lOther$pokemon_v2_locationnames_aggregate =
        other.pokemon_v2_locationnames_aggregate;
    if (l$pokemon_v2_locationnames_aggregate !=
        lOther$pokemon_v2_locationnames_aggregate) return false;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final lOther$pokemon_v2_pokemonevolutions_aggregate =
        other.pokemon_v2_pokemonevolutions_aggregate;
    if (l$pokemon_v2_pokemonevolutions_aggregate !=
        lOther$pokemon_v2_pokemonevolutions_aggregate) return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationStddevOrderBy {
  InputpokemonV2LocationStddevOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2LocationStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationStddevPopOrderBy {
  InputpokemonV2LocationStddevPopOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2LocationStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationStddevSampOrderBy {
  InputpokemonV2LocationStddevSampOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2LocationStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationSumOrderBy {
  InputpokemonV2LocationSumOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2LocationSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationVarPopOrderBy {
  InputpokemonV2LocationVarPopOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2LocationVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationVarSampOrderBy {
  InputpokemonV2LocationVarSampOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2LocationVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationVarianceOrderBy {
  InputpokemonV2LocationVarianceOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2LocationVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaAggregateOrderBy {
  InputpokemonV2LocationareaAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2LocationareaAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaAggregateOrderByFromJson(json);

  final InputpokemonV2LocationareaAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2LocationareaMaxOrderBy? max;

  final InputpokemonV2LocationareaMinOrderBy? min;

  final InputpokemonV2LocationareaStddevOrderBy? stddev;

  final InputpokemonV2LocationareaStddevPopOrderBy? stddev_pop;

  final InputpokemonV2LocationareaStddevSampOrderBy? stddev_samp;

  final InputpokemonV2LocationareaSumOrderBy? sum;

  final InputpokemonV2LocationareaVarPopOrderBy? var_pop;

  final InputpokemonV2LocationareaVarSampOrderBy? var_samp;

  final InputpokemonV2LocationareaVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaAvgOrderBy {
  InputpokemonV2LocationareaAvgOrderBy(
      {this.game_index, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationareaAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaAvgOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaBoolExp {
  InputpokemonV2LocationareaBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.game_index,
      this.id,
      this.location_id,
      this.name,
      this.pokemon_v2_encounters,
      this.pokemon_v2_location,
      this.pokemon_v2_locationareaencounterrates,
      this.pokemon_v2_locationareanames});

  @override
  factory InputpokemonV2LocationareaBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2LocationareaBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2LocationareaBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2LocationareaBoolExp>? $_or;

  final InputIntComparisonExp? game_index;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? location_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EncounterBoolExp? pokemon_v2_encounters;

  final InputpokemonV2LocationBoolExp? pokemon_v2_location;

  final InputpokemonV2LocationareaencounterrateBoolExp?
      pokemon_v2_locationareaencounterrates;

  final InputpokemonV2LocationareanameBoolExp? pokemon_v2_locationareanames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    final l$name = name;
    final l$pokemon_v2_encounters = pokemon_v2_encounters;
    final l$pokemon_v2_location = pokemon_v2_location;
    final l$pokemon_v2_locationareaencounterrates =
        pokemon_v2_locationareaencounterrates;
    final l$pokemon_v2_locationareanames = pokemon_v2_locationareanames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$game_index,
      l$id,
      l$location_id,
      l$name,
      l$pokemon_v2_encounters,
      l$pokemon_v2_location,
      l$pokemon_v2_locationareaencounterrates,
      l$pokemon_v2_locationareanames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encounters = pokemon_v2_encounters;
    final lOther$pokemon_v2_encounters = other.pokemon_v2_encounters;
    if (l$pokemon_v2_encounters != lOther$pokemon_v2_encounters) return false;
    final l$pokemon_v2_location = pokemon_v2_location;
    final lOther$pokemon_v2_location = other.pokemon_v2_location;
    if (l$pokemon_v2_location != lOther$pokemon_v2_location) return false;
    final l$pokemon_v2_locationareaencounterrates =
        pokemon_v2_locationareaencounterrates;
    final lOther$pokemon_v2_locationareaencounterrates =
        other.pokemon_v2_locationareaencounterrates;
    if (l$pokemon_v2_locationareaencounterrates !=
        lOther$pokemon_v2_locationareaencounterrates) return false;
    final l$pokemon_v2_locationareanames = pokemon_v2_locationareanames;
    final lOther$pokemon_v2_locationareanames =
        other.pokemon_v2_locationareanames;
    if (l$pokemon_v2_locationareanames != lOther$pokemon_v2_locationareanames)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaMaxOrderBy {
  InputpokemonV2LocationareaMaxOrderBy(
      {this.game_index, this.id, this.location_id, this.name});

  @override
  factory InputpokemonV2LocationareaMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaMaxOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    final l$name = name;
    return Object.hashAll([l$game_index, l$id, l$location_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaMinOrderBy {
  InputpokemonV2LocationareaMinOrderBy(
      {this.game_index, this.id, this.location_id, this.name});

  @override
  factory InputpokemonV2LocationareaMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaMinOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    final l$name = name;
    return Object.hashAll([l$game_index, l$id, l$location_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaOrderBy {
  InputpokemonV2LocationareaOrderBy(
      {this.game_index,
      this.id,
      this.location_id,
      this.name,
      this.pokemon_v2_encounters_aggregate,
      this.pokemon_v2_location,
      this.pokemon_v2_locationareaencounterrates_aggregate,
      this.pokemon_v2_locationareanames_aggregate});

  @override
  factory InputpokemonV2LocationareaOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EncounterAggregateOrderBy?
      pokemon_v2_encounters_aggregate;

  final InputpokemonV2LocationOrderBy? pokemon_v2_location;

  final InputpokemonV2LocationareaencounterrateAggregateOrderBy?
      pokemon_v2_locationareaencounterrates_aggregate;

  final InputpokemonV2LocationareanameAggregateOrderBy?
      pokemon_v2_locationareanames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    final l$name = name;
    final l$pokemon_v2_encounters_aggregate = pokemon_v2_encounters_aggregate;
    final l$pokemon_v2_location = pokemon_v2_location;
    final l$pokemon_v2_locationareaencounterrates_aggregate =
        pokemon_v2_locationareaencounterrates_aggregate;
    final l$pokemon_v2_locationareanames_aggregate =
        pokemon_v2_locationareanames_aggregate;
    return Object.hashAll([
      l$game_index,
      l$id,
      l$location_id,
      l$name,
      l$pokemon_v2_encounters_aggregate,
      l$pokemon_v2_location,
      l$pokemon_v2_locationareaencounterrates_aggregate,
      l$pokemon_v2_locationareanames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encounters_aggregate = pokemon_v2_encounters_aggregate;
    final lOther$pokemon_v2_encounters_aggregate =
        other.pokemon_v2_encounters_aggregate;
    if (l$pokemon_v2_encounters_aggregate !=
        lOther$pokemon_v2_encounters_aggregate) return false;
    final l$pokemon_v2_location = pokemon_v2_location;
    final lOther$pokemon_v2_location = other.pokemon_v2_location;
    if (l$pokemon_v2_location != lOther$pokemon_v2_location) return false;
    final l$pokemon_v2_locationareaencounterrates_aggregate =
        pokemon_v2_locationareaencounterrates_aggregate;
    final lOther$pokemon_v2_locationareaencounterrates_aggregate =
        other.pokemon_v2_locationareaencounterrates_aggregate;
    if (l$pokemon_v2_locationareaencounterrates_aggregate !=
        lOther$pokemon_v2_locationareaencounterrates_aggregate) return false;
    final l$pokemon_v2_locationareanames_aggregate =
        pokemon_v2_locationareanames_aggregate;
    final lOther$pokemon_v2_locationareanames_aggregate =
        other.pokemon_v2_locationareanames_aggregate;
    if (l$pokemon_v2_locationareanames_aggregate !=
        lOther$pokemon_v2_locationareanames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaStddevOrderBy {
  InputpokemonV2LocationareaStddevOrderBy(
      {this.game_index, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationareaStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaStddevOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaStddevPopOrderBy {
  InputpokemonV2LocationareaStddevPopOrderBy(
      {this.game_index, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationareaStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaStddevPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaStddevSampOrderBy {
  InputpokemonV2LocationareaStddevSampOrderBy(
      {this.game_index, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationareaStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaStddevSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaSumOrderBy {
  InputpokemonV2LocationareaSumOrderBy(
      {this.game_index, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationareaSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaSumOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaVarPopOrderBy {
  InputpokemonV2LocationareaVarPopOrderBy(
      {this.game_index, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationareaVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaVarPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaVarSampOrderBy {
  InputpokemonV2LocationareaVarSampOrderBy(
      {this.game_index, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationareaVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaVarSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaVarianceOrderBy {
  InputpokemonV2LocationareaVarianceOrderBy(
      {this.game_index, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationareaVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaVarianceOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateAggregateOrderBy {
  InputpokemonV2LocationareaencounterrateAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2LocationareaencounterrateAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateAggregateOrderByFromJson(json);

  final InputpokemonV2LocationareaencounterrateAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2LocationareaencounterrateMaxOrderBy? max;

  final InputpokemonV2LocationareaencounterrateMinOrderBy? min;

  final InputpokemonV2LocationareaencounterrateStddevOrderBy? stddev;

  final InputpokemonV2LocationareaencounterrateStddevPopOrderBy? stddev_pop;

  final InputpokemonV2LocationareaencounterrateStddevSampOrderBy? stddev_samp;

  final InputpokemonV2LocationareaencounterrateSumOrderBy? sum;

  final InputpokemonV2LocationareaencounterrateVarPopOrderBy? var_pop;

  final InputpokemonV2LocationareaencounterrateVarSampOrderBy? var_samp;

  final InputpokemonV2LocationareaencounterrateVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateAvgOrderBy {
  InputpokemonV2LocationareaencounterrateAvgOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateAvgOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateBoolExp {
  InputpokemonV2LocationareaencounterrateBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.pokemon_v2_encountermethod,
      this.pokemon_v2_locationarea,
      this.pokemon_v2_version,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2LocationareaencounterrateBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2LocationareaencounterrateBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2LocationareaencounterrateBoolExp>? $_or;

  final InputIntComparisonExp? encounter_method_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? location_area_id;

  final InputpokemonV2EncountermethodBoolExp? pokemon_v2_encountermethod;

  final InputpokemonV2LocationareaBoolExp? pokemon_v2_locationarea;

  final InputpokemonV2VersionBoolExp? pokemon_v2_version;

  final InputIntComparisonExp? rate;

  final InputIntComparisonExp? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$pokemon_v2_encountermethod,
      l$pokemon_v2_locationarea,
      l$pokemon_v2_version,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final lOther$pokemon_v2_encountermethod = other.pokemon_v2_encountermethod;
    if (l$pokemon_v2_encountermethod != lOther$pokemon_v2_encountermethod)
      return false;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final lOther$pokemon_v2_locationarea = other.pokemon_v2_locationarea;
    if (l$pokemon_v2_locationarea != lOther$pokemon_v2_locationarea)
      return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateMaxOrderBy {
  InputpokemonV2LocationareaencounterrateMaxOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateMaxOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateMinOrderBy {
  InputpokemonV2LocationareaencounterrateMinOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateMinOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateOrderBy {
  InputpokemonV2LocationareaencounterrateOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.pokemon_v2_encountermethod,
      this.pokemon_v2_locationarea,
      this.pokemon_v2_version,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  final InputpokemonV2EncountermethodOrderBy? pokemon_v2_encountermethod;

  final InputpokemonV2LocationareaOrderBy? pokemon_v2_locationarea;

  final InputpokemonV2VersionOrderBy? pokemon_v2_version;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$pokemon_v2_encountermethod,
      l$pokemon_v2_locationarea,
      l$pokemon_v2_version,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$pokemon_v2_encountermethod = pokemon_v2_encountermethod;
    final lOther$pokemon_v2_encountermethod = other.pokemon_v2_encountermethod;
    if (l$pokemon_v2_encountermethod != lOther$pokemon_v2_encountermethod)
      return false;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final lOther$pokemon_v2_locationarea = other.pokemon_v2_locationarea;
    if (l$pokemon_v2_locationarea != lOther$pokemon_v2_locationarea)
      return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateStddevOrderBy {
  InputpokemonV2LocationareaencounterrateStddevOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateStddevOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateStddevPopOrderBy {
  InputpokemonV2LocationareaencounterrateStddevPopOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateStddevPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateStddevSampOrderBy {
  InputpokemonV2LocationareaencounterrateStddevSampOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateStddevSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateSumOrderBy {
  InputpokemonV2LocationareaencounterrateSumOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateSumOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateVarPopOrderBy {
  InputpokemonV2LocationareaencounterrateVarPopOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateVarPopOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateVarSampOrderBy {
  InputpokemonV2LocationareaencounterrateVarSampOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateVarSampOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareaencounterrateVarianceOrderBy {
  InputpokemonV2LocationareaencounterrateVarianceOrderBy(
      {this.encounter_method_id,
      this.id,
      this.location_area_id,
      this.rate,
      this.version_id});

  @override
  factory InputpokemonV2LocationareaencounterrateVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareaencounterrateVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? encounter_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareaencounterrateVarianceOrderByToJson(this);
  int get hashCode {
    final l$encounter_method_id = encounter_method_id;
    final l$id = id;
    final l$location_area_id = location_area_id;
    final l$rate = rate;
    final l$version_id = version_id;
    return Object.hashAll([
      l$encounter_method_id,
      l$id,
      l$location_area_id,
      l$rate,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareaencounterrateVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$encounter_method_id = encounter_method_id;
    final lOther$encounter_method_id = other.encounter_method_id;
    if (l$encounter_method_id != lOther$encounter_method_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameAggregateOrderBy {
  InputpokemonV2LocationareanameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2LocationareanameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameAggregateOrderByFromJson(json);

  final InputpokemonV2LocationareanameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2LocationareanameMaxOrderBy? max;

  final InputpokemonV2LocationareanameMinOrderBy? min;

  final InputpokemonV2LocationareanameStddevOrderBy? stddev;

  final InputpokemonV2LocationareanameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2LocationareanameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2LocationareanameSumOrderBy? sum;

  final InputpokemonV2LocationareanameVarPopOrderBy? var_pop;

  final InputpokemonV2LocationareanameVarSampOrderBy? var_samp;

  final InputpokemonV2LocationareanameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameAvgOrderBy {
  InputpokemonV2LocationareanameAvgOrderBy(
      {this.id, this.language_id, this.location_area_id});

  @override
  factory InputpokemonV2LocationareanameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    return Object.hashAll([l$id, l$language_id, l$location_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameBoolExp {
  InputpokemonV2LocationareanameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.location_area_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_locationarea});

  @override
  factory InputpokemonV2LocationareanameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2LocationareanameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2LocationareanameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2LocationareanameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? location_area_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2LocationareaBoolExp? pokemon_v2_locationarea;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$location_area_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_locationarea
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final lOther$pokemon_v2_locationarea = other.pokemon_v2_locationarea;
    if (l$pokemon_v2_locationarea != lOther$pokemon_v2_locationarea)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameMaxOrderBy {
  InputpokemonV2LocationareanameMaxOrderBy(
      {this.id, this.language_id, this.location_area_id, this.name});

  @override
  factory InputpokemonV2LocationareanameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$location_area_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameMinOrderBy {
  InputpokemonV2LocationareanameMinOrderBy(
      {this.id, this.language_id, this.location_area_id, this.name});

  @override
  factory InputpokemonV2LocationareanameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$location_area_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameOrderBy {
  InputpokemonV2LocationareanameOrderBy(
      {this.id,
      this.language_id,
      this.location_area_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_locationarea});

  @override
  factory InputpokemonV2LocationareanameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2LocationareaOrderBy? pokemon_v2_locationarea;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$location_area_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_locationarea
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_locationarea = pokemon_v2_locationarea;
    final lOther$pokemon_v2_locationarea = other.pokemon_v2_locationarea;
    if (l$pokemon_v2_locationarea != lOther$pokemon_v2_locationarea)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameStddevOrderBy {
  InputpokemonV2LocationareanameStddevOrderBy(
      {this.id, this.language_id, this.location_area_id});

  @override
  factory InputpokemonV2LocationareanameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    return Object.hashAll([l$id, l$language_id, l$location_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameStddevPopOrderBy {
  InputpokemonV2LocationareanameStddevPopOrderBy(
      {this.id, this.language_id, this.location_area_id});

  @override
  factory InputpokemonV2LocationareanameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    return Object.hashAll([l$id, l$language_id, l$location_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameStddevSampOrderBy {
  InputpokemonV2LocationareanameStddevSampOrderBy(
      {this.id, this.language_id, this.location_area_id});

  @override
  factory InputpokemonV2LocationareanameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    return Object.hashAll([l$id, l$language_id, l$location_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameSumOrderBy {
  InputpokemonV2LocationareanameSumOrderBy(
      {this.id, this.language_id, this.location_area_id});

  @override
  factory InputpokemonV2LocationareanameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    return Object.hashAll([l$id, l$language_id, l$location_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameVarPopOrderBy {
  InputpokemonV2LocationareanameVarPopOrderBy(
      {this.id, this.language_id, this.location_area_id});

  @override
  factory InputpokemonV2LocationareanameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    return Object.hashAll([l$id, l$language_id, l$location_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameVarSampOrderBy {
  InputpokemonV2LocationareanameVarSampOrderBy(
      {this.id, this.language_id, this.location_area_id});

  @override
  factory InputpokemonV2LocationareanameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    return Object.hashAll([l$id, l$language_id, l$location_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationareanameVarianceOrderBy {
  InputpokemonV2LocationareanameVarianceOrderBy(
      {this.id, this.language_id, this.location_area_id});

  @override
  factory InputpokemonV2LocationareanameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationareanameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationareanameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_area_id = location_area_id;
    return Object.hashAll([l$id, l$language_id, l$location_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationareanameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_area_id = location_area_id;
    final lOther$location_area_id = other.location_area_id;
    if (l$location_area_id != lOther$location_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexAggregateOrderBy {
  InputpokemonV2LocationgameindexAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2LocationgameindexAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexAggregateOrderByFromJson(json);

  final InputpokemonV2LocationgameindexAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2LocationgameindexMaxOrderBy? max;

  final InputpokemonV2LocationgameindexMinOrderBy? min;

  final InputpokemonV2LocationgameindexStddevOrderBy? stddev;

  final InputpokemonV2LocationgameindexStddevPopOrderBy? stddev_pop;

  final InputpokemonV2LocationgameindexStddevSampOrderBy? stddev_samp;

  final InputpokemonV2LocationgameindexSumOrderBy? sum;

  final InputpokemonV2LocationgameindexVarPopOrderBy? var_pop;

  final InputpokemonV2LocationgameindexVarSampOrderBy? var_samp;

  final InputpokemonV2LocationgameindexVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexAvgOrderBy {
  InputpokemonV2LocationgameindexAvgOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexAvgOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexBoolExp {
  InputpokemonV2LocationgameindexBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.game_index,
      this.generation_id,
      this.id,
      this.location_id,
      this.pokemon_v2_generation,
      this.pokemon_v2_location});

  @override
  factory InputpokemonV2LocationgameindexBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2LocationgameindexBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2LocationgameindexBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2LocationgameindexBoolExp>? $_or;

  final InputIntComparisonExp? game_index;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? location_id;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2LocationBoolExp? pokemon_v2_location;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_location = pokemon_v2_location;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$game_index,
      l$generation_id,
      l$id,
      l$location_id,
      l$pokemon_v2_generation,
      l$pokemon_v2_location
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_location = pokemon_v2_location;
    final lOther$pokemon_v2_location = other.pokemon_v2_location;
    if (l$pokemon_v2_location != lOther$pokemon_v2_location) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexMaxOrderBy {
  InputpokemonV2LocationgameindexMaxOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexMaxOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexMinOrderBy {
  InputpokemonV2LocationgameindexMinOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexMinOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexOrderBy {
  InputpokemonV2LocationgameindexOrderBy(
      {this.game_index,
      this.generation_id,
      this.id,
      this.location_id,
      this.pokemon_v2_generation,
      this.pokemon_v2_location});

  @override
  factory InputpokemonV2LocationgameindexOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2LocationOrderBy? pokemon_v2_location;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_location = pokemon_v2_location;
    return Object.hashAll([
      l$game_index,
      l$generation_id,
      l$id,
      l$location_id,
      l$pokemon_v2_generation,
      l$pokemon_v2_location
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_location = pokemon_v2_location;
    final lOther$pokemon_v2_location = other.pokemon_v2_location;
    if (l$pokemon_v2_location != lOther$pokemon_v2_location) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexStddevOrderBy {
  InputpokemonV2LocationgameindexStddevOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexStddevOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexStddevPopOrderBy {
  InputpokemonV2LocationgameindexStddevPopOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexStddevPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexStddevSampOrderBy {
  InputpokemonV2LocationgameindexStddevSampOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexStddevSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexSumOrderBy {
  InputpokemonV2LocationgameindexSumOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexSumOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexVarPopOrderBy {
  InputpokemonV2LocationgameindexVarPopOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexVarPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexVarSampOrderBy {
  InputpokemonV2LocationgameindexVarSampOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexVarSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationgameindexVarianceOrderBy {
  InputpokemonV2LocationgameindexVarianceOrderBy(
      {this.game_index, this.generation_id, this.id, this.location_id});

  @override
  factory InputpokemonV2LocationgameindexVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationgameindexVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationgameindexVarianceOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$location_id = location_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationgameindexVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameAggregateOrderBy {
  InputpokemonV2LocationnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2LocationnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameAggregateOrderByFromJson(json);

  final InputpokemonV2LocationnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2LocationnameMaxOrderBy? max;

  final InputpokemonV2LocationnameMinOrderBy? min;

  final InputpokemonV2LocationnameStddevOrderBy? stddev;

  final InputpokemonV2LocationnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2LocationnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2LocationnameSumOrderBy? sum;

  final InputpokemonV2LocationnameVarPopOrderBy? var_pop;

  final InputpokemonV2LocationnameVarSampOrderBy? var_samp;

  final InputpokemonV2LocationnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameAvgOrderBy {
  InputpokemonV2LocationnameAvgOrderBy(
      {this.id, this.language_id, this.location_id});

  @override
  factory InputpokemonV2LocationnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    return Object.hashAll([l$id, l$language_id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameBoolExp {
  InputpokemonV2LocationnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.location_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_location});

  @override
  factory InputpokemonV2LocationnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2LocationnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2LocationnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2LocationnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? location_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2LocationBoolExp? pokemon_v2_location;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_location = pokemon_v2_location;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$location_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_location
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_location = pokemon_v2_location;
    final lOther$pokemon_v2_location = other.pokemon_v2_location;
    if (l$pokemon_v2_location != lOther$pokemon_v2_location) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameMaxOrderBy {
  InputpokemonV2LocationnameMaxOrderBy(
      {this.id, this.language_id, this.location_id, this.name});

  @override
  factory InputpokemonV2LocationnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$location_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameMinOrderBy {
  InputpokemonV2LocationnameMinOrderBy(
      {this.id, this.language_id, this.location_id, this.name});

  @override
  factory InputpokemonV2LocationnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$location_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameOrderBy {
  InputpokemonV2LocationnameOrderBy(
      {this.id,
      this.language_id,
      this.location_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_location});

  @override
  factory InputpokemonV2LocationnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2LocationOrderBy? pokemon_v2_location;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_location = pokemon_v2_location;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$location_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_location
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_location = pokemon_v2_location;
    final lOther$pokemon_v2_location = other.pokemon_v2_location;
    if (l$pokemon_v2_location != lOther$pokemon_v2_location) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameStddevOrderBy {
  InputpokemonV2LocationnameStddevOrderBy(
      {this.id, this.language_id, this.location_id});

  @override
  factory InputpokemonV2LocationnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    return Object.hashAll([l$id, l$language_id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameStddevPopOrderBy {
  InputpokemonV2LocationnameStddevPopOrderBy(
      {this.id, this.language_id, this.location_id});

  @override
  factory InputpokemonV2LocationnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    return Object.hashAll([l$id, l$language_id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameStddevSampOrderBy {
  InputpokemonV2LocationnameStddevSampOrderBy(
      {this.id, this.language_id, this.location_id});

  @override
  factory InputpokemonV2LocationnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    return Object.hashAll([l$id, l$language_id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameSumOrderBy {
  InputpokemonV2LocationnameSumOrderBy(
      {this.id, this.language_id, this.location_id});

  @override
  factory InputpokemonV2LocationnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    return Object.hashAll([l$id, l$language_id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameVarPopOrderBy {
  InputpokemonV2LocationnameVarPopOrderBy(
      {this.id, this.language_id, this.location_id});

  @override
  factory InputpokemonV2LocationnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    return Object.hashAll([l$id, l$language_id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameVarSampOrderBy {
  InputpokemonV2LocationnameVarSampOrderBy(
      {this.id, this.language_id, this.location_id});

  @override
  factory InputpokemonV2LocationnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    return Object.hashAll([l$id, l$language_id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2LocationnameVarianceOrderBy {
  InputpokemonV2LocationnameVarianceOrderBy(
      {this.id, this.language_id, this.location_id});

  @override
  factory InputpokemonV2LocationnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2LocationnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2LocationnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$location_id = location_id;
    return Object.hashAll([l$id, l$language_id, l$location_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2LocationnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineAggregateOrderBy {
  InputpokemonV2MachineAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MachineAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MachineAggregateOrderByFromJson(json);

  final InputpokemonV2MachineAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MachineMaxOrderBy? max;

  final InputpokemonV2MachineMinOrderBy? min;

  final InputpokemonV2MachineStddevOrderBy? stddev;

  final InputpokemonV2MachineStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MachineStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MachineSumOrderBy? sum;

  final InputpokemonV2MachineVarPopOrderBy? var_pop;

  final InputpokemonV2MachineVarSampOrderBy? var_samp;

  final InputpokemonV2MachineVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineAvgOrderBy {
  InputpokemonV2MachineAvgOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MachineAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineAvgOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineBoolExp {
  InputpokemonV2MachineBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.pokemon_v2_growthrate,
      this.pokemon_v2_item,
      this.pokemon_v2_move,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MachineBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MachineBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MachineBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MachineBoolExp>? $_or;

  final InputIntComparisonExp? growth_rate_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_id;

  final InputIntComparisonExp? machine_number;

  final InputIntComparisonExp? move_id;

  final InputpokemonV2GrowthrateBoolExp? pokemon_v2_growthrate;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2MachineBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$pokemon_v2_growthrate,
      l$pokemon_v2_item,
      l$pokemon_v2_move,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final lOther$pokemon_v2_growthrate = other.pokemon_v2_growthrate;
    if (l$pokemon_v2_growthrate != lOther$pokemon_v2_growthrate) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineMaxOrderBy {
  InputpokemonV2MachineMaxOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MachineMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineMaxOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineMinOrderBy {
  InputpokemonV2MachineMinOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MachineMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineMinOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineOrderBy {
  InputpokemonV2MachineOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.pokemon_v2_growthrate,
      this.pokemon_v2_item,
      this.pokemon_v2_move,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MachineOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  final InputpokemonV2GrowthrateOrderBy? pokemon_v2_growthrate;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2MachineOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$pokemon_v2_growthrate,
      l$pokemon_v2_item,
      l$pokemon_v2_move,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final lOther$pokemon_v2_growthrate = other.pokemon_v2_growthrate;
    if (l$pokemon_v2_growthrate != lOther$pokemon_v2_growthrate) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineStddevOrderBy {
  InputpokemonV2MachineStddevOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MachineStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineStddevOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineStddevPopOrderBy {
  InputpokemonV2MachineStddevPopOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MachineStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineStddevPopOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineStddevSampOrderBy {
  InputpokemonV2MachineStddevSampOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MachineStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineStddevSampOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineSumOrderBy {
  InputpokemonV2MachineSumOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MachineSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineSumOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineVarPopOrderBy {
  InputpokemonV2MachineVarPopOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MachineVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineVarPopOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineVarSampOrderBy {
  InputpokemonV2MachineVarSampOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MachineVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineVarSampOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MachineVarianceOrderBy {
  InputpokemonV2MachineVarianceOrderBy(
      {this.growth_rate_id,
      this.id,
      this.item_id,
      this.machine_number,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MachineVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MachineVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? machine_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MachineVarianceOrderByToJson(this);
  int get hashCode {
    final l$growth_rate_id = growth_rate_id;
    final l$id = id;
    final l$item_id = item_id;
    final l$machine_number = machine_number;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$growth_rate_id,
      l$id,
      l$item_id,
      l$machine_number,
      l$move_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MachineVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$machine_number = machine_number;
    final lOther$machine_number = other.machine_number;
    if (l$machine_number != lOther$machine_number) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveAggregateOrderBy {
  InputpokemonV2MoveAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MoveAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveAggregateOrderByFromJson(json);

  final InputpokemonV2MoveAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MoveMaxOrderBy? max;

  final InputpokemonV2MoveMinOrderBy? min;

  final InputpokemonV2MoveStddevOrderBy? stddev;

  final InputpokemonV2MoveStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MoveStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MoveSumOrderBy? sum;

  final InputpokemonV2MoveVarPopOrderBy? var_pop;

  final InputpokemonV2MoveVarSampOrderBy? var_samp;

  final InputpokemonV2MoveVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveAvgOrderBy {
  InputpokemonV2MoveAvgOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2MoveAvgOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveBoolExp {
  InputpokemonV2MoveBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.name,
      this.pokemonV2ContestcombosBySecondMoveId,
      this.pokemonV2SupercontestcombosBySecondMoveId,
      this.pokemon_v2_contestcombos,
      this.pokemon_v2_contesteffect,
      this.pokemon_v2_contesttype,
      this.pokemon_v2_generation,
      this.pokemon_v2_machines,
      this.pokemon_v2_moveattributemaps,
      this.pokemon_v2_movechanges,
      this.pokemon_v2_movedamageclass,
      this.pokemon_v2_moveeffect,
      this.pokemon_v2_moveflavortexts,
      this.pokemon_v2_movemeta,
      this.pokemon_v2_movemetastatchanges,
      this.pokemon_v2_movemetum,
      this.pokemon_v2_movenames,
      this.pokemon_v2_movetarget,
      this.pokemon_v2_pokemonevolutions,
      this.pokemon_v2_pokemonmoves,
      this.pokemon_v2_supercontestcombos,
      this.pokemon_v2_supercontesteffect,
      this.pokemon_v2_type,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveBoolExp>? $_or;

  final InputIntComparisonExp? accuracy;

  final InputIntComparisonExp? contest_effect_id;

  final InputIntComparisonExp? contest_type_id;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? move_damage_class_id;

  final InputIntComparisonExp? move_effect_chance;

  final InputIntComparisonExp? move_effect_id;

  final InputIntComparisonExp? move_target_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2ContestcomboBoolExp? pokemonV2ContestcombosBySecondMoveId;

  final InputpokemonV2SupercontestcomboBoolExp?
      pokemonV2SupercontestcombosBySecondMoveId;

  final InputpokemonV2ContestcomboBoolExp? pokemon_v2_contestcombos;

  final InputpokemonV2ContesteffectBoolExp? pokemon_v2_contesteffect;

  final InputpokemonV2ContesttypeBoolExp? pokemon_v2_contesttype;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2MachineBoolExp? pokemon_v2_machines;

  final InputpokemonV2MoveattributemapBoolExp? pokemon_v2_moveattributemaps;

  final InputpokemonV2MovechangeBoolExp? pokemon_v2_movechanges;

  final InputpokemonV2MovedamageclassBoolExp? pokemon_v2_movedamageclass;

  final InputpokemonV2MoveeffectBoolExp? pokemon_v2_moveeffect;

  final InputpokemonV2MoveflavortextBoolExp? pokemon_v2_moveflavortexts;

  final InputpokemonV2MovemetaBoolExp? pokemon_v2_movemeta;

  final InputpokemonV2MovemetastatchangeBoolExp? pokemon_v2_movemetastatchanges;

  final InputpokemonV2MovemetaBoolExp? pokemon_v2_movemetum;

  final InputpokemonV2MovenameBoolExp? pokemon_v2_movenames;

  final InputpokemonV2MovetargetBoolExp? pokemon_v2_movetarget;

  final InputpokemonV2PokemonevolutionBoolExp? pokemon_v2_pokemonevolutions;

  final InputpokemonV2PokemonmoveBoolExp? pokemon_v2_pokemonmoves;

  final InputpokemonV2SupercontestcomboBoolExp? pokemon_v2_supercontestcombos;

  final InputpokemonV2SupercontesteffectBoolExp? pokemon_v2_supercontesteffect;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? power;

  final InputIntComparisonExp? pp;

  final InputIntComparisonExp? priority;

  final InputIntComparisonExp? super_contest_effect_id;

  final InputIntComparisonExp? type_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2MoveBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$name = name;
    final l$pokemonV2ContestcombosBySecondMoveId =
        pokemonV2ContestcombosBySecondMoveId;
    final l$pokemonV2SupercontestcombosBySecondMoveId =
        pokemonV2SupercontestcombosBySecondMoveId;
    final l$pokemon_v2_contestcombos = pokemon_v2_contestcombos;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_machines = pokemon_v2_machines;
    final l$pokemon_v2_moveattributemaps = pokemon_v2_moveattributemaps;
    final l$pokemon_v2_movechanges = pokemon_v2_movechanges;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final l$pokemon_v2_moveflavortexts = pokemon_v2_moveflavortexts;
    final l$pokemon_v2_movemeta = pokemon_v2_movemeta;
    final l$pokemon_v2_movemetastatchanges = pokemon_v2_movemetastatchanges;
    final l$pokemon_v2_movemetum = pokemon_v2_movemetum;
    final l$pokemon_v2_movenames = pokemon_v2_movenames;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final l$pokemon_v2_pokemonmoves = pokemon_v2_pokemonmoves;
    final l$pokemon_v2_supercontestcombos = pokemon_v2_supercontestcombos;
    final l$pokemon_v2_supercontesteffect = pokemon_v2_supercontesteffect;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$name,
      l$pokemonV2ContestcombosBySecondMoveId,
      l$pokemonV2SupercontestcombosBySecondMoveId,
      l$pokemon_v2_contestcombos,
      l$pokemon_v2_contesteffect,
      l$pokemon_v2_contesttype,
      l$pokemon_v2_generation,
      l$pokemon_v2_machines,
      l$pokemon_v2_moveattributemaps,
      l$pokemon_v2_movechanges,
      l$pokemon_v2_movedamageclass,
      l$pokemon_v2_moveeffect,
      l$pokemon_v2_moveflavortexts,
      l$pokemon_v2_movemeta,
      l$pokemon_v2_movemetastatchanges,
      l$pokemon_v2_movemetum,
      l$pokemon_v2_movenames,
      l$pokemon_v2_movetarget,
      l$pokemon_v2_pokemonevolutions,
      l$pokemon_v2_pokemonmoves,
      l$pokemon_v2_supercontestcombos,
      l$pokemon_v2_supercontesteffect,
      l$pokemon_v2_type,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2ContestcombosBySecondMoveId =
        pokemonV2ContestcombosBySecondMoveId;
    final lOther$pokemonV2ContestcombosBySecondMoveId =
        other.pokemonV2ContestcombosBySecondMoveId;
    if (l$pokemonV2ContestcombosBySecondMoveId !=
        lOther$pokemonV2ContestcombosBySecondMoveId) return false;
    final l$pokemonV2SupercontestcombosBySecondMoveId =
        pokemonV2SupercontestcombosBySecondMoveId;
    final lOther$pokemonV2SupercontestcombosBySecondMoveId =
        other.pokemonV2SupercontestcombosBySecondMoveId;
    if (l$pokemonV2SupercontestcombosBySecondMoveId !=
        lOther$pokemonV2SupercontestcombosBySecondMoveId) return false;
    final l$pokemon_v2_contestcombos = pokemon_v2_contestcombos;
    final lOther$pokemon_v2_contestcombos = other.pokemon_v2_contestcombos;
    if (l$pokemon_v2_contestcombos != lOther$pokemon_v2_contestcombos)
      return false;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final lOther$pokemon_v2_contesteffect = other.pokemon_v2_contesteffect;
    if (l$pokemon_v2_contesteffect != lOther$pokemon_v2_contesteffect)
      return false;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final lOther$pokemon_v2_contesttype = other.pokemon_v2_contesttype;
    if (l$pokemon_v2_contesttype != lOther$pokemon_v2_contesttype) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_machines = pokemon_v2_machines;
    final lOther$pokemon_v2_machines = other.pokemon_v2_machines;
    if (l$pokemon_v2_machines != lOther$pokemon_v2_machines) return false;
    final l$pokemon_v2_moveattributemaps = pokemon_v2_moveattributemaps;
    final lOther$pokemon_v2_moveattributemaps =
        other.pokemon_v2_moveattributemaps;
    if (l$pokemon_v2_moveattributemaps != lOther$pokemon_v2_moveattributemaps)
      return false;
    final l$pokemon_v2_movechanges = pokemon_v2_movechanges;
    final lOther$pokemon_v2_movechanges = other.pokemon_v2_movechanges;
    if (l$pokemon_v2_movechanges != lOther$pokemon_v2_movechanges) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final lOther$pokemon_v2_moveeffect = other.pokemon_v2_moveeffect;
    if (l$pokemon_v2_moveeffect != lOther$pokemon_v2_moveeffect) return false;
    final l$pokemon_v2_moveflavortexts = pokemon_v2_moveflavortexts;
    final lOther$pokemon_v2_moveflavortexts = other.pokemon_v2_moveflavortexts;
    if (l$pokemon_v2_moveflavortexts != lOther$pokemon_v2_moveflavortexts)
      return false;
    final l$pokemon_v2_movemeta = pokemon_v2_movemeta;
    final lOther$pokemon_v2_movemeta = other.pokemon_v2_movemeta;
    if (l$pokemon_v2_movemeta != lOther$pokemon_v2_movemeta) return false;
    final l$pokemon_v2_movemetastatchanges = pokemon_v2_movemetastatchanges;
    final lOther$pokemon_v2_movemetastatchanges =
        other.pokemon_v2_movemetastatchanges;
    if (l$pokemon_v2_movemetastatchanges !=
        lOther$pokemon_v2_movemetastatchanges) return false;
    final l$pokemon_v2_movemetum = pokemon_v2_movemetum;
    final lOther$pokemon_v2_movemetum = other.pokemon_v2_movemetum;
    if (l$pokemon_v2_movemetum != lOther$pokemon_v2_movemetum) return false;
    final l$pokemon_v2_movenames = pokemon_v2_movenames;
    final lOther$pokemon_v2_movenames = other.pokemon_v2_movenames;
    if (l$pokemon_v2_movenames != lOther$pokemon_v2_movenames) return false;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    final lOther$pokemon_v2_movetarget = other.pokemon_v2_movetarget;
    if (l$pokemon_v2_movetarget != lOther$pokemon_v2_movetarget) return false;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final lOther$pokemon_v2_pokemonevolutions =
        other.pokemon_v2_pokemonevolutions;
    if (l$pokemon_v2_pokemonevolutions != lOther$pokemon_v2_pokemonevolutions)
      return false;
    final l$pokemon_v2_pokemonmoves = pokemon_v2_pokemonmoves;
    final lOther$pokemon_v2_pokemonmoves = other.pokemon_v2_pokemonmoves;
    if (l$pokemon_v2_pokemonmoves != lOther$pokemon_v2_pokemonmoves)
      return false;
    final l$pokemon_v2_supercontestcombos = pokemon_v2_supercontestcombos;
    final lOther$pokemon_v2_supercontestcombos =
        other.pokemon_v2_supercontestcombos;
    if (l$pokemon_v2_supercontestcombos != lOther$pokemon_v2_supercontestcombos)
      return false;
    final l$pokemon_v2_supercontesteffect = pokemon_v2_supercontesteffect;
    final lOther$pokemon_v2_supercontesteffect =
        other.pokemon_v2_supercontesteffect;
    if (l$pokemon_v2_supercontesteffect != lOther$pokemon_v2_supercontesteffect)
      return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveMaxOrderBy {
  InputpokemonV2MoveMaxOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.name,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2MoveMaxOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$name = name;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$name,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveMinOrderBy {
  InputpokemonV2MoveMinOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.name,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2MoveMinOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$name = name;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$name,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveOrderBy {
  InputpokemonV2MoveOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.name,
      this.pokemonV2ContestcombosBySecondMoveId_aggregate,
      this.pokemonV2SupercontestcombosBySecondMoveId_aggregate,
      this.pokemon_v2_contestcombos_aggregate,
      this.pokemon_v2_contesteffect,
      this.pokemon_v2_contesttype,
      this.pokemon_v2_generation,
      this.pokemon_v2_machines_aggregate,
      this.pokemon_v2_moveattributemaps_aggregate,
      this.pokemon_v2_movechanges_aggregate,
      this.pokemon_v2_movedamageclass,
      this.pokemon_v2_moveeffect,
      this.pokemon_v2_moveflavortexts_aggregate,
      this.pokemon_v2_movemeta_aggregate,
      this.pokemon_v2_movemetastatchanges_aggregate,
      this.pokemon_v2_movemetum,
      this.pokemon_v2_movenames_aggregate,
      this.pokemon_v2_movetarget,
      this.pokemon_v2_pokemonevolutions_aggregate,
      this.pokemon_v2_pokemonmoves_aggregate,
      this.pokemon_v2_supercontestcombos_aggregate,
      this.pokemon_v2_supercontesteffect,
      this.pokemon_v2_type,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2ContestcomboAggregateOrderBy?
      pokemonV2ContestcombosBySecondMoveId_aggregate;

  final InputpokemonV2SupercontestcomboAggregateOrderBy?
      pokemonV2SupercontestcombosBySecondMoveId_aggregate;

  final InputpokemonV2ContestcomboAggregateOrderBy?
      pokemon_v2_contestcombos_aggregate;

  final InputpokemonV2ContesteffectOrderBy? pokemon_v2_contesteffect;

  final InputpokemonV2ContesttypeOrderBy? pokemon_v2_contesttype;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2MachineAggregateOrderBy? pokemon_v2_machines_aggregate;

  final InputpokemonV2MoveattributemapAggregateOrderBy?
      pokemon_v2_moveattributemaps_aggregate;

  final InputpokemonV2MovechangeAggregateOrderBy?
      pokemon_v2_movechanges_aggregate;

  final InputpokemonV2MovedamageclassOrderBy? pokemon_v2_movedamageclass;

  final InputpokemonV2MoveeffectOrderBy? pokemon_v2_moveeffect;

  final InputpokemonV2MoveflavortextAggregateOrderBy?
      pokemon_v2_moveflavortexts_aggregate;

  final InputpokemonV2MovemetaAggregateOrderBy? pokemon_v2_movemeta_aggregate;

  final InputpokemonV2MovemetastatchangeAggregateOrderBy?
      pokemon_v2_movemetastatchanges_aggregate;

  final InputpokemonV2MovemetaOrderBy? pokemon_v2_movemetum;

  final InputpokemonV2MovenameAggregateOrderBy? pokemon_v2_movenames_aggregate;

  final InputpokemonV2MovetargetOrderBy? pokemon_v2_movetarget;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemon_v2_pokemonevolutions_aggregate;

  final InputpokemonV2PokemonmoveAggregateOrderBy?
      pokemon_v2_pokemonmoves_aggregate;

  final InputpokemonV2SupercontestcomboAggregateOrderBy?
      pokemon_v2_supercontestcombos_aggregate;

  final InputpokemonV2SupercontesteffectOrderBy? pokemon_v2_supercontesteffect;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2MoveOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$name = name;
    final l$pokemonV2ContestcombosBySecondMoveId_aggregate =
        pokemonV2ContestcombosBySecondMoveId_aggregate;
    final l$pokemonV2SupercontestcombosBySecondMoveId_aggregate =
        pokemonV2SupercontestcombosBySecondMoveId_aggregate;
    final l$pokemon_v2_contestcombos_aggregate =
        pokemon_v2_contestcombos_aggregate;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_machines_aggregate = pokemon_v2_machines_aggregate;
    final l$pokemon_v2_moveattributemaps_aggregate =
        pokemon_v2_moveattributemaps_aggregate;
    final l$pokemon_v2_movechanges_aggregate = pokemon_v2_movechanges_aggregate;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final l$pokemon_v2_moveflavortexts_aggregate =
        pokemon_v2_moveflavortexts_aggregate;
    final l$pokemon_v2_movemeta_aggregate = pokemon_v2_movemeta_aggregate;
    final l$pokemon_v2_movemetastatchanges_aggregate =
        pokemon_v2_movemetastatchanges_aggregate;
    final l$pokemon_v2_movemetum = pokemon_v2_movemetum;
    final l$pokemon_v2_movenames_aggregate = pokemon_v2_movenames_aggregate;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final l$pokemon_v2_pokemonmoves_aggregate =
        pokemon_v2_pokemonmoves_aggregate;
    final l$pokemon_v2_supercontestcombos_aggregate =
        pokemon_v2_supercontestcombos_aggregate;
    final l$pokemon_v2_supercontesteffect = pokemon_v2_supercontesteffect;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$name,
      l$pokemonV2ContestcombosBySecondMoveId_aggregate,
      l$pokemonV2SupercontestcombosBySecondMoveId_aggregate,
      l$pokemon_v2_contestcombos_aggregate,
      l$pokemon_v2_contesteffect,
      l$pokemon_v2_contesttype,
      l$pokemon_v2_generation,
      l$pokemon_v2_machines_aggregate,
      l$pokemon_v2_moveattributemaps_aggregate,
      l$pokemon_v2_movechanges_aggregate,
      l$pokemon_v2_movedamageclass,
      l$pokemon_v2_moveeffect,
      l$pokemon_v2_moveflavortexts_aggregate,
      l$pokemon_v2_movemeta_aggregate,
      l$pokemon_v2_movemetastatchanges_aggregate,
      l$pokemon_v2_movemetum,
      l$pokemon_v2_movenames_aggregate,
      l$pokemon_v2_movetarget,
      l$pokemon_v2_pokemonevolutions_aggregate,
      l$pokemon_v2_pokemonmoves_aggregate,
      l$pokemon_v2_supercontestcombos_aggregate,
      l$pokemon_v2_supercontesteffect,
      l$pokemon_v2_type,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2ContestcombosBySecondMoveId_aggregate =
        pokemonV2ContestcombosBySecondMoveId_aggregate;
    final lOther$pokemonV2ContestcombosBySecondMoveId_aggregate =
        other.pokemonV2ContestcombosBySecondMoveId_aggregate;
    if (l$pokemonV2ContestcombosBySecondMoveId_aggregate !=
        lOther$pokemonV2ContestcombosBySecondMoveId_aggregate) return false;
    final l$pokemonV2SupercontestcombosBySecondMoveId_aggregate =
        pokemonV2SupercontestcombosBySecondMoveId_aggregate;
    final lOther$pokemonV2SupercontestcombosBySecondMoveId_aggregate =
        other.pokemonV2SupercontestcombosBySecondMoveId_aggregate;
    if (l$pokemonV2SupercontestcombosBySecondMoveId_aggregate !=
        lOther$pokemonV2SupercontestcombosBySecondMoveId_aggregate)
      return false;
    final l$pokemon_v2_contestcombos_aggregate =
        pokemon_v2_contestcombos_aggregate;
    final lOther$pokemon_v2_contestcombos_aggregate =
        other.pokemon_v2_contestcombos_aggregate;
    if (l$pokemon_v2_contestcombos_aggregate !=
        lOther$pokemon_v2_contestcombos_aggregate) return false;
    final l$pokemon_v2_contesteffect = pokemon_v2_contesteffect;
    final lOther$pokemon_v2_contesteffect = other.pokemon_v2_contesteffect;
    if (l$pokemon_v2_contesteffect != lOther$pokemon_v2_contesteffect)
      return false;
    final l$pokemon_v2_contesttype = pokemon_v2_contesttype;
    final lOther$pokemon_v2_contesttype = other.pokemon_v2_contesttype;
    if (l$pokemon_v2_contesttype != lOther$pokemon_v2_contesttype) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_machines_aggregate = pokemon_v2_machines_aggregate;
    final lOther$pokemon_v2_machines_aggregate =
        other.pokemon_v2_machines_aggregate;
    if (l$pokemon_v2_machines_aggregate != lOther$pokemon_v2_machines_aggregate)
      return false;
    final l$pokemon_v2_moveattributemaps_aggregate =
        pokemon_v2_moveattributemaps_aggregate;
    final lOther$pokemon_v2_moveattributemaps_aggregate =
        other.pokemon_v2_moveattributemaps_aggregate;
    if (l$pokemon_v2_moveattributemaps_aggregate !=
        lOther$pokemon_v2_moveattributemaps_aggregate) return false;
    final l$pokemon_v2_movechanges_aggregate = pokemon_v2_movechanges_aggregate;
    final lOther$pokemon_v2_movechanges_aggregate =
        other.pokemon_v2_movechanges_aggregate;
    if (l$pokemon_v2_movechanges_aggregate !=
        lOther$pokemon_v2_movechanges_aggregate) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final lOther$pokemon_v2_moveeffect = other.pokemon_v2_moveeffect;
    if (l$pokemon_v2_moveeffect != lOther$pokemon_v2_moveeffect) return false;
    final l$pokemon_v2_moveflavortexts_aggregate =
        pokemon_v2_moveflavortexts_aggregate;
    final lOther$pokemon_v2_moveflavortexts_aggregate =
        other.pokemon_v2_moveflavortexts_aggregate;
    if (l$pokemon_v2_moveflavortexts_aggregate !=
        lOther$pokemon_v2_moveflavortexts_aggregate) return false;
    final l$pokemon_v2_movemeta_aggregate = pokemon_v2_movemeta_aggregate;
    final lOther$pokemon_v2_movemeta_aggregate =
        other.pokemon_v2_movemeta_aggregate;
    if (l$pokemon_v2_movemeta_aggregate != lOther$pokemon_v2_movemeta_aggregate)
      return false;
    final l$pokemon_v2_movemetastatchanges_aggregate =
        pokemon_v2_movemetastatchanges_aggregate;
    final lOther$pokemon_v2_movemetastatchanges_aggregate =
        other.pokemon_v2_movemetastatchanges_aggregate;
    if (l$pokemon_v2_movemetastatchanges_aggregate !=
        lOther$pokemon_v2_movemetastatchanges_aggregate) return false;
    final l$pokemon_v2_movemetum = pokemon_v2_movemetum;
    final lOther$pokemon_v2_movemetum = other.pokemon_v2_movemetum;
    if (l$pokemon_v2_movemetum != lOther$pokemon_v2_movemetum) return false;
    final l$pokemon_v2_movenames_aggregate = pokemon_v2_movenames_aggregate;
    final lOther$pokemon_v2_movenames_aggregate =
        other.pokemon_v2_movenames_aggregate;
    if (l$pokemon_v2_movenames_aggregate !=
        lOther$pokemon_v2_movenames_aggregate) return false;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    final lOther$pokemon_v2_movetarget = other.pokemon_v2_movetarget;
    if (l$pokemon_v2_movetarget != lOther$pokemon_v2_movetarget) return false;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final lOther$pokemon_v2_pokemonevolutions_aggregate =
        other.pokemon_v2_pokemonevolutions_aggregate;
    if (l$pokemon_v2_pokemonevolutions_aggregate !=
        lOther$pokemon_v2_pokemonevolutions_aggregate) return false;
    final l$pokemon_v2_pokemonmoves_aggregate =
        pokemon_v2_pokemonmoves_aggregate;
    final lOther$pokemon_v2_pokemonmoves_aggregate =
        other.pokemon_v2_pokemonmoves_aggregate;
    if (l$pokemon_v2_pokemonmoves_aggregate !=
        lOther$pokemon_v2_pokemonmoves_aggregate) return false;
    final l$pokemon_v2_supercontestcombos_aggregate =
        pokemon_v2_supercontestcombos_aggregate;
    final lOther$pokemon_v2_supercontestcombos_aggregate =
        other.pokemon_v2_supercontestcombos_aggregate;
    if (l$pokemon_v2_supercontestcombos_aggregate !=
        lOther$pokemon_v2_supercontestcombos_aggregate) return false;
    final l$pokemon_v2_supercontesteffect = pokemon_v2_supercontesteffect;
    final lOther$pokemon_v2_supercontesteffect =
        other.pokemon_v2_supercontesteffect;
    if (l$pokemon_v2_supercontesteffect != lOther$pokemon_v2_supercontesteffect)
      return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveStddevOrderBy {
  InputpokemonV2MoveStddevOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveStddevOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveStddevOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveStddevPopOrderBy {
  InputpokemonV2MoveStddevPopOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveStddevPopOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveStddevSampOrderBy {
  InputpokemonV2MoveStddevSampOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveStddevSampOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveSumOrderBy {
  InputpokemonV2MoveSumOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2MoveSumOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveVarPopOrderBy {
  InputpokemonV2MoveVarPopOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveVarPopOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveVarPopOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveVarSampOrderBy {
  InputpokemonV2MoveVarSampOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveVarSampOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveVarianceOrderBy {
  InputpokemonV2MoveVarianceOrderBy(
      {this.accuracy,
      this.contest_effect_id,
      this.contest_type_id,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_target_id,
      this.power,
      this.pp,
      this.priority,
      this.super_contest_effect_id,
      this.type_id});

  @override
  factory InputpokemonV2MoveVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? contest_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? priority;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveVarianceOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$contest_effect_id = contest_effect_id;
    final l$contest_type_id = contest_type_id;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_target_id = move_target_id;
    final l$power = power;
    final l$pp = pp;
    final l$priority = priority;
    final l$super_contest_effect_id = super_contest_effect_id;
    final l$type_id = type_id;
    return Object.hashAll([
      l$accuracy,
      l$contest_effect_id,
      l$contest_type_id,
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_target_id,
      l$power,
      l$pp,
      l$priority,
      l$super_contest_effect_id,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$contest_effect_id = contest_effect_id;
    final lOther$contest_effect_id = other.contest_effect_id;
    if (l$contest_effect_id != lOther$contest_effect_id) return false;
    final l$contest_type_id = contest_type_id;
    final lOther$contest_type_id = other.contest_type_id;
    if (l$contest_type_id != lOther$contest_type_id) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$priority = priority;
    final lOther$priority = other.priority;
    if (l$priority != lOther$priority) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributeBoolExp {
  InputpokemonV2MoveattributeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_moveattributedescriptions,
      this.pokemon_v2_moveattributemaps,
      this.pokemon_v2_moveattributenames});

  @override
  factory InputpokemonV2MoveattributeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveattributeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveattributeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveattributeBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2MoveattributedescriptionBoolExp?
      pokemon_v2_moveattributedescriptions;

  final InputpokemonV2MoveattributemapBoolExp? pokemon_v2_moveattributemaps;

  final InputpokemonV2MoveattributenameBoolExp? pokemon_v2_moveattributenames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_moveattributedescriptions =
        pokemon_v2_moveattributedescriptions;
    final l$pokemon_v2_moveattributemaps = pokemon_v2_moveattributemaps;
    final l$pokemon_v2_moveattributenames = pokemon_v2_moveattributenames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_moveattributedescriptions,
      l$pokemon_v2_moveattributemaps,
      l$pokemon_v2_moveattributenames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_moveattributedescriptions =
        pokemon_v2_moveattributedescriptions;
    final lOther$pokemon_v2_moveattributedescriptions =
        other.pokemon_v2_moveattributedescriptions;
    if (l$pokemon_v2_moveattributedescriptions !=
        lOther$pokemon_v2_moveattributedescriptions) return false;
    final l$pokemon_v2_moveattributemaps = pokemon_v2_moveattributemaps;
    final lOther$pokemon_v2_moveattributemaps =
        other.pokemon_v2_moveattributemaps;
    if (l$pokemon_v2_moveattributemaps != lOther$pokemon_v2_moveattributemaps)
      return false;
    final l$pokemon_v2_moveattributenames = pokemon_v2_moveattributenames;
    final lOther$pokemon_v2_moveattributenames =
        other.pokemon_v2_moveattributenames;
    if (l$pokemon_v2_moveattributenames != lOther$pokemon_v2_moveattributenames)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributeOrderBy {
  InputpokemonV2MoveattributeOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_moveattributedescriptions_aggregate,
      this.pokemon_v2_moveattributemaps_aggregate,
      this.pokemon_v2_moveattributenames_aggregate});

  @override
  factory InputpokemonV2MoveattributeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2MoveattributedescriptionAggregateOrderBy?
      pokemon_v2_moveattributedescriptions_aggregate;

  final InputpokemonV2MoveattributemapAggregateOrderBy?
      pokemon_v2_moveattributemaps_aggregate;

  final InputpokemonV2MoveattributenameAggregateOrderBy?
      pokemon_v2_moveattributenames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributeOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_moveattributedescriptions_aggregate =
        pokemon_v2_moveattributedescriptions_aggregate;
    final l$pokemon_v2_moveattributemaps_aggregate =
        pokemon_v2_moveattributemaps_aggregate;
    final l$pokemon_v2_moveattributenames_aggregate =
        pokemon_v2_moveattributenames_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_moveattributedescriptions_aggregate,
      l$pokemon_v2_moveattributemaps_aggregate,
      l$pokemon_v2_moveattributenames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_moveattributedescriptions_aggregate =
        pokemon_v2_moveattributedescriptions_aggregate;
    final lOther$pokemon_v2_moveattributedescriptions_aggregate =
        other.pokemon_v2_moveattributedescriptions_aggregate;
    if (l$pokemon_v2_moveattributedescriptions_aggregate !=
        lOther$pokemon_v2_moveattributedescriptions_aggregate) return false;
    final l$pokemon_v2_moveattributemaps_aggregate =
        pokemon_v2_moveattributemaps_aggregate;
    final lOther$pokemon_v2_moveattributemaps_aggregate =
        other.pokemon_v2_moveattributemaps_aggregate;
    if (l$pokemon_v2_moveattributemaps_aggregate !=
        lOther$pokemon_v2_moveattributemaps_aggregate) return false;
    final l$pokemon_v2_moveattributenames_aggregate =
        pokemon_v2_moveattributenames_aggregate;
    final lOther$pokemon_v2_moveattributenames_aggregate =
        other.pokemon_v2_moveattributenames_aggregate;
    if (l$pokemon_v2_moveattributenames_aggregate !=
        lOther$pokemon_v2_moveattributenames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionAggregateOrderBy {
  InputpokemonV2MoveattributedescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MoveattributedescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2MoveattributedescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MoveattributedescriptionMaxOrderBy? max;

  final InputpokemonV2MoveattributedescriptionMinOrderBy? min;

  final InputpokemonV2MoveattributedescriptionStddevOrderBy? stddev;

  final InputpokemonV2MoveattributedescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MoveattributedescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MoveattributedescriptionSumOrderBy? sum;

  final InputpokemonV2MoveattributedescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2MoveattributedescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2MoveattributedescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionAvgOrderBy {
  InputpokemonV2MoveattributedescriptionAvgOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionBoolExp {
  InputpokemonV2MoveattributedescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.id,
      this.language_id,
      this.move_attribute_id,
      this.pokemon_v2_language,
      this.pokemon_v2_moveattribute});

  @override
  factory InputpokemonV2MoveattributedescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveattributedescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveattributedescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveattributedescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_attribute_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MoveattributeBoolExp? pokemon_v2_moveattribute;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$id,
      l$language_id,
      l$move_attribute_id,
      l$pokemon_v2_language,
      l$pokemon_v2_moveattribute
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    final lOther$pokemon_v2_moveattribute = other.pokemon_v2_moveattribute;
    if (l$pokemon_v2_moveattribute != lOther$pokemon_v2_moveattribute)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionMaxOrderBy {
  InputpokemonV2MoveattributedescriptionMaxOrderBy(
      {this.description, this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionMinOrderBy {
  InputpokemonV2MoveattributedescriptionMinOrderBy(
      {this.description, this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionOrderBy {
  InputpokemonV2MoveattributedescriptionOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.move_attribute_id,
      this.pokemon_v2_language,
      this.pokemon_v2_moveattribute});

  @override
  factory InputpokemonV2MoveattributedescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MoveattributeOrderBy? pokemon_v2_moveattribute;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    return Object.hashAll([
      l$description,
      l$id,
      l$language_id,
      l$move_attribute_id,
      l$pokemon_v2_language,
      l$pokemon_v2_moveattribute
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    final lOther$pokemon_v2_moveattribute = other.pokemon_v2_moveattribute;
    if (l$pokemon_v2_moveattribute != lOther$pokemon_v2_moveattribute)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionStddevOrderBy {
  InputpokemonV2MoveattributedescriptionStddevOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionStddevPopOrderBy {
  InputpokemonV2MoveattributedescriptionStddevPopOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionStddevSampOrderBy {
  InputpokemonV2MoveattributedescriptionStddevSampOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionSumOrderBy {
  InputpokemonV2MoveattributedescriptionSumOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionVarPopOrderBy {
  InputpokemonV2MoveattributedescriptionVarPopOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionVarSampOrderBy {
  InputpokemonV2MoveattributedescriptionVarSampOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributedescriptionVarianceOrderBy {
  InputpokemonV2MoveattributedescriptionVarianceOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributedescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributedescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributedescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributedescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapAggregateOrderBy {
  InputpokemonV2MoveattributemapAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MoveattributemapAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapAggregateOrderByFromJson(json);

  final InputpokemonV2MoveattributemapAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MoveattributemapMaxOrderBy? max;

  final InputpokemonV2MoveattributemapMinOrderBy? min;

  final InputpokemonV2MoveattributemapStddevOrderBy? stddev;

  final InputpokemonV2MoveattributemapStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MoveattributemapStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MoveattributemapSumOrderBy? sum;

  final InputpokemonV2MoveattributemapVarPopOrderBy? var_pop;

  final InputpokemonV2MoveattributemapVarSampOrderBy? var_samp;

  final InputpokemonV2MoveattributemapVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapAvgOrderBy {
  InputpokemonV2MoveattributemapAvgOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapBoolExp {
  InputpokemonV2MoveattributemapBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.move_attribute_id,
      this.move_id,
      this.pokemon_v2_move,
      this.pokemon_v2_moveattribute});

  @override
  factory InputpokemonV2MoveattributemapBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveattributemapBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveattributemapBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveattributemapBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? move_attribute_id;

  final InputIntComparisonExp? move_id;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputpokemonV2MoveattributeBoolExp? pokemon_v2_moveattribute;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$move_attribute_id,
      l$move_id,
      l$pokemon_v2_move,
      l$pokemon_v2_moveattribute
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    final lOther$pokemon_v2_moveattribute = other.pokemon_v2_moveattribute;
    if (l$pokemon_v2_moveattribute != lOther$pokemon_v2_moveattribute)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapMaxOrderBy {
  InputpokemonV2MoveattributemapMaxOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapMinOrderBy {
  InputpokemonV2MoveattributemapMinOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapOrderBy {
  InputpokemonV2MoveattributemapOrderBy(
      {this.id,
      this.move_attribute_id,
      this.move_id,
      this.pokemon_v2_move,
      this.pokemon_v2_moveattribute});

  @override
  factory InputpokemonV2MoveattributemapOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  final InputpokemonV2MoveattributeOrderBy? pokemon_v2_moveattribute;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    return Object.hashAll([
      l$id,
      l$move_attribute_id,
      l$move_id,
      l$pokemon_v2_move,
      l$pokemon_v2_moveattribute
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    final lOther$pokemon_v2_moveattribute = other.pokemon_v2_moveattribute;
    if (l$pokemon_v2_moveattribute != lOther$pokemon_v2_moveattribute)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapStddevOrderBy {
  InputpokemonV2MoveattributemapStddevOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapStddevPopOrderBy {
  InputpokemonV2MoveattributemapStddevPopOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapStddevSampOrderBy {
  InputpokemonV2MoveattributemapStddevSampOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapSumOrderBy {
  InputpokemonV2MoveattributemapSumOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapVarPopOrderBy {
  InputpokemonV2MoveattributemapVarPopOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapVarSampOrderBy {
  InputpokemonV2MoveattributemapVarSampOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributemapVarianceOrderBy {
  InputpokemonV2MoveattributemapVarianceOrderBy(
      {this.id, this.move_attribute_id, this.move_id});

  @override
  factory InputpokemonV2MoveattributemapVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributemapVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributemapVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_attribute_id = move_attribute_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$move_attribute_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributemapVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameAggregateOrderBy {
  InputpokemonV2MoveattributenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MoveattributenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameAggregateOrderByFromJson(json);

  final InputpokemonV2MoveattributenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MoveattributenameMaxOrderBy? max;

  final InputpokemonV2MoveattributenameMinOrderBy? min;

  final InputpokemonV2MoveattributenameStddevOrderBy? stddev;

  final InputpokemonV2MoveattributenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MoveattributenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MoveattributenameSumOrderBy? sum;

  final InputpokemonV2MoveattributenameVarPopOrderBy? var_pop;

  final InputpokemonV2MoveattributenameVarSampOrderBy? var_samp;

  final InputpokemonV2MoveattributenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameAvgOrderBy {
  InputpokemonV2MoveattributenameAvgOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameBoolExp {
  InputpokemonV2MoveattributenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.move_attribute_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_moveattribute});

  @override
  factory InputpokemonV2MoveattributenameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveattributenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveattributenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveattributenameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_attribute_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MoveattributeBoolExp? pokemon_v2_moveattribute;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$move_attribute_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_moveattribute
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    final lOther$pokemon_v2_moveattribute = other.pokemon_v2_moveattribute;
    if (l$pokemon_v2_moveattribute != lOther$pokemon_v2_moveattribute)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameMaxOrderBy {
  InputpokemonV2MoveattributenameMaxOrderBy(
      {this.id, this.language_id, this.move_attribute_id, this.name});

  @override
  factory InputpokemonV2MoveattributenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameMinOrderBy {
  InputpokemonV2MoveattributenameMinOrderBy(
      {this.id, this.language_id, this.move_attribute_id, this.name});

  @override
  factory InputpokemonV2MoveattributenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameOrderBy {
  InputpokemonV2MoveattributenameOrderBy(
      {this.id,
      this.language_id,
      this.move_attribute_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_moveattribute});

  @override
  factory InputpokemonV2MoveattributenameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MoveattributeOrderBy? pokemon_v2_moveattribute;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$move_attribute_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_moveattribute
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_moveattribute = pokemon_v2_moveattribute;
    final lOther$pokemon_v2_moveattribute = other.pokemon_v2_moveattribute;
    if (l$pokemon_v2_moveattribute != lOther$pokemon_v2_moveattribute)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameStddevOrderBy {
  InputpokemonV2MoveattributenameStddevOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameStddevPopOrderBy {
  InputpokemonV2MoveattributenameStddevPopOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameStddevSampOrderBy {
  InputpokemonV2MoveattributenameStddevSampOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameSumOrderBy {
  InputpokemonV2MoveattributenameSumOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameVarPopOrderBy {
  InputpokemonV2MoveattributenameVarPopOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameVarSampOrderBy {
  InputpokemonV2MoveattributenameVarSampOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveattributenameVarianceOrderBy {
  InputpokemonV2MoveattributenameVarianceOrderBy(
      {this.id, this.language_id, this.move_attribute_id});

  @override
  factory InputpokemonV2MoveattributenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveattributenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_attribute_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveattributenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_attribute_id = move_attribute_id;
    return Object.hashAll([l$id, l$language_id, l$move_attribute_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveattributenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_attribute_id = move_attribute_id;
    final lOther$move_attribute_id = other.move_attribute_id;
    if (l$move_attribute_id != lOther$move_attribute_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestyleBoolExp {
  InputpokemonV2MovebattlestyleBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_movebattlestylenames,
      this.pokemon_v2_naturebattlestylepreferences});

  @override
  factory InputpokemonV2MovebattlestyleBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestyleBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovebattlestyleBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovebattlestyleBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovebattlestyleBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2MovebattlestylenameBoolExp?
      pokemon_v2_movebattlestylenames;

  final InputpokemonV2NaturebattlestylepreferenceBoolExp?
      pokemon_v2_naturebattlestylepreferences;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestyleBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movebattlestylenames = pokemon_v2_movebattlestylenames;
    final l$pokemon_v2_naturebattlestylepreferences =
        pokemon_v2_naturebattlestylepreferences;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_movebattlestylenames,
      l$pokemon_v2_naturebattlestylepreferences
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestyleBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movebattlestylenames = pokemon_v2_movebattlestylenames;
    final lOther$pokemon_v2_movebattlestylenames =
        other.pokemon_v2_movebattlestylenames;
    if (l$pokemon_v2_movebattlestylenames !=
        lOther$pokemon_v2_movebattlestylenames) return false;
    final l$pokemon_v2_naturebattlestylepreferences =
        pokemon_v2_naturebattlestylepreferences;
    final lOther$pokemon_v2_naturebattlestylepreferences =
        other.pokemon_v2_naturebattlestylepreferences;
    if (l$pokemon_v2_naturebattlestylepreferences !=
        lOther$pokemon_v2_naturebattlestylepreferences) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestyleOrderBy {
  InputpokemonV2MovebattlestyleOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_movebattlestylenames_aggregate,
      this.pokemon_v2_naturebattlestylepreferences_aggregate});

  @override
  factory InputpokemonV2MovebattlestyleOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestyleOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2MovebattlestylenameAggregateOrderBy?
      pokemon_v2_movebattlestylenames_aggregate;

  final InputpokemonV2NaturebattlestylepreferenceAggregateOrderBy?
      pokemon_v2_naturebattlestylepreferences_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestyleOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movebattlestylenames_aggregate =
        pokemon_v2_movebattlestylenames_aggregate;
    final l$pokemon_v2_naturebattlestylepreferences_aggregate =
        pokemon_v2_naturebattlestylepreferences_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_movebattlestylenames_aggregate,
      l$pokemon_v2_naturebattlestylepreferences_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestyleOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movebattlestylenames_aggregate =
        pokemon_v2_movebattlestylenames_aggregate;
    final lOther$pokemon_v2_movebattlestylenames_aggregate =
        other.pokemon_v2_movebattlestylenames_aggregate;
    if (l$pokemon_v2_movebattlestylenames_aggregate !=
        lOther$pokemon_v2_movebattlestylenames_aggregate) return false;
    final l$pokemon_v2_naturebattlestylepreferences_aggregate =
        pokemon_v2_naturebattlestylepreferences_aggregate;
    final lOther$pokemon_v2_naturebattlestylepreferences_aggregate =
        other.pokemon_v2_naturebattlestylepreferences_aggregate;
    if (l$pokemon_v2_naturebattlestylepreferences_aggregate !=
        lOther$pokemon_v2_naturebattlestylepreferences_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameAggregateOrderBy {
  InputpokemonV2MovebattlestylenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovebattlestylenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameAggregateOrderByFromJson(json);

  final InputpokemonV2MovebattlestylenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovebattlestylenameMaxOrderBy? max;

  final InputpokemonV2MovebattlestylenameMinOrderBy? min;

  final InputpokemonV2MovebattlestylenameStddevOrderBy? stddev;

  final InputpokemonV2MovebattlestylenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovebattlestylenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovebattlestylenameSumOrderBy? sum;

  final InputpokemonV2MovebattlestylenameVarPopOrderBy? var_pop;

  final InputpokemonV2MovebattlestylenameVarSampOrderBy? var_samp;

  final InputpokemonV2MovebattlestylenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameAvgOrderBy {
  InputpokemonV2MovebattlestylenameAvgOrderBy(
      {this.id, this.language_id, this.move_battle_style_id});

  @override
  factory InputpokemonV2MovebattlestylenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    return Object.hashAll([l$id, l$language_id, l$move_battle_style_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameBoolExp {
  InputpokemonV2MovebattlestylenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.move_battle_style_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movebattlestyle});

  @override
  factory InputpokemonV2MovebattlestylenameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovebattlestylenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovebattlestylenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovebattlestylenameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_battle_style_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovebattlestyleBoolExp? pokemon_v2_movebattlestyle;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movebattlestyle = pokemon_v2_movebattlestyle;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$move_battle_style_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movebattlestyle
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movebattlestyle = pokemon_v2_movebattlestyle;
    final lOther$pokemon_v2_movebattlestyle = other.pokemon_v2_movebattlestyle;
    if (l$pokemon_v2_movebattlestyle != lOther$pokemon_v2_movebattlestyle)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameMaxOrderBy {
  InputpokemonV2MovebattlestylenameMaxOrderBy(
      {this.id, this.language_id, this.move_battle_style_id, this.name});

  @override
  factory InputpokemonV2MovebattlestylenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    final l$name = name;
    return Object.hashAll(
        [l$id, l$language_id, l$move_battle_style_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameMinOrderBy {
  InputpokemonV2MovebattlestylenameMinOrderBy(
      {this.id, this.language_id, this.move_battle_style_id, this.name});

  @override
  factory InputpokemonV2MovebattlestylenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    final l$name = name;
    return Object.hashAll(
        [l$id, l$language_id, l$move_battle_style_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameOrderBy {
  InputpokemonV2MovebattlestylenameOrderBy(
      {this.id,
      this.language_id,
      this.move_battle_style_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movebattlestyle});

  @override
  factory InputpokemonV2MovebattlestylenameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovebattlestyleOrderBy? pokemon_v2_movebattlestyle;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movebattlestyle = pokemon_v2_movebattlestyle;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$move_battle_style_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movebattlestyle
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movebattlestyle = pokemon_v2_movebattlestyle;
    final lOther$pokemon_v2_movebattlestyle = other.pokemon_v2_movebattlestyle;
    if (l$pokemon_v2_movebattlestyle != lOther$pokemon_v2_movebattlestyle)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameStddevOrderBy {
  InputpokemonV2MovebattlestylenameStddevOrderBy(
      {this.id, this.language_id, this.move_battle_style_id});

  @override
  factory InputpokemonV2MovebattlestylenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    return Object.hashAll([l$id, l$language_id, l$move_battle_style_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameStddevPopOrderBy {
  InputpokemonV2MovebattlestylenameStddevPopOrderBy(
      {this.id, this.language_id, this.move_battle_style_id});

  @override
  factory InputpokemonV2MovebattlestylenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    return Object.hashAll([l$id, l$language_id, l$move_battle_style_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameStddevSampOrderBy {
  InputpokemonV2MovebattlestylenameStddevSampOrderBy(
      {this.id, this.language_id, this.move_battle_style_id});

  @override
  factory InputpokemonV2MovebattlestylenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    return Object.hashAll([l$id, l$language_id, l$move_battle_style_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameSumOrderBy {
  InputpokemonV2MovebattlestylenameSumOrderBy(
      {this.id, this.language_id, this.move_battle_style_id});

  @override
  factory InputpokemonV2MovebattlestylenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    return Object.hashAll([l$id, l$language_id, l$move_battle_style_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameVarPopOrderBy {
  InputpokemonV2MovebattlestylenameVarPopOrderBy(
      {this.id, this.language_id, this.move_battle_style_id});

  @override
  factory InputpokemonV2MovebattlestylenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    return Object.hashAll([l$id, l$language_id, l$move_battle_style_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameVarSampOrderBy {
  InputpokemonV2MovebattlestylenameVarSampOrderBy(
      {this.id, this.language_id, this.move_battle_style_id});

  @override
  factory InputpokemonV2MovebattlestylenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    return Object.hashAll([l$id, l$language_id, l$move_battle_style_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovebattlestylenameVarianceOrderBy {
  InputpokemonV2MovebattlestylenameVarianceOrderBy(
      {this.id, this.language_id, this.move_battle_style_id});

  @override
  factory InputpokemonV2MovebattlestylenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovebattlestylenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovebattlestylenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_battle_style_id = move_battle_style_id;
    return Object.hashAll([l$id, l$language_id, l$move_battle_style_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovebattlestylenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeAggregateOrderBy {
  InputpokemonV2MovechangeAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovechangeAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeAggregateOrderByFromJson(json);

  final InputpokemonV2MovechangeAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovechangeMaxOrderBy? max;

  final InputpokemonV2MovechangeMinOrderBy? min;

  final InputpokemonV2MovechangeStddevOrderBy? stddev;

  final InputpokemonV2MovechangeStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovechangeStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovechangeSumOrderBy? sum;

  final InputpokemonV2MovechangeVarPopOrderBy? var_pop;

  final InputpokemonV2MovechangeVarSampOrderBy? var_samp;

  final InputpokemonV2MovechangeVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeAvgOrderBy {
  InputpokemonV2MovechangeAvgOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeAvgOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeBoolExp {
  InputpokemonV2MovechangeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.pokemon_v2_move,
      this.pokemon_v2_moveeffect,
      this.pokemon_v2_type,
      this.pokemon_v2_versiongroup,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovechangeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovechangeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovechangeBoolExp>? $_or;

  final InputIntComparisonExp? accuracy;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? move_effect_chance;

  final InputIntComparisonExp? move_effect_id;

  final InputIntComparisonExp? move_id;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputpokemonV2MoveeffectBoolExp? pokemon_v2_moveeffect;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? power;

  final InputIntComparisonExp? pp;

  final InputIntComparisonExp? type_id;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$pokemon_v2_move,
      l$pokemon_v2_moveeffect,
      l$pokemon_v2_type,
      l$pokemon_v2_versiongroup,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final lOther$pokemon_v2_moveeffect = other.pokemon_v2_moveeffect;
    if (l$pokemon_v2_moveeffect != lOther$pokemon_v2_moveeffect) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeMaxOrderBy {
  InputpokemonV2MovechangeMaxOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeMaxOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeMinOrderBy {
  InputpokemonV2MovechangeMinOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeMinOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeOrderBy {
  InputpokemonV2MovechangeOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.pokemon_v2_move,
      this.pokemon_v2_moveeffect,
      this.pokemon_v2_type,
      this.pokemon_v2_versiongroup,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  final InputpokemonV2MoveeffectOrderBy? pokemon_v2_moveeffect;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$pokemon_v2_move,
      l$pokemon_v2_moveeffect,
      l$pokemon_v2_type,
      l$pokemon_v2_versiongroup,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final lOther$pokemon_v2_moveeffect = other.pokemon_v2_moveeffect;
    if (l$pokemon_v2_moveeffect != lOther$pokemon_v2_moveeffect) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeStddevOrderBy {
  InputpokemonV2MovechangeStddevOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeStddevOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeStddevPopOrderBy {
  InputpokemonV2MovechangeStddevPopOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeStddevPopOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeStddevSampOrderBy {
  InputpokemonV2MovechangeStddevSampOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeStddevSampOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeSumOrderBy {
  InputpokemonV2MovechangeSumOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeSumOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeVarPopOrderBy {
  InputpokemonV2MovechangeVarPopOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeVarPopOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeVarSampOrderBy {
  InputpokemonV2MovechangeVarSampOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeVarSampOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovechangeVarianceOrderBy {
  InputpokemonV2MovechangeVarianceOrderBy(
      {this.accuracy,
      this.id,
      this.move_effect_chance,
      this.move_effect_id,
      this.move_id,
      this.power,
      this.pp,
      this.type_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MovechangeVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovechangeVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? accuracy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? power;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pp;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovechangeVarianceOrderByToJson(this);
  int get hashCode {
    final l$accuracy = accuracy;
    final l$id = id;
    final l$move_effect_chance = move_effect_chance;
    final l$move_effect_id = move_effect_id;
    final l$move_id = move_id;
    final l$power = power;
    final l$pp = pp;
    final l$type_id = type_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$accuracy,
      l$id,
      l$move_effect_chance,
      l$move_effect_id,
      l$move_id,
      l$power,
      l$pp,
      l$type_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovechangeVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$accuracy = accuracy;
    final lOther$accuracy = other.accuracy;
    if (l$accuracy != lOther$accuracy) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_chance = move_effect_chance;
    final lOther$move_effect_chance = other.move_effect_chance;
    if (l$move_effect_chance != lOther$move_effect_chance) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$power = power;
    final lOther$power = other.power;
    if (l$power != lOther$power) return false;
    final l$pp = pp;
    final lOther$pp = other.pp;
    if (l$pp != lOther$pp) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassBoolExp {
  InputpokemonV2MovedamageclassBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_movedamageclassdescriptions,
      this.pokemon_v2_movedamageclassnames,
      this.pokemon_v2_moves,
      this.pokemon_v2_stats,
      this.pokemon_v2_types});

  @override
  factory InputpokemonV2MovedamageclassBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovedamageclassBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovedamageclassBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovedamageclassBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2MovedamageclassdescriptionBoolExp?
      pokemon_v2_movedamageclassdescriptions;

  final InputpokemonV2MovedamageclassnameBoolExp?
      pokemon_v2_movedamageclassnames;

  final InputpokemonV2MoveBoolExp? pokemon_v2_moves;

  final InputpokemonV2StatBoolExp? pokemon_v2_stats;

  final InputpokemonV2TypeBoolExp? pokemon_v2_types;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movedamageclassdescriptions =
        pokemon_v2_movedamageclassdescriptions;
    final l$pokemon_v2_movedamageclassnames = pokemon_v2_movedamageclassnames;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final l$pokemon_v2_stats = pokemon_v2_stats;
    final l$pokemon_v2_types = pokemon_v2_types;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_movedamageclassdescriptions,
      l$pokemon_v2_movedamageclassnames,
      l$pokemon_v2_moves,
      l$pokemon_v2_stats,
      l$pokemon_v2_types
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movedamageclassdescriptions =
        pokemon_v2_movedamageclassdescriptions;
    final lOther$pokemon_v2_movedamageclassdescriptions =
        other.pokemon_v2_movedamageclassdescriptions;
    if (l$pokemon_v2_movedamageclassdescriptions !=
        lOther$pokemon_v2_movedamageclassdescriptions) return false;
    final l$pokemon_v2_movedamageclassnames = pokemon_v2_movedamageclassnames;
    final lOther$pokemon_v2_movedamageclassnames =
        other.pokemon_v2_movedamageclassnames;
    if (l$pokemon_v2_movedamageclassnames !=
        lOther$pokemon_v2_movedamageclassnames) return false;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final lOther$pokemon_v2_moves = other.pokemon_v2_moves;
    if (l$pokemon_v2_moves != lOther$pokemon_v2_moves) return false;
    final l$pokemon_v2_stats = pokemon_v2_stats;
    final lOther$pokemon_v2_stats = other.pokemon_v2_stats;
    if (l$pokemon_v2_stats != lOther$pokemon_v2_stats) return false;
    final l$pokemon_v2_types = pokemon_v2_types;
    final lOther$pokemon_v2_types = other.pokemon_v2_types;
    if (l$pokemon_v2_types != lOther$pokemon_v2_types) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassOrderBy {
  InputpokemonV2MovedamageclassOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_movedamageclassdescriptions_aggregate,
      this.pokemon_v2_movedamageclassnames_aggregate,
      this.pokemon_v2_moves_aggregate,
      this.pokemon_v2_stats_aggregate,
      this.pokemon_v2_types_aggregate});

  @override
  factory InputpokemonV2MovedamageclassOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2MovedamageclassdescriptionAggregateOrderBy?
      pokemon_v2_movedamageclassdescriptions_aggregate;

  final InputpokemonV2MovedamageclassnameAggregateOrderBy?
      pokemon_v2_movedamageclassnames_aggregate;

  final InputpokemonV2MoveAggregateOrderBy? pokemon_v2_moves_aggregate;

  final InputpokemonV2StatAggregateOrderBy? pokemon_v2_stats_aggregate;

  final InputpokemonV2TypeAggregateOrderBy? pokemon_v2_types_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movedamageclassdescriptions_aggregate =
        pokemon_v2_movedamageclassdescriptions_aggregate;
    final l$pokemon_v2_movedamageclassnames_aggregate =
        pokemon_v2_movedamageclassnames_aggregate;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final l$pokemon_v2_stats_aggregate = pokemon_v2_stats_aggregate;
    final l$pokemon_v2_types_aggregate = pokemon_v2_types_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_movedamageclassdescriptions_aggregate,
      l$pokemon_v2_movedamageclassnames_aggregate,
      l$pokemon_v2_moves_aggregate,
      l$pokemon_v2_stats_aggregate,
      l$pokemon_v2_types_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movedamageclassdescriptions_aggregate =
        pokemon_v2_movedamageclassdescriptions_aggregate;
    final lOther$pokemon_v2_movedamageclassdescriptions_aggregate =
        other.pokemon_v2_movedamageclassdescriptions_aggregate;
    if (l$pokemon_v2_movedamageclassdescriptions_aggregate !=
        lOther$pokemon_v2_movedamageclassdescriptions_aggregate) return false;
    final l$pokemon_v2_movedamageclassnames_aggregate =
        pokemon_v2_movedamageclassnames_aggregate;
    final lOther$pokemon_v2_movedamageclassnames_aggregate =
        other.pokemon_v2_movedamageclassnames_aggregate;
    if (l$pokemon_v2_movedamageclassnames_aggregate !=
        lOther$pokemon_v2_movedamageclassnames_aggregate) return false;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final lOther$pokemon_v2_moves_aggregate = other.pokemon_v2_moves_aggregate;
    if (l$pokemon_v2_moves_aggregate != lOther$pokemon_v2_moves_aggregate)
      return false;
    final l$pokemon_v2_stats_aggregate = pokemon_v2_stats_aggregate;
    final lOther$pokemon_v2_stats_aggregate = other.pokemon_v2_stats_aggregate;
    if (l$pokemon_v2_stats_aggregate != lOther$pokemon_v2_stats_aggregate)
      return false;
    final l$pokemon_v2_types_aggregate = pokemon_v2_types_aggregate;
    final lOther$pokemon_v2_types_aggregate = other.pokemon_v2_types_aggregate;
    if (l$pokemon_v2_types_aggregate != lOther$pokemon_v2_types_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionAggregateOrderBy {
  InputpokemonV2MovedamageclassdescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovedamageclassdescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2MovedamageclassdescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovedamageclassdescriptionMaxOrderBy? max;

  final InputpokemonV2MovedamageclassdescriptionMinOrderBy? min;

  final InputpokemonV2MovedamageclassdescriptionStddevOrderBy? stddev;

  final InputpokemonV2MovedamageclassdescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovedamageclassdescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovedamageclassdescriptionSumOrderBy? sum;

  final InputpokemonV2MovedamageclassdescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2MovedamageclassdescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2MovedamageclassdescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionAvgOrderBy {
  InputpokemonV2MovedamageclassdescriptionAvgOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionBoolExp {
  InputpokemonV2MovedamageclassdescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.id,
      this.language_id,
      this.move_damage_class_id,
      this.pokemon_v2_language,
      this.pokemon_v2_movedamageclass});

  @override
  factory InputpokemonV2MovedamageclassdescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovedamageclassdescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovedamageclassdescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovedamageclassdescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_damage_class_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovedamageclassBoolExp? pokemon_v2_movedamageclass;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$id,
      l$language_id,
      l$move_damage_class_id,
      l$pokemon_v2_language,
      l$pokemon_v2_movedamageclass
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionMaxOrderBy {
  InputpokemonV2MovedamageclassdescriptionMaxOrderBy(
      {this.description, this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionMinOrderBy {
  InputpokemonV2MovedamageclassdescriptionMinOrderBy(
      {this.description, this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionOrderBy {
  InputpokemonV2MovedamageclassdescriptionOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.move_damage_class_id,
      this.pokemon_v2_language,
      this.pokemon_v2_movedamageclass});

  @override
  factory InputpokemonV2MovedamageclassdescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovedamageclassOrderBy? pokemon_v2_movedamageclass;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    return Object.hashAll([
      l$description,
      l$id,
      l$language_id,
      l$move_damage_class_id,
      l$pokemon_v2_language,
      l$pokemon_v2_movedamageclass
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionStddevOrderBy {
  InputpokemonV2MovedamageclassdescriptionStddevOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionStddevPopOrderBy {
  InputpokemonV2MovedamageclassdescriptionStddevPopOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionStddevSampOrderBy {
  InputpokemonV2MovedamageclassdescriptionStddevSampOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionSumOrderBy {
  InputpokemonV2MovedamageclassdescriptionSumOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionVarPopOrderBy {
  InputpokemonV2MovedamageclassdescriptionVarPopOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionVarSampOrderBy {
  InputpokemonV2MovedamageclassdescriptionVarSampOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassdescriptionVarianceOrderBy {
  InputpokemonV2MovedamageclassdescriptionVarianceOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassdescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassdescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassdescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassdescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameAggregateOrderBy {
  InputpokemonV2MovedamageclassnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovedamageclassnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameAggregateOrderByFromJson(json);

  final InputpokemonV2MovedamageclassnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovedamageclassnameMaxOrderBy? max;

  final InputpokemonV2MovedamageclassnameMinOrderBy? min;

  final InputpokemonV2MovedamageclassnameStddevOrderBy? stddev;

  final InputpokemonV2MovedamageclassnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovedamageclassnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovedamageclassnameSumOrderBy? sum;

  final InputpokemonV2MovedamageclassnameVarPopOrderBy? var_pop;

  final InputpokemonV2MovedamageclassnameVarSampOrderBy? var_samp;

  final InputpokemonV2MovedamageclassnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameAvgOrderBy {
  InputpokemonV2MovedamageclassnameAvgOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameBoolExp {
  InputpokemonV2MovedamageclassnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.move_damage_class_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movedamageclass});

  @override
  factory InputpokemonV2MovedamageclassnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovedamageclassnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovedamageclassnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovedamageclassnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_damage_class_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovedamageclassBoolExp? pokemon_v2_movedamageclass;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$move_damage_class_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movedamageclass
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameMaxOrderBy {
  InputpokemonV2MovedamageclassnameMaxOrderBy(
      {this.id, this.language_id, this.move_damage_class_id, this.name});

  @override
  factory InputpokemonV2MovedamageclassnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    return Object.hashAll(
        [l$id, l$language_id, l$move_damage_class_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameMinOrderBy {
  InputpokemonV2MovedamageclassnameMinOrderBy(
      {this.id, this.language_id, this.move_damage_class_id, this.name});

  @override
  factory InputpokemonV2MovedamageclassnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    return Object.hashAll(
        [l$id, l$language_id, l$move_damage_class_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameOrderBy {
  InputpokemonV2MovedamageclassnameOrderBy(
      {this.id,
      this.language_id,
      this.move_damage_class_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movedamageclass});

  @override
  factory InputpokemonV2MovedamageclassnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovedamageclassOrderBy? pokemon_v2_movedamageclass;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$move_damage_class_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movedamageclass
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameStddevOrderBy {
  InputpokemonV2MovedamageclassnameStddevOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameStddevPopOrderBy {
  InputpokemonV2MovedamageclassnameStddevPopOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameStddevSampOrderBy {
  InputpokemonV2MovedamageclassnameStddevSampOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameSumOrderBy {
  InputpokemonV2MovedamageclassnameSumOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameVarPopOrderBy {
  InputpokemonV2MovedamageclassnameVarPopOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameVarSampOrderBy {
  InputpokemonV2MovedamageclassnameVarSampOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovedamageclassnameVarianceOrderBy {
  InputpokemonV2MovedamageclassnameVarianceOrderBy(
      {this.id, this.language_id, this.move_damage_class_id});

  @override
  factory InputpokemonV2MovedamageclassnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovedamageclassnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovedamageclassnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$id, l$language_id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovedamageclassnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectBoolExp {
  InputpokemonV2MoveeffectBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.pokemon_v2_movechanges,
      this.pokemon_v2_moveeffectchanges,
      this.pokemon_v2_moveeffecteffecttexts,
      this.pokemon_v2_moves});

  @override
  factory InputpokemonV2MoveeffectBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveeffectBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveeffectBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveeffectBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputpokemonV2MovechangeBoolExp? pokemon_v2_movechanges;

  final InputpokemonV2MoveeffectchangeBoolExp? pokemon_v2_moveeffectchanges;

  final InputpokemonV2MoveeffecteffecttextBoolExp?
      pokemon_v2_moveeffecteffecttexts;

  final InputpokemonV2MoveBoolExp? pokemon_v2_moves;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$pokemon_v2_movechanges = pokemon_v2_movechanges;
    final l$pokemon_v2_moveeffectchanges = pokemon_v2_moveeffectchanges;
    final l$pokemon_v2_moveeffecteffecttexts = pokemon_v2_moveeffecteffecttexts;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$pokemon_v2_movechanges,
      l$pokemon_v2_moveeffectchanges,
      l$pokemon_v2_moveeffecteffecttexts,
      l$pokemon_v2_moves
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_movechanges = pokemon_v2_movechanges;
    final lOther$pokemon_v2_movechanges = other.pokemon_v2_movechanges;
    if (l$pokemon_v2_movechanges != lOther$pokemon_v2_movechanges) return false;
    final l$pokemon_v2_moveeffectchanges = pokemon_v2_moveeffectchanges;
    final lOther$pokemon_v2_moveeffectchanges =
        other.pokemon_v2_moveeffectchanges;
    if (l$pokemon_v2_moveeffectchanges != lOther$pokemon_v2_moveeffectchanges)
      return false;
    final l$pokemon_v2_moveeffecteffecttexts = pokemon_v2_moveeffecteffecttexts;
    final lOther$pokemon_v2_moveeffecteffecttexts =
        other.pokemon_v2_moveeffecteffecttexts;
    if (l$pokemon_v2_moveeffecteffecttexts !=
        lOther$pokemon_v2_moveeffecteffecttexts) return false;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final lOther$pokemon_v2_moves = other.pokemon_v2_moves;
    if (l$pokemon_v2_moves != lOther$pokemon_v2_moves) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectOrderBy {
  InputpokemonV2MoveeffectOrderBy(
      {this.id,
      this.pokemon_v2_movechanges_aggregate,
      this.pokemon_v2_moveeffectchanges_aggregate,
      this.pokemon_v2_moveeffecteffecttexts_aggregate,
      this.pokemon_v2_moves_aggregate});

  @override
  factory InputpokemonV2MoveeffectOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2MovechangeAggregateOrderBy?
      pokemon_v2_movechanges_aggregate;

  final InputpokemonV2MoveeffectchangeAggregateOrderBy?
      pokemon_v2_moveeffectchanges_aggregate;

  final InputpokemonV2MoveeffecteffecttextAggregateOrderBy?
      pokemon_v2_moveeffecteffecttexts_aggregate;

  final InputpokemonV2MoveAggregateOrderBy? pokemon_v2_moves_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_v2_movechanges_aggregate = pokemon_v2_movechanges_aggregate;
    final l$pokemon_v2_moveeffectchanges_aggregate =
        pokemon_v2_moveeffectchanges_aggregate;
    final l$pokemon_v2_moveeffecteffecttexts_aggregate =
        pokemon_v2_moveeffecteffecttexts_aggregate;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    return Object.hashAll([
      l$id,
      l$pokemon_v2_movechanges_aggregate,
      l$pokemon_v2_moveeffectchanges_aggregate,
      l$pokemon_v2_moveeffecteffecttexts_aggregate,
      l$pokemon_v2_moves_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_movechanges_aggregate = pokemon_v2_movechanges_aggregate;
    final lOther$pokemon_v2_movechanges_aggregate =
        other.pokemon_v2_movechanges_aggregate;
    if (l$pokemon_v2_movechanges_aggregate !=
        lOther$pokemon_v2_movechanges_aggregate) return false;
    final l$pokemon_v2_moveeffectchanges_aggregate =
        pokemon_v2_moveeffectchanges_aggregate;
    final lOther$pokemon_v2_moveeffectchanges_aggregate =
        other.pokemon_v2_moveeffectchanges_aggregate;
    if (l$pokemon_v2_moveeffectchanges_aggregate !=
        lOther$pokemon_v2_moveeffectchanges_aggregate) return false;
    final l$pokemon_v2_moveeffecteffecttexts_aggregate =
        pokemon_v2_moveeffecteffecttexts_aggregate;
    final lOther$pokemon_v2_moveeffecteffecttexts_aggregate =
        other.pokemon_v2_moveeffecteffecttexts_aggregate;
    if (l$pokemon_v2_moveeffecteffecttexts_aggregate !=
        lOther$pokemon_v2_moveeffecteffecttexts_aggregate) return false;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final lOther$pokemon_v2_moves_aggregate = other.pokemon_v2_moves_aggregate;
    if (l$pokemon_v2_moves_aggregate != lOther$pokemon_v2_moves_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeAggregateOrderBy {
  InputpokemonV2MoveeffectchangeAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MoveeffectchangeAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeAggregateOrderByFromJson(json);

  final InputpokemonV2MoveeffectchangeAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MoveeffectchangeMaxOrderBy? max;

  final InputpokemonV2MoveeffectchangeMinOrderBy? min;

  final InputpokemonV2MoveeffectchangeStddevOrderBy? stddev;

  final InputpokemonV2MoveeffectchangeStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MoveeffectchangeStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MoveeffectchangeSumOrderBy? sum;

  final InputpokemonV2MoveeffectchangeVarPopOrderBy? var_pop;

  final InputpokemonV2MoveeffectchangeVarSampOrderBy? var_samp;

  final InputpokemonV2MoveeffectchangeVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeAvgOrderBy {
  InputpokemonV2MoveeffectchangeAvgOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeBoolExp {
  InputpokemonV2MoveeffectchangeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.move_effect_id,
      this.pokemon_v2_moveeffect,
      this.pokemon_v2_moveeffectchangeeffecttexts,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveeffectchangeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveeffectchangeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveeffectchangeBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? move_effect_id;

  final InputpokemonV2MoveeffectBoolExp? pokemon_v2_moveeffect;

  final InputpokemonV2MoveeffectchangeeffecttextBoolExp?
      pokemon_v2_moveeffectchangeeffecttexts;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final l$pokemon_v2_moveeffectchangeeffecttexts =
        pokemon_v2_moveeffectchangeeffecttexts;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$move_effect_id,
      l$pokemon_v2_moveeffect,
      l$pokemon_v2_moveeffectchangeeffecttexts,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final lOther$pokemon_v2_moveeffect = other.pokemon_v2_moveeffect;
    if (l$pokemon_v2_moveeffect != lOther$pokemon_v2_moveeffect) return false;
    final l$pokemon_v2_moveeffectchangeeffecttexts =
        pokemon_v2_moveeffectchangeeffecttexts;
    final lOther$pokemon_v2_moveeffectchangeeffecttexts =
        other.pokemon_v2_moveeffectchangeeffecttexts;
    if (l$pokemon_v2_moveeffectchangeeffecttexts !=
        lOther$pokemon_v2_moveeffectchangeeffecttexts) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeMaxOrderBy {
  InputpokemonV2MoveeffectchangeMaxOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeMinOrderBy {
  InputpokemonV2MoveeffectchangeMinOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeOrderBy {
  InputpokemonV2MoveeffectchangeOrderBy(
      {this.id,
      this.move_effect_id,
      this.pokemon_v2_moveeffect,
      this.pokemon_v2_moveeffectchangeeffecttexts_aggregate,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  final InputpokemonV2MoveeffectOrderBy? pokemon_v2_moveeffect;

  final InputpokemonV2MoveeffectchangeeffecttextAggregateOrderBy?
      pokemon_v2_moveeffectchangeeffecttexts_aggregate;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final l$pokemon_v2_moveeffectchangeeffecttexts_aggregate =
        pokemon_v2_moveeffectchangeeffecttexts_aggregate;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$move_effect_id,
      l$pokemon_v2_moveeffect,
      l$pokemon_v2_moveeffectchangeeffecttexts_aggregate,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final lOther$pokemon_v2_moveeffect = other.pokemon_v2_moveeffect;
    if (l$pokemon_v2_moveeffect != lOther$pokemon_v2_moveeffect) return false;
    final l$pokemon_v2_moveeffectchangeeffecttexts_aggregate =
        pokemon_v2_moveeffectchangeeffecttexts_aggregate;
    final lOther$pokemon_v2_moveeffectchangeeffecttexts_aggregate =
        other.pokemon_v2_moveeffectchangeeffecttexts_aggregate;
    if (l$pokemon_v2_moveeffectchangeeffecttexts_aggregate !=
        lOther$pokemon_v2_moveeffectchangeeffecttexts_aggregate) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeStddevOrderBy {
  InputpokemonV2MoveeffectchangeStddevOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeStddevPopOrderBy {
  InputpokemonV2MoveeffectchangeStddevPopOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeStddevSampOrderBy {
  InputpokemonV2MoveeffectchangeStddevSampOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeSumOrderBy {
  InputpokemonV2MoveeffectchangeSumOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeVarPopOrderBy {
  InputpokemonV2MoveeffectchangeVarPopOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeVarSampOrderBy {
  InputpokemonV2MoveeffectchangeVarSampOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeVarianceOrderBy {
  InputpokemonV2MoveeffectchangeVarianceOrderBy(
      {this.id, this.move_effect_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveeffectchangeVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_effect_id = move_effect_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_effect_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextAggregateOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextAggregateOrderByFromJson(json);

  final InputpokemonV2MoveeffectchangeeffecttextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MoveeffectchangeeffecttextMaxOrderBy? max;

  final InputpokemonV2MoveeffectchangeeffecttextMinOrderBy? min;

  final InputpokemonV2MoveeffectchangeeffecttextStddevOrderBy? stddev;

  final InputpokemonV2MoveeffectchangeeffecttextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MoveeffectchangeeffecttextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MoveeffectchangeeffecttextSumOrderBy? sum;

  final InputpokemonV2MoveeffectchangeeffecttextVarPopOrderBy? var_pop;

  final InputpokemonV2MoveeffectchangeeffecttextVarSampOrderBy? var_samp;

  final InputpokemonV2MoveeffectchangeeffecttextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextAvgOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextAvgOrderBy(
      {this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextBoolExp {
  InputpokemonV2MoveeffectchangeeffecttextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.effect,
      this.id,
      this.language_id,
      this.move_effect_change_id,
      this.pokemon_v2_language,
      this.pokemon_v2_moveeffectchange});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveeffectchangeeffecttextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveeffectchangeeffecttextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveeffectchangeeffecttextBoolExp>? $_or;

  final InputStringComparisonExp? effect;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_effect_change_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MoveeffectchangeBoolExp? pokemon_v2_moveeffectchange;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_moveeffectchange = pokemon_v2_moveeffectchange;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$effect,
      l$id,
      l$language_id,
      l$move_effect_change_id,
      l$pokemon_v2_language,
      l$pokemon_v2_moveeffectchange
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_moveeffectchange = pokemon_v2_moveeffectchange;
    final lOther$pokemon_v2_moveeffectchange =
        other.pokemon_v2_moveeffectchange;
    if (l$pokemon_v2_moveeffectchange != lOther$pokemon_v2_moveeffectchange)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextMaxOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextMaxOrderBy(
      {this.effect, this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextMaxOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll(
        [l$effect, l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextMinOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextMinOrderBy(
      {this.effect, this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextMinOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll(
        [l$effect, l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextOrderBy(
      {this.effect,
      this.id,
      this.language_id,
      this.move_effect_change_id,
      this.pokemon_v2_language,
      this.pokemon_v2_moveeffectchange});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MoveeffectchangeOrderBy? pokemon_v2_moveeffectchange;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_moveeffectchange = pokemon_v2_moveeffectchange;
    return Object.hashAll([
      l$effect,
      l$id,
      l$language_id,
      l$move_effect_change_id,
      l$pokemon_v2_language,
      l$pokemon_v2_moveeffectchange
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_moveeffectchange = pokemon_v2_moveeffectchange;
    final lOther$pokemon_v2_moveeffectchange =
        other.pokemon_v2_moveeffectchange;
    if (l$pokemon_v2_moveeffectchange != lOther$pokemon_v2_moveeffectchange)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextStddevOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextStddevOrderBy(
      {this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextStddevPopOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextStddevPopOrderBy(
      {this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextStddevSampOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextStddevSampOrderBy(
      {this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextSumOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextSumOrderBy(
      {this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextVarPopOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextVarPopOrderBy(
      {this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextVarSampOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextVarSampOrderBy(
      {this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffectchangeeffecttextVarianceOrderBy {
  InputpokemonV2MoveeffectchangeeffecttextVarianceOrderBy(
      {this.id, this.language_id, this.move_effect_change_id});

  @override
  factory InputpokemonV2MoveeffectchangeeffecttextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffectchangeeffecttextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_change_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffectchangeeffecttextVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_change_id = move_effect_change_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_change_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffectchangeeffecttextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_change_id = move_effect_change_id;
    final lOther$move_effect_change_id = other.move_effect_change_id;
    if (l$move_effect_change_id != lOther$move_effect_change_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextAggregateOrderBy {
  InputpokemonV2MoveeffecteffecttextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MoveeffecteffecttextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextAggregateOrderByFromJson(json);

  final InputpokemonV2MoveeffecteffecttextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MoveeffecteffecttextMaxOrderBy? max;

  final InputpokemonV2MoveeffecteffecttextMinOrderBy? min;

  final InputpokemonV2MoveeffecteffecttextStddevOrderBy? stddev;

  final InputpokemonV2MoveeffecteffecttextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MoveeffecteffecttextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MoveeffecteffecttextSumOrderBy? sum;

  final InputpokemonV2MoveeffecteffecttextVarPopOrderBy? var_pop;

  final InputpokemonV2MoveeffecteffecttextVarSampOrderBy? var_samp;

  final InputpokemonV2MoveeffecteffecttextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextAvgOrderBy {
  InputpokemonV2MoveeffecteffecttextAvgOrderBy(
      {this.id, this.language_id, this.move_effect_id});

  @override
  factory InputpokemonV2MoveeffecteffecttextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextBoolExp {
  InputpokemonV2MoveeffecteffecttextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.effect,
      this.id,
      this.language_id,
      this.move_effect_id,
      this.pokemon_v2_language,
      this.pokemon_v2_moveeffect,
      this.short_effect});

  @override
  factory InputpokemonV2MoveeffecteffecttextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveeffecteffecttextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveeffecteffecttextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveeffecteffecttextBoolExp>? $_or;

  final InputStringComparisonExp? effect;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_effect_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MoveeffectBoolExp? pokemon_v2_moveeffect;

  final InputStringComparisonExp? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final l$short_effect = short_effect;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$effect,
      l$id,
      l$language_id,
      l$move_effect_id,
      l$pokemon_v2_language,
      l$pokemon_v2_moveeffect,
      l$short_effect
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final lOther$pokemon_v2_moveeffect = other.pokemon_v2_moveeffect;
    if (l$pokemon_v2_moveeffect != lOther$pokemon_v2_moveeffect) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextMaxOrderBy {
  InputpokemonV2MoveeffecteffecttextMaxOrderBy(
      {this.effect,
      this.id,
      this.language_id,
      this.move_effect_id,
      this.short_effect});

  @override
  factory InputpokemonV2MoveeffecteffecttextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextMaxOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    final l$short_effect = short_effect;
    return Object.hashAll(
        [l$effect, l$id, l$language_id, l$move_effect_id, l$short_effect]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextMinOrderBy {
  InputpokemonV2MoveeffecteffecttextMinOrderBy(
      {this.effect,
      this.id,
      this.language_id,
      this.move_effect_id,
      this.short_effect});

  @override
  factory InputpokemonV2MoveeffecteffecttextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextMinOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    final l$short_effect = short_effect;
    return Object.hashAll(
        [l$effect, l$id, l$language_id, l$move_effect_id, l$short_effect]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextOrderBy {
  InputpokemonV2MoveeffecteffecttextOrderBy(
      {this.effect,
      this.id,
      this.language_id,
      this.move_effect_id,
      this.pokemon_v2_language,
      this.pokemon_v2_moveeffect,
      this.short_effect});

  @override
  factory InputpokemonV2MoveeffecteffecttextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MoveeffectOrderBy? pokemon_v2_moveeffect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? short_effect;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextOrderByToJson(this);
  int get hashCode {
    final l$effect = effect;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final l$short_effect = short_effect;
    return Object.hashAll([
      l$effect,
      l$id,
      l$language_id,
      l$move_effect_id,
      l$pokemon_v2_language,
      l$pokemon_v2_moveeffect,
      l$short_effect
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$effect = effect;
    final lOther$effect = other.effect;
    if (l$effect != lOther$effect) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_moveeffect = pokemon_v2_moveeffect;
    final lOther$pokemon_v2_moveeffect = other.pokemon_v2_moveeffect;
    if (l$pokemon_v2_moveeffect != lOther$pokemon_v2_moveeffect) return false;
    final l$short_effect = short_effect;
    final lOther$short_effect = other.short_effect;
    if (l$short_effect != lOther$short_effect) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextStddevOrderBy {
  InputpokemonV2MoveeffecteffecttextStddevOrderBy(
      {this.id, this.language_id, this.move_effect_id});

  @override
  factory InputpokemonV2MoveeffecteffecttextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextStddevPopOrderBy {
  InputpokemonV2MoveeffecteffecttextStddevPopOrderBy(
      {this.id, this.language_id, this.move_effect_id});

  @override
  factory InputpokemonV2MoveeffecteffecttextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextStddevSampOrderBy {
  InputpokemonV2MoveeffecteffecttextStddevSampOrderBy(
      {this.id, this.language_id, this.move_effect_id});

  @override
  factory InputpokemonV2MoveeffecteffecttextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextSumOrderBy {
  InputpokemonV2MoveeffecteffecttextSumOrderBy(
      {this.id, this.language_id, this.move_effect_id});

  @override
  factory InputpokemonV2MoveeffecteffecttextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextVarPopOrderBy {
  InputpokemonV2MoveeffecteffecttextVarPopOrderBy(
      {this.id, this.language_id, this.move_effect_id});

  @override
  factory InputpokemonV2MoveeffecteffecttextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextVarSampOrderBy {
  InputpokemonV2MoveeffecteffecttextVarSampOrderBy(
      {this.id, this.language_id, this.move_effect_id});

  @override
  factory InputpokemonV2MoveeffecteffecttextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveeffecteffecttextVarianceOrderBy {
  InputpokemonV2MoveeffecteffecttextVarianceOrderBy(
      {this.id, this.language_id, this.move_effect_id});

  @override
  factory InputpokemonV2MoveeffecteffecttextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveeffecteffecttextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveeffecteffecttextVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_effect_id = move_effect_id;
    return Object.hashAll([l$id, l$language_id, l$move_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveeffecteffecttextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_effect_id = move_effect_id;
    final lOther$move_effect_id = other.move_effect_id;
    if (l$move_effect_id != lOther$move_effect_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextAggregateOrderBy {
  InputpokemonV2MoveflavortextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MoveflavortextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextAggregateOrderByFromJson(json);

  final InputpokemonV2MoveflavortextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MoveflavortextMaxOrderBy? max;

  final InputpokemonV2MoveflavortextMinOrderBy? min;

  final InputpokemonV2MoveflavortextStddevOrderBy? stddev;

  final InputpokemonV2MoveflavortextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MoveflavortextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MoveflavortextSumOrderBy? sum;

  final InputpokemonV2MoveflavortextVarPopOrderBy? var_pop;

  final InputpokemonV2MoveflavortextVarSampOrderBy? var_samp;

  final InputpokemonV2MoveflavortextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextAvgOrderBy {
  InputpokemonV2MoveflavortextAvgOrderBy(
      {this.id, this.language_id, this.move_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextBoolExp {
  InputpokemonV2MoveflavortextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.flavor_text,
      this.id,
      this.language_id,
      this.move_id,
      this.pokemon_v2_language,
      this.pokemon_v2_move,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MoveflavortextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MoveflavortextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MoveflavortextBoolExp>? $_or;

  final InputStringComparisonExp? flavor_text;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$flavor_text,
      l$id,
      l$language_id,
      l$move_id,
      l$pokemon_v2_language,
      l$pokemon_v2_move,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextMaxOrderBy {
  InputpokemonV2MoveflavortextMaxOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextMaxOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$flavor_text, l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextMinOrderBy {
  InputpokemonV2MoveflavortextMinOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.move_id,
      this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextMinOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$flavor_text, l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextOrderBy {
  InputpokemonV2MoveflavortextOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.move_id,
      this.pokemon_v2_language,
      this.pokemon_v2_move,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$flavor_text,
      l$id,
      l$language_id,
      l$move_id,
      l$pokemon_v2_language,
      l$pokemon_v2_move,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextStddevOrderBy {
  InputpokemonV2MoveflavortextStddevOrderBy(
      {this.id, this.language_id, this.move_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextStddevPopOrderBy {
  InputpokemonV2MoveflavortextStddevPopOrderBy(
      {this.id, this.language_id, this.move_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextStddevSampOrderBy {
  InputpokemonV2MoveflavortextStddevSampOrderBy(
      {this.id, this.language_id, this.move_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextSumOrderBy {
  InputpokemonV2MoveflavortextSumOrderBy(
      {this.id, this.language_id, this.move_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextVarPopOrderBy {
  InputpokemonV2MoveflavortextVarPopOrderBy(
      {this.id, this.language_id, this.move_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextVarSampOrderBy {
  InputpokemonV2MoveflavortextVarSampOrderBy(
      {this.id, this.language_id, this.move_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MoveflavortextVarianceOrderBy {
  InputpokemonV2MoveflavortextVarianceOrderBy(
      {this.id, this.language_id, this.move_id, this.version_group_id});

  @override
  factory InputpokemonV2MoveflavortextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MoveflavortextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MoveflavortextVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MoveflavortextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodBoolExp {
  InputpokemonV2MovelearnmethodBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_movelearnmethoddescriptions,
      this.pokemon_v2_movelearnmethodnames,
      this.pokemon_v2_pokemonmoves,
      this.pokemon_v2_versiongroupmovelearnmethods});

  @override
  factory InputpokemonV2MovelearnmethodBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovelearnmethodBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovelearnmethodBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovelearnmethodBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2MovelearnmethoddescriptionBoolExp?
      pokemon_v2_movelearnmethoddescriptions;

  final InputpokemonV2MovelearnmethodnameBoolExp?
      pokemon_v2_movelearnmethodnames;

  final InputpokemonV2PokemonmoveBoolExp? pokemon_v2_pokemonmoves;

  final InputpokemonV2VersiongroupmovelearnmethodBoolExp?
      pokemon_v2_versiongroupmovelearnmethods;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movelearnmethoddescriptions =
        pokemon_v2_movelearnmethoddescriptions;
    final l$pokemon_v2_movelearnmethodnames = pokemon_v2_movelearnmethodnames;
    final l$pokemon_v2_pokemonmoves = pokemon_v2_pokemonmoves;
    final l$pokemon_v2_versiongroupmovelearnmethods =
        pokemon_v2_versiongroupmovelearnmethods;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_movelearnmethoddescriptions,
      l$pokemon_v2_movelearnmethodnames,
      l$pokemon_v2_pokemonmoves,
      l$pokemon_v2_versiongroupmovelearnmethods
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movelearnmethoddescriptions =
        pokemon_v2_movelearnmethoddescriptions;
    final lOther$pokemon_v2_movelearnmethoddescriptions =
        other.pokemon_v2_movelearnmethoddescriptions;
    if (l$pokemon_v2_movelearnmethoddescriptions !=
        lOther$pokemon_v2_movelearnmethoddescriptions) return false;
    final l$pokemon_v2_movelearnmethodnames = pokemon_v2_movelearnmethodnames;
    final lOther$pokemon_v2_movelearnmethodnames =
        other.pokemon_v2_movelearnmethodnames;
    if (l$pokemon_v2_movelearnmethodnames !=
        lOther$pokemon_v2_movelearnmethodnames) return false;
    final l$pokemon_v2_pokemonmoves = pokemon_v2_pokemonmoves;
    final lOther$pokemon_v2_pokemonmoves = other.pokemon_v2_pokemonmoves;
    if (l$pokemon_v2_pokemonmoves != lOther$pokemon_v2_pokemonmoves)
      return false;
    final l$pokemon_v2_versiongroupmovelearnmethods =
        pokemon_v2_versiongroupmovelearnmethods;
    final lOther$pokemon_v2_versiongroupmovelearnmethods =
        other.pokemon_v2_versiongroupmovelearnmethods;
    if (l$pokemon_v2_versiongroupmovelearnmethods !=
        lOther$pokemon_v2_versiongroupmovelearnmethods) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodOrderBy {
  InputpokemonV2MovelearnmethodOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_movelearnmethoddescriptions_aggregate,
      this.pokemon_v2_movelearnmethodnames_aggregate,
      this.pokemon_v2_pokemonmoves_aggregate,
      this.pokemon_v2_versiongroupmovelearnmethods_aggregate});

  @override
  factory InputpokemonV2MovelearnmethodOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2MovelearnmethoddescriptionAggregateOrderBy?
      pokemon_v2_movelearnmethoddescriptions_aggregate;

  final InputpokemonV2MovelearnmethodnameAggregateOrderBy?
      pokemon_v2_movelearnmethodnames_aggregate;

  final InputpokemonV2PokemonmoveAggregateOrderBy?
      pokemon_v2_pokemonmoves_aggregate;

  final InputpokemonV2VersiongroupmovelearnmethodAggregateOrderBy?
      pokemon_v2_versiongroupmovelearnmethods_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movelearnmethoddescriptions_aggregate =
        pokemon_v2_movelearnmethoddescriptions_aggregate;
    final l$pokemon_v2_movelearnmethodnames_aggregate =
        pokemon_v2_movelearnmethodnames_aggregate;
    final l$pokemon_v2_pokemonmoves_aggregate =
        pokemon_v2_pokemonmoves_aggregate;
    final l$pokemon_v2_versiongroupmovelearnmethods_aggregate =
        pokemon_v2_versiongroupmovelearnmethods_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_movelearnmethoddescriptions_aggregate,
      l$pokemon_v2_movelearnmethodnames_aggregate,
      l$pokemon_v2_pokemonmoves_aggregate,
      l$pokemon_v2_versiongroupmovelearnmethods_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movelearnmethoddescriptions_aggregate =
        pokemon_v2_movelearnmethoddescriptions_aggregate;
    final lOther$pokemon_v2_movelearnmethoddescriptions_aggregate =
        other.pokemon_v2_movelearnmethoddescriptions_aggregate;
    if (l$pokemon_v2_movelearnmethoddescriptions_aggregate !=
        lOther$pokemon_v2_movelearnmethoddescriptions_aggregate) return false;
    final l$pokemon_v2_movelearnmethodnames_aggregate =
        pokemon_v2_movelearnmethodnames_aggregate;
    final lOther$pokemon_v2_movelearnmethodnames_aggregate =
        other.pokemon_v2_movelearnmethodnames_aggregate;
    if (l$pokemon_v2_movelearnmethodnames_aggregate !=
        lOther$pokemon_v2_movelearnmethodnames_aggregate) return false;
    final l$pokemon_v2_pokemonmoves_aggregate =
        pokemon_v2_pokemonmoves_aggregate;
    final lOther$pokemon_v2_pokemonmoves_aggregate =
        other.pokemon_v2_pokemonmoves_aggregate;
    if (l$pokemon_v2_pokemonmoves_aggregate !=
        lOther$pokemon_v2_pokemonmoves_aggregate) return false;
    final l$pokemon_v2_versiongroupmovelearnmethods_aggregate =
        pokemon_v2_versiongroupmovelearnmethods_aggregate;
    final lOther$pokemon_v2_versiongroupmovelearnmethods_aggregate =
        other.pokemon_v2_versiongroupmovelearnmethods_aggregate;
    if (l$pokemon_v2_versiongroupmovelearnmethods_aggregate !=
        lOther$pokemon_v2_versiongroupmovelearnmethods_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionAggregateOrderBy {
  InputpokemonV2MovelearnmethoddescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2MovelearnmethoddescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovelearnmethoddescriptionMaxOrderBy? max;

  final InputpokemonV2MovelearnmethoddescriptionMinOrderBy? min;

  final InputpokemonV2MovelearnmethoddescriptionStddevOrderBy? stddev;

  final InputpokemonV2MovelearnmethoddescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovelearnmethoddescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovelearnmethoddescriptionSumOrderBy? sum;

  final InputpokemonV2MovelearnmethoddescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2MovelearnmethoddescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2MovelearnmethoddescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionAvgOrderBy {
  InputpokemonV2MovelearnmethoddescriptionAvgOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionBoolExp {
  InputpokemonV2MovelearnmethoddescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.id,
      this.language_id,
      this.move_learn_method_id,
      this.pokemon_v2_language,
      this.pokemon_v2_movelearnmethod});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovelearnmethoddescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovelearnmethoddescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovelearnmethoddescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_learn_method_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovelearnmethodBoolExp? pokemon_v2_movelearnmethod;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$id,
      l$language_id,
      l$move_learn_method_id,
      l$pokemon_v2_language,
      l$pokemon_v2_movelearnmethod
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final lOther$pokemon_v2_movelearnmethod = other.pokemon_v2_movelearnmethod;
    if (l$pokemon_v2_movelearnmethod != lOther$pokemon_v2_movelearnmethod)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionMaxOrderBy {
  InputpokemonV2MovelearnmethoddescriptionMaxOrderBy(
      {this.description, this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionMinOrderBy {
  InputpokemonV2MovelearnmethoddescriptionMinOrderBy(
      {this.description, this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionOrderBy {
  InputpokemonV2MovelearnmethoddescriptionOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.move_learn_method_id,
      this.pokemon_v2_language,
      this.pokemon_v2_movelearnmethod});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovelearnmethodOrderBy? pokemon_v2_movelearnmethod;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    return Object.hashAll([
      l$description,
      l$id,
      l$language_id,
      l$move_learn_method_id,
      l$pokemon_v2_language,
      l$pokemon_v2_movelearnmethod
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final lOther$pokemon_v2_movelearnmethod = other.pokemon_v2_movelearnmethod;
    if (l$pokemon_v2_movelearnmethod != lOther$pokemon_v2_movelearnmethod)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionStddevOrderBy {
  InputpokemonV2MovelearnmethoddescriptionStddevOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionStddevPopOrderBy {
  InputpokemonV2MovelearnmethoddescriptionStddevPopOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionStddevSampOrderBy {
  InputpokemonV2MovelearnmethoddescriptionStddevSampOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionSumOrderBy {
  InputpokemonV2MovelearnmethoddescriptionSumOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionVarPopOrderBy {
  InputpokemonV2MovelearnmethoddescriptionVarPopOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionVarSampOrderBy {
  InputpokemonV2MovelearnmethoddescriptionVarSampOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethoddescriptionVarianceOrderBy {
  InputpokemonV2MovelearnmethoddescriptionVarianceOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethoddescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethoddescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethoddescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethoddescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameAggregateOrderBy {
  InputpokemonV2MovelearnmethodnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovelearnmethodnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameAggregateOrderByFromJson(json);

  final InputpokemonV2MovelearnmethodnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovelearnmethodnameMaxOrderBy? max;

  final InputpokemonV2MovelearnmethodnameMinOrderBy? min;

  final InputpokemonV2MovelearnmethodnameStddevOrderBy? stddev;

  final InputpokemonV2MovelearnmethodnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovelearnmethodnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovelearnmethodnameSumOrderBy? sum;

  final InputpokemonV2MovelearnmethodnameVarPopOrderBy? var_pop;

  final InputpokemonV2MovelearnmethodnameVarSampOrderBy? var_samp;

  final InputpokemonV2MovelearnmethodnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameAvgOrderBy {
  InputpokemonV2MovelearnmethodnameAvgOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethodnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameBoolExp {
  InputpokemonV2MovelearnmethodnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.move_learn_method_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movelearnmethod});

  @override
  factory InputpokemonV2MovelearnmethodnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovelearnmethodnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovelearnmethodnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovelearnmethodnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_learn_method_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovelearnmethodBoolExp? pokemon_v2_movelearnmethod;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$move_learn_method_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movelearnmethod
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final lOther$pokemon_v2_movelearnmethod = other.pokemon_v2_movelearnmethod;
    if (l$pokemon_v2_movelearnmethod != lOther$pokemon_v2_movelearnmethod)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameMaxOrderBy {
  InputpokemonV2MovelearnmethodnameMaxOrderBy(
      {this.id, this.language_id, this.move_learn_method_id, this.name});

  @override
  factory InputpokemonV2MovelearnmethodnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$name = name;
    return Object.hashAll(
        [l$id, l$language_id, l$move_learn_method_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameMinOrderBy {
  InputpokemonV2MovelearnmethodnameMinOrderBy(
      {this.id, this.language_id, this.move_learn_method_id, this.name});

  @override
  factory InputpokemonV2MovelearnmethodnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$name = name;
    return Object.hashAll(
        [l$id, l$language_id, l$move_learn_method_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameOrderBy {
  InputpokemonV2MovelearnmethodnameOrderBy(
      {this.id,
      this.language_id,
      this.move_learn_method_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movelearnmethod});

  @override
  factory InputpokemonV2MovelearnmethodnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovelearnmethodOrderBy? pokemon_v2_movelearnmethod;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$move_learn_method_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movelearnmethod
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final lOther$pokemon_v2_movelearnmethod = other.pokemon_v2_movelearnmethod;
    if (l$pokemon_v2_movelearnmethod != lOther$pokemon_v2_movelearnmethod)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameStddevOrderBy {
  InputpokemonV2MovelearnmethodnameStddevOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethodnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameStddevPopOrderBy {
  InputpokemonV2MovelearnmethodnameStddevPopOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethodnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameStddevSampOrderBy {
  InputpokemonV2MovelearnmethodnameStddevSampOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethodnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameSumOrderBy {
  InputpokemonV2MovelearnmethodnameSumOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethodnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameVarPopOrderBy {
  InputpokemonV2MovelearnmethodnameVarPopOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethodnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameVarSampOrderBy {
  InputpokemonV2MovelearnmethodnameVarSampOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethodnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovelearnmethodnameVarianceOrderBy {
  InputpokemonV2MovelearnmethodnameVarianceOrderBy(
      {this.id, this.language_id, this.move_learn_method_id});

  @override
  factory InputpokemonV2MovelearnmethodnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovelearnmethodnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovelearnmethodnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_learn_method_id = move_learn_method_id;
    return Object.hashAll([l$id, l$language_id, l$move_learn_method_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovelearnmethodnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaAggregateOrderBy {
  InputpokemonV2MovemetaAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovemetaAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaAggregateOrderByFromJson(json);

  final InputpokemonV2MovemetaAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovemetaMaxOrderBy? max;

  final InputpokemonV2MovemetaMinOrderBy? min;

  final InputpokemonV2MovemetaStddevOrderBy? stddev;

  final InputpokemonV2MovemetaStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovemetaStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovemetaSumOrderBy? sum;

  final InputpokemonV2MovemetaVarPopOrderBy? var_pop;

  final InputpokemonV2MovemetaVarSampOrderBy? var_samp;

  final InputpokemonV2MovemetaVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaAvgOrderBy {
  InputpokemonV2MovemetaAvgOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaAvgOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaBoolExp {
  InputpokemonV2MovemetaBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.pokemon_v2_move,
      this.pokemon_v2_movemetaailment,
      this.pokemon_v2_movemetacategory,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovemetaBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovemetaBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovemetaBoolExp>? $_or;

  final InputIntComparisonExp? ailment_chance;

  final InputIntComparisonExp? crit_rate;

  final InputIntComparisonExp? drain;

  final InputIntComparisonExp? flinch_chance;

  final InputIntComparisonExp? healing;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? max_hits;

  final InputIntComparisonExp? max_turns;

  final InputIntComparisonExp? min_hits;

  final InputIntComparisonExp? min_turns;

  final InputIntComparisonExp? move_id;

  final InputIntComparisonExp? move_meta_ailment_id;

  final InputIntComparisonExp? move_meta_category_id;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputpokemonV2MovemetaailmentBoolExp? pokemon_v2_movemetaailment;

  final InputpokemonV2MovemetacategoryBoolExp? pokemon_v2_movemetacategory;

  final InputIntComparisonExp? stat_chance;

  Map<String, dynamic> toJson() => _$InputpokemonV2MovemetaBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_movemetaailment = pokemon_v2_movemetaailment;
    final l$pokemon_v2_movemetacategory = pokemon_v2_movemetacategory;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$pokemon_v2_move,
      l$pokemon_v2_movemetaailment,
      l$pokemon_v2_movemetacategory,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_movemetaailment = pokemon_v2_movemetaailment;
    final lOther$pokemon_v2_movemetaailment = other.pokemon_v2_movemetaailment;
    if (l$pokemon_v2_movemetaailment != lOther$pokemon_v2_movemetaailment)
      return false;
    final l$pokemon_v2_movemetacategory = pokemon_v2_movemetacategory;
    final lOther$pokemon_v2_movemetacategory =
        other.pokemon_v2_movemetacategory;
    if (l$pokemon_v2_movemetacategory != lOther$pokemon_v2_movemetacategory)
      return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaMaxOrderBy {
  InputpokemonV2MovemetaMaxOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaMaxOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaMinOrderBy {
  InputpokemonV2MovemetaMinOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaMinOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaOrderBy {
  InputpokemonV2MovemetaOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.pokemon_v2_move,
      this.pokemon_v2_movemetaailment,
      this.pokemon_v2_movemetacategory,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  final InputpokemonV2MovemetaailmentOrderBy? pokemon_v2_movemetaailment;

  final InputpokemonV2MovemetacategoryOrderBy? pokemon_v2_movemetacategory;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() => _$InputpokemonV2MovemetaOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_movemetaailment = pokemon_v2_movemetaailment;
    final l$pokemon_v2_movemetacategory = pokemon_v2_movemetacategory;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$pokemon_v2_move,
      l$pokemon_v2_movemetaailment,
      l$pokemon_v2_movemetacategory,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_movemetaailment = pokemon_v2_movemetaailment;
    final lOther$pokemon_v2_movemetaailment = other.pokemon_v2_movemetaailment;
    if (l$pokemon_v2_movemetaailment != lOther$pokemon_v2_movemetaailment)
      return false;
    final l$pokemon_v2_movemetacategory = pokemon_v2_movemetacategory;
    final lOther$pokemon_v2_movemetacategory =
        other.pokemon_v2_movemetacategory;
    if (l$pokemon_v2_movemetacategory != lOther$pokemon_v2_movemetacategory)
      return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaStddevOrderBy {
  InputpokemonV2MovemetaStddevOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaStddevOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaStddevPopOrderBy {
  InputpokemonV2MovemetaStddevPopOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaStddevPopOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaStddevSampOrderBy {
  InputpokemonV2MovemetaStddevSampOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaStddevSampOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaSumOrderBy {
  InputpokemonV2MovemetaSumOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaSumOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaVarPopOrderBy {
  InputpokemonV2MovemetaVarPopOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaVarPopOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaVarSampOrderBy {
  InputpokemonV2MovemetaVarSampOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaVarSampOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaVarianceOrderBy {
  InputpokemonV2MovemetaVarianceOrderBy(
      {this.ailment_chance,
      this.crit_rate,
      this.drain,
      this.flinch_chance,
      this.healing,
      this.id,
      this.max_hits,
      this.max_turns,
      this.min_hits,
      this.min_turns,
      this.move_id,
      this.move_meta_ailment_id,
      this.move_meta_category_id,
      this.stat_chance});

  @override
  factory InputpokemonV2MovemetaVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ailment_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? crit_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? drain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flinch_chance;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? healing;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_hits;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_turns;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_chance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaVarianceOrderByToJson(this);
  int get hashCode {
    final l$ailment_chance = ailment_chance;
    final l$crit_rate = crit_rate;
    final l$drain = drain;
    final l$flinch_chance = flinch_chance;
    final l$healing = healing;
    final l$id = id;
    final l$max_hits = max_hits;
    final l$max_turns = max_turns;
    final l$min_hits = min_hits;
    final l$min_turns = min_turns;
    final l$move_id = move_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$stat_chance = stat_chance;
    return Object.hashAll([
      l$ailment_chance,
      l$crit_rate,
      l$drain,
      l$flinch_chance,
      l$healing,
      l$id,
      l$max_hits,
      l$max_turns,
      l$min_hits,
      l$min_turns,
      l$move_id,
      l$move_meta_ailment_id,
      l$move_meta_category_id,
      l$stat_chance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ailment_chance = ailment_chance;
    final lOther$ailment_chance = other.ailment_chance;
    if (l$ailment_chance != lOther$ailment_chance) return false;
    final l$crit_rate = crit_rate;
    final lOther$crit_rate = other.crit_rate;
    if (l$crit_rate != lOther$crit_rate) return false;
    final l$drain = drain;
    final lOther$drain = other.drain;
    if (l$drain != lOther$drain) return false;
    final l$flinch_chance = flinch_chance;
    final lOther$flinch_chance = other.flinch_chance;
    if (l$flinch_chance != lOther$flinch_chance) return false;
    final l$healing = healing;
    final lOther$healing = other.healing;
    if (l$healing != lOther$healing) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_hits = max_hits;
    final lOther$max_hits = other.max_hits;
    if (l$max_hits != lOther$max_hits) return false;
    final l$max_turns = max_turns;
    final lOther$max_turns = other.max_turns;
    if (l$max_turns != lOther$max_turns) return false;
    final l$min_hits = min_hits;
    final lOther$min_hits = other.min_hits;
    if (l$min_hits != lOther$min_hits) return false;
    final l$min_turns = min_turns;
    final lOther$min_turns = other.min_turns;
    if (l$min_turns != lOther$min_turns) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$stat_chance = stat_chance;
    final lOther$stat_chance = other.stat_chance;
    if (l$stat_chance != lOther$stat_chance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentBoolExp {
  InputpokemonV2MovemetaailmentBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_movemeta,
      this.pokemon_v2_movemetaailmentnames});

  @override
  factory InputpokemonV2MovemetaailmentBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovemetaailmentBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovemetaailmentBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovemetaailmentBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2MovemetaBoolExp? pokemon_v2_movemeta;

  final InputpokemonV2MovemetaailmentnameBoolExp?
      pokemon_v2_movemetaailmentnames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movemeta = pokemon_v2_movemeta;
    final l$pokemon_v2_movemetaailmentnames = pokemon_v2_movemetaailmentnames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_movemeta,
      l$pokemon_v2_movemetaailmentnames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movemeta = pokemon_v2_movemeta;
    final lOther$pokemon_v2_movemeta = other.pokemon_v2_movemeta;
    if (l$pokemon_v2_movemeta != lOther$pokemon_v2_movemeta) return false;
    final l$pokemon_v2_movemetaailmentnames = pokemon_v2_movemetaailmentnames;
    final lOther$pokemon_v2_movemetaailmentnames =
        other.pokemon_v2_movemetaailmentnames;
    if (l$pokemon_v2_movemetaailmentnames !=
        lOther$pokemon_v2_movemetaailmentnames) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentOrderBy {
  InputpokemonV2MovemetaailmentOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_movemeta_aggregate,
      this.pokemon_v2_movemetaailmentnames_aggregate});

  @override
  factory InputpokemonV2MovemetaailmentOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2MovemetaAggregateOrderBy? pokemon_v2_movemeta_aggregate;

  final InputpokemonV2MovemetaailmentnameAggregateOrderBy?
      pokemon_v2_movemetaailmentnames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movemeta_aggregate = pokemon_v2_movemeta_aggregate;
    final l$pokemon_v2_movemetaailmentnames_aggregate =
        pokemon_v2_movemetaailmentnames_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_movemeta_aggregate,
      l$pokemon_v2_movemetaailmentnames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movemeta_aggregate = pokemon_v2_movemeta_aggregate;
    final lOther$pokemon_v2_movemeta_aggregate =
        other.pokemon_v2_movemeta_aggregate;
    if (l$pokemon_v2_movemeta_aggregate != lOther$pokemon_v2_movemeta_aggregate)
      return false;
    final l$pokemon_v2_movemetaailmentnames_aggregate =
        pokemon_v2_movemetaailmentnames_aggregate;
    final lOther$pokemon_v2_movemetaailmentnames_aggregate =
        other.pokemon_v2_movemetaailmentnames_aggregate;
    if (l$pokemon_v2_movemetaailmentnames_aggregate !=
        lOther$pokemon_v2_movemetaailmentnames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameAggregateOrderBy {
  InputpokemonV2MovemetaailmentnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovemetaailmentnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameAggregateOrderByFromJson(json);

  final InputpokemonV2MovemetaailmentnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovemetaailmentnameMaxOrderBy? max;

  final InputpokemonV2MovemetaailmentnameMinOrderBy? min;

  final InputpokemonV2MovemetaailmentnameStddevOrderBy? stddev;

  final InputpokemonV2MovemetaailmentnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovemetaailmentnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovemetaailmentnameSumOrderBy? sum;

  final InputpokemonV2MovemetaailmentnameVarPopOrderBy? var_pop;

  final InputpokemonV2MovemetaailmentnameVarSampOrderBy? var_samp;

  final InputpokemonV2MovemetaailmentnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameAvgOrderBy {
  InputpokemonV2MovemetaailmentnameAvgOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id});

  @override
  factory InputpokemonV2MovemetaailmentnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_ailment_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameBoolExp {
  InputpokemonV2MovemetaailmentnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.move_meta_ailment_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movemetaailment});

  @override
  factory InputpokemonV2MovemetaailmentnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovemetaailmentnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovemetaailmentnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovemetaailmentnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_meta_ailment_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovemetaailmentBoolExp? pokemon_v2_movemetaailment;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movemetaailment = pokemon_v2_movemetaailment;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$move_meta_ailment_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movemetaailment
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movemetaailment = pokemon_v2_movemetaailment;
    final lOther$pokemon_v2_movemetaailment = other.pokemon_v2_movemetaailment;
    if (l$pokemon_v2_movemetaailment != lOther$pokemon_v2_movemetaailment)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameMaxOrderBy {
  InputpokemonV2MovemetaailmentnameMaxOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id, this.name});

  @override
  factory InputpokemonV2MovemetaailmentnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$name = name;
    return Object.hashAll(
        [l$id, l$language_id, l$move_meta_ailment_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameMinOrderBy {
  InputpokemonV2MovemetaailmentnameMinOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id, this.name});

  @override
  factory InputpokemonV2MovemetaailmentnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$name = name;
    return Object.hashAll(
        [l$id, l$language_id, l$move_meta_ailment_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameOrderBy {
  InputpokemonV2MovemetaailmentnameOrderBy(
      {this.id,
      this.language_id,
      this.move_meta_ailment_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movemetaailment});

  @override
  factory InputpokemonV2MovemetaailmentnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovemetaailmentOrderBy? pokemon_v2_movemetaailment;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movemetaailment = pokemon_v2_movemetaailment;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$move_meta_ailment_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movemetaailment
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movemetaailment = pokemon_v2_movemetaailment;
    final lOther$pokemon_v2_movemetaailment = other.pokemon_v2_movemetaailment;
    if (l$pokemon_v2_movemetaailment != lOther$pokemon_v2_movemetaailment)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameStddevOrderBy {
  InputpokemonV2MovemetaailmentnameStddevOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id});

  @override
  factory InputpokemonV2MovemetaailmentnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_ailment_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameStddevPopOrderBy {
  InputpokemonV2MovemetaailmentnameStddevPopOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id});

  @override
  factory InputpokemonV2MovemetaailmentnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_ailment_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameStddevSampOrderBy {
  InputpokemonV2MovemetaailmentnameStddevSampOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id});

  @override
  factory InputpokemonV2MovemetaailmentnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_ailment_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameSumOrderBy {
  InputpokemonV2MovemetaailmentnameSumOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id});

  @override
  factory InputpokemonV2MovemetaailmentnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_ailment_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameVarPopOrderBy {
  InputpokemonV2MovemetaailmentnameVarPopOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id});

  @override
  factory InputpokemonV2MovemetaailmentnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_ailment_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameVarSampOrderBy {
  InputpokemonV2MovemetaailmentnameVarSampOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id});

  @override
  factory InputpokemonV2MovemetaailmentnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_ailment_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetaailmentnameVarianceOrderBy {
  InputpokemonV2MovemetaailmentnameVarianceOrderBy(
      {this.id, this.language_id, this.move_meta_ailment_id});

  @override
  factory InputpokemonV2MovemetaailmentnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetaailmentnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_ailment_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetaailmentnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_ailment_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetaailmentnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_ailment_id = move_meta_ailment_id;
    final lOther$move_meta_ailment_id = other.move_meta_ailment_id;
    if (l$move_meta_ailment_id != lOther$move_meta_ailment_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategoryBoolExp {
  InputpokemonV2MovemetacategoryBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_movemeta,
      this.pokemon_v2_movemetacategorydescriptions});

  @override
  factory InputpokemonV2MovemetacategoryBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategoryBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovemetacategoryBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovemetacategoryBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovemetacategoryBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2MovemetaBoolExp? pokemon_v2_movemeta;

  final InputpokemonV2MovemetacategorydescriptionBoolExp?
      pokemon_v2_movemetacategorydescriptions;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategoryBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movemeta = pokemon_v2_movemeta;
    final l$pokemon_v2_movemetacategorydescriptions =
        pokemon_v2_movemetacategorydescriptions;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_movemeta,
      l$pokemon_v2_movemetacategorydescriptions
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategoryBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movemeta = pokemon_v2_movemeta;
    final lOther$pokemon_v2_movemeta = other.pokemon_v2_movemeta;
    if (l$pokemon_v2_movemeta != lOther$pokemon_v2_movemeta) return false;
    final l$pokemon_v2_movemetacategorydescriptions =
        pokemon_v2_movemetacategorydescriptions;
    final lOther$pokemon_v2_movemetacategorydescriptions =
        other.pokemon_v2_movemetacategorydescriptions;
    if (l$pokemon_v2_movemetacategorydescriptions !=
        lOther$pokemon_v2_movemetacategorydescriptions) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategoryOrderBy {
  InputpokemonV2MovemetacategoryOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_movemeta_aggregate,
      this.pokemon_v2_movemetacategorydescriptions_aggregate});

  @override
  factory InputpokemonV2MovemetacategoryOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategoryOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2MovemetaAggregateOrderBy? pokemon_v2_movemeta_aggregate;

  final InputpokemonV2MovemetacategorydescriptionAggregateOrderBy?
      pokemon_v2_movemetacategorydescriptions_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategoryOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_movemeta_aggregate = pokemon_v2_movemeta_aggregate;
    final l$pokemon_v2_movemetacategorydescriptions_aggregate =
        pokemon_v2_movemetacategorydescriptions_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_movemeta_aggregate,
      l$pokemon_v2_movemetacategorydescriptions_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategoryOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_movemeta_aggregate = pokemon_v2_movemeta_aggregate;
    final lOther$pokemon_v2_movemeta_aggregate =
        other.pokemon_v2_movemeta_aggregate;
    if (l$pokemon_v2_movemeta_aggregate != lOther$pokemon_v2_movemeta_aggregate)
      return false;
    final l$pokemon_v2_movemetacategorydescriptions_aggregate =
        pokemon_v2_movemetacategorydescriptions_aggregate;
    final lOther$pokemon_v2_movemetacategorydescriptions_aggregate =
        other.pokemon_v2_movemetacategorydescriptions_aggregate;
    if (l$pokemon_v2_movemetacategorydescriptions_aggregate !=
        lOther$pokemon_v2_movemetacategorydescriptions_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionAggregateOrderBy {
  InputpokemonV2MovemetacategorydescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovemetacategorydescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2MovemetacategorydescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovemetacategorydescriptionMaxOrderBy? max;

  final InputpokemonV2MovemetacategorydescriptionMinOrderBy? min;

  final InputpokemonV2MovemetacategorydescriptionStddevOrderBy? stddev;

  final InputpokemonV2MovemetacategorydescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovemetacategorydescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovemetacategorydescriptionSumOrderBy? sum;

  final InputpokemonV2MovemetacategorydescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2MovemetacategorydescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2MovemetacategorydescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionAvgOrderBy {
  InputpokemonV2MovemetacategorydescriptionAvgOrderBy(
      {this.id, this.language_id, this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionBoolExp {
  InputpokemonV2MovemetacategorydescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.id,
      this.language_id,
      this.move_meta_category_id,
      this.pokemon_v2_language,
      this.pokemon_v2_movemetacategory});

  @override
  factory InputpokemonV2MovemetacategorydescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovemetacategorydescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovemetacategorydescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovemetacategorydescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_meta_category_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovemetacategoryBoolExp? pokemon_v2_movemetacategory;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movemetacategory = pokemon_v2_movemetacategory;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$id,
      l$language_id,
      l$move_meta_category_id,
      l$pokemon_v2_language,
      l$pokemon_v2_movemetacategory
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movemetacategory = pokemon_v2_movemetacategory;
    final lOther$pokemon_v2_movemetacategory =
        other.pokemon_v2_movemetacategory;
    if (l$pokemon_v2_movemetacategory != lOther$pokemon_v2_movemetacategory)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionMaxOrderBy {
  InputpokemonV2MovemetacategorydescriptionMaxOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionMinOrderBy {
  InputpokemonV2MovemetacategorydescriptionMinOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionOrderBy {
  InputpokemonV2MovemetacategorydescriptionOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.move_meta_category_id,
      this.pokemon_v2_language,
      this.pokemon_v2_movemetacategory});

  @override
  factory InputpokemonV2MovemetacategorydescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovemetacategoryOrderBy? pokemon_v2_movemetacategory;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movemetacategory = pokemon_v2_movemetacategory;
    return Object.hashAll([
      l$description,
      l$id,
      l$language_id,
      l$move_meta_category_id,
      l$pokemon_v2_language,
      l$pokemon_v2_movemetacategory
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movemetacategory = pokemon_v2_movemetacategory;
    final lOther$pokemon_v2_movemetacategory =
        other.pokemon_v2_movemetacategory;
    if (l$pokemon_v2_movemetacategory != lOther$pokemon_v2_movemetacategory)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionStddevOrderBy {
  InputpokemonV2MovemetacategorydescriptionStddevOrderBy(
      {this.id, this.language_id, this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionStddevPopOrderBy {
  InputpokemonV2MovemetacategorydescriptionStddevPopOrderBy(
      {this.id, this.language_id, this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionStddevSampOrderBy {
  InputpokemonV2MovemetacategorydescriptionStddevSampOrderBy(
      {this.id, this.language_id, this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionStddevSampOrderByFromJson(
          json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other
            is InputpokemonV2MovemetacategorydescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionSumOrderBy {
  InputpokemonV2MovemetacategorydescriptionSumOrderBy(
      {this.id, this.language_id, this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionVarPopOrderBy {
  InputpokemonV2MovemetacategorydescriptionVarPopOrderBy(
      {this.id, this.language_id, this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionVarSampOrderBy {
  InputpokemonV2MovemetacategorydescriptionVarSampOrderBy(
      {this.id, this.language_id, this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetacategorydescriptionVarianceOrderBy {
  InputpokemonV2MovemetacategorydescriptionVarianceOrderBy(
      {this.id, this.language_id, this.move_meta_category_id});

  @override
  factory InputpokemonV2MovemetacategorydescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetacategorydescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_meta_category_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetacategorydescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_meta_category_id = move_meta_category_id;
    return Object.hashAll([l$id, l$language_id, l$move_meta_category_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetacategorydescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_meta_category_id = move_meta_category_id;
    final lOther$move_meta_category_id = other.move_meta_category_id;
    if (l$move_meta_category_id != lOther$move_meta_category_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeAggregateOrderBy {
  InputpokemonV2MovemetastatchangeAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovemetastatchangeAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeAggregateOrderByFromJson(json);

  final InputpokemonV2MovemetastatchangeAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovemetastatchangeMaxOrderBy? max;

  final InputpokemonV2MovemetastatchangeMinOrderBy? min;

  final InputpokemonV2MovemetastatchangeStddevOrderBy? stddev;

  final InputpokemonV2MovemetastatchangeStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovemetastatchangeStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovemetastatchangeSumOrderBy? sum;

  final InputpokemonV2MovemetastatchangeVarPopOrderBy? var_pop;

  final InputpokemonV2MovemetastatchangeVarSampOrderBy? var_samp;

  final InputpokemonV2MovemetastatchangeVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeAvgOrderBy {
  InputpokemonV2MovemetastatchangeAvgOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeAvgOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeBoolExp {
  InputpokemonV2MovemetastatchangeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.change,
      this.id,
      this.move_id,
      this.pokemon_v2_move,
      this.pokemon_v2_stat,
      this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovemetastatchangeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovemetastatchangeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovemetastatchangeBoolExp>? $_or;

  final InputIntComparisonExp? change;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? move_id;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputpokemonV2StatBoolExp? pokemon_v2_stat;

  final InputIntComparisonExp? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final l$stat_id = stat_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$change,
      l$id,
      l$move_id,
      l$pokemon_v2_move,
      l$pokemon_v2_stat,
      l$stat_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeMaxOrderBy {
  InputpokemonV2MovemetastatchangeMaxOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeMaxOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeMinOrderBy {
  InputpokemonV2MovemetastatchangeMinOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeMinOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeOrderBy {
  InputpokemonV2MovemetastatchangeOrderBy(
      {this.change,
      this.id,
      this.move_id,
      this.pokemon_v2_move,
      this.pokemon_v2_stat,
      this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  final InputpokemonV2StatOrderBy? pokemon_v2_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final l$stat_id = stat_id;
    return Object.hashAll([
      l$change,
      l$id,
      l$move_id,
      l$pokemon_v2_move,
      l$pokemon_v2_stat,
      l$stat_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeStddevOrderBy {
  InputpokemonV2MovemetastatchangeStddevOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeStddevOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeStddevPopOrderBy {
  InputpokemonV2MovemetastatchangeStddevPopOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeStddevPopOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeStddevSampOrderBy {
  InputpokemonV2MovemetastatchangeStddevSampOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeStddevSampOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeSumOrderBy {
  InputpokemonV2MovemetastatchangeSumOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeSumOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeVarPopOrderBy {
  InputpokemonV2MovemetastatchangeVarPopOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeVarPopOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeVarSampOrderBy {
  InputpokemonV2MovemetastatchangeVarSampOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeVarSampOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovemetastatchangeVarianceOrderBy {
  InputpokemonV2MovemetastatchangeVarianceOrderBy(
      {this.change, this.id, this.move_id, this.stat_id});

  @override
  factory InputpokemonV2MovemetastatchangeVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovemetastatchangeVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovemetastatchangeVarianceOrderByToJson(this);
  int get hashCode {
    final l$change = change;
    final l$id = id;
    final l$move_id = move_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$change, l$id, l$move_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovemetastatchangeVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$change = change;
    final lOther$change = other.change;
    if (l$change != lOther$change) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameAggregateOrderBy {
  InputpokemonV2MovenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameAggregateOrderByFromJson(json);

  final InputpokemonV2MovenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovenameMaxOrderBy? max;

  final InputpokemonV2MovenameMinOrderBy? min;

  final InputpokemonV2MovenameStddevOrderBy? stddev;

  final InputpokemonV2MovenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovenameSumOrderBy? sum;

  final InputpokemonV2MovenameVarPopOrderBy? var_pop;

  final InputpokemonV2MovenameVarSampOrderBy? var_samp;

  final InputpokemonV2MovenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameAvgOrderBy {
  InputpokemonV2MovenameAvgOrderBy({this.id, this.language_id, this.move_id});

  @override
  factory InputpokemonV2MovenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$language_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameBoolExp {
  InputpokemonV2MovenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.move_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_move});

  @override
  factory InputpokemonV2MovenameBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovenameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  Map<String, dynamic> toJson() => _$InputpokemonV2MovenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_move = pokemon_v2_move;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$move_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_move
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameMaxOrderBy {
  InputpokemonV2MovenameMaxOrderBy(
      {this.id, this.language_id, this.move_id, this.name});

  @override
  factory InputpokemonV2MovenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameMinOrderBy {
  InputpokemonV2MovenameMinOrderBy(
      {this.id, this.language_id, this.move_id, this.name});

  @override
  factory InputpokemonV2MovenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$move_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameOrderBy {
  InputpokemonV2MovenameOrderBy(
      {this.id,
      this.language_id,
      this.move_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_move});

  @override
  factory InputpokemonV2MovenameOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  Map<String, dynamic> toJson() => _$InputpokemonV2MovenameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_move = pokemon_v2_move;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$move_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_move
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameStddevOrderBy {
  InputpokemonV2MovenameStddevOrderBy(
      {this.id, this.language_id, this.move_id});

  @override
  factory InputpokemonV2MovenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$language_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameStddevPopOrderBy {
  InputpokemonV2MovenameStddevPopOrderBy(
      {this.id, this.language_id, this.move_id});

  @override
  factory InputpokemonV2MovenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$language_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameStddevSampOrderBy {
  InputpokemonV2MovenameStddevSampOrderBy(
      {this.id, this.language_id, this.move_id});

  @override
  factory InputpokemonV2MovenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$language_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameSumOrderBy {
  InputpokemonV2MovenameSumOrderBy({this.id, this.language_id, this.move_id});

  @override
  factory InputpokemonV2MovenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$language_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameVarPopOrderBy {
  InputpokemonV2MovenameVarPopOrderBy(
      {this.id, this.language_id, this.move_id});

  @override
  factory InputpokemonV2MovenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$language_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameVarSampOrderBy {
  InputpokemonV2MovenameVarSampOrderBy(
      {this.id, this.language_id, this.move_id});

  @override
  factory InputpokemonV2MovenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$language_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovenameVarianceOrderBy {
  InputpokemonV2MovenameVarianceOrderBy(
      {this.id, this.language_id, this.move_id});

  @override
  factory InputpokemonV2MovenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_id = move_id;
    return Object.hashAll([l$id, l$language_id, l$move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetBoolExp {
  InputpokemonV2MovetargetBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_moves,
      this.pokemon_v2_movetargetdescriptions,
      this.pokemon_v2_movetargetnames});

  @override
  factory InputpokemonV2MovetargetBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovetargetBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovetargetBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovetargetBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2MoveBoolExp? pokemon_v2_moves;

  final InputpokemonV2MovetargetdescriptionBoolExp?
      pokemon_v2_movetargetdescriptions;

  final InputpokemonV2MovetargetnameBoolExp? pokemon_v2_movetargetnames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final l$pokemon_v2_movetargetdescriptions =
        pokemon_v2_movetargetdescriptions;
    final l$pokemon_v2_movetargetnames = pokemon_v2_movetargetnames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_moves,
      l$pokemon_v2_movetargetdescriptions,
      l$pokemon_v2_movetargetnames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final lOther$pokemon_v2_moves = other.pokemon_v2_moves;
    if (l$pokemon_v2_moves != lOther$pokemon_v2_moves) return false;
    final l$pokemon_v2_movetargetdescriptions =
        pokemon_v2_movetargetdescriptions;
    final lOther$pokemon_v2_movetargetdescriptions =
        other.pokemon_v2_movetargetdescriptions;
    if (l$pokemon_v2_movetargetdescriptions !=
        lOther$pokemon_v2_movetargetdescriptions) return false;
    final l$pokemon_v2_movetargetnames = pokemon_v2_movetargetnames;
    final lOther$pokemon_v2_movetargetnames = other.pokemon_v2_movetargetnames;
    if (l$pokemon_v2_movetargetnames != lOther$pokemon_v2_movetargetnames)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetOrderBy {
  InputpokemonV2MovetargetOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_moves_aggregate,
      this.pokemon_v2_movetargetdescriptions_aggregate,
      this.pokemon_v2_movetargetnames_aggregate});

  @override
  factory InputpokemonV2MovetargetOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2MoveAggregateOrderBy? pokemon_v2_moves_aggregate;

  final InputpokemonV2MovetargetdescriptionAggregateOrderBy?
      pokemon_v2_movetargetdescriptions_aggregate;

  final InputpokemonV2MovetargetnameAggregateOrderBy?
      pokemon_v2_movetargetnames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final l$pokemon_v2_movetargetdescriptions_aggregate =
        pokemon_v2_movetargetdescriptions_aggregate;
    final l$pokemon_v2_movetargetnames_aggregate =
        pokemon_v2_movetargetnames_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_moves_aggregate,
      l$pokemon_v2_movetargetdescriptions_aggregate,
      l$pokemon_v2_movetargetnames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final lOther$pokemon_v2_moves_aggregate = other.pokemon_v2_moves_aggregate;
    if (l$pokemon_v2_moves_aggregate != lOther$pokemon_v2_moves_aggregate)
      return false;
    final l$pokemon_v2_movetargetdescriptions_aggregate =
        pokemon_v2_movetargetdescriptions_aggregate;
    final lOther$pokemon_v2_movetargetdescriptions_aggregate =
        other.pokemon_v2_movetargetdescriptions_aggregate;
    if (l$pokemon_v2_movetargetdescriptions_aggregate !=
        lOther$pokemon_v2_movetargetdescriptions_aggregate) return false;
    final l$pokemon_v2_movetargetnames_aggregate =
        pokemon_v2_movetargetnames_aggregate;
    final lOther$pokemon_v2_movetargetnames_aggregate =
        other.pokemon_v2_movetargetnames_aggregate;
    if (l$pokemon_v2_movetargetnames_aggregate !=
        lOther$pokemon_v2_movetargetnames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionAggregateOrderBy {
  InputpokemonV2MovetargetdescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovetargetdescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2MovetargetdescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovetargetdescriptionMaxOrderBy? max;

  final InputpokemonV2MovetargetdescriptionMinOrderBy? min;

  final InputpokemonV2MovetargetdescriptionStddevOrderBy? stddev;

  final InputpokemonV2MovetargetdescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovetargetdescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovetargetdescriptionSumOrderBy? sum;

  final InputpokemonV2MovetargetdescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2MovetargetdescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2MovetargetdescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionAvgOrderBy {
  InputpokemonV2MovetargetdescriptionAvgOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionBoolExp {
  InputpokemonV2MovetargetdescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.id,
      this.language_id,
      this.move_target_id,
      this.pokemon_v2_language,
      this.pokemon_v2_movetarget});

  @override
  factory InputpokemonV2MovetargetdescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovetargetdescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovetargetdescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovetargetdescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_target_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovetargetBoolExp? pokemon_v2_movetarget;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$id,
      l$language_id,
      l$move_target_id,
      l$pokemon_v2_language,
      l$pokemon_v2_movetarget
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    final lOther$pokemon_v2_movetarget = other.pokemon_v2_movetarget;
    if (l$pokemon_v2_movetarget != lOther$pokemon_v2_movetarget) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionMaxOrderBy {
  InputpokemonV2MovetargetdescriptionMaxOrderBy(
      {this.description, this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionMinOrderBy {
  InputpokemonV2MovetargetdescriptionMinOrderBy(
      {this.description, this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionOrderBy {
  InputpokemonV2MovetargetdescriptionOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.move_target_id,
      this.pokemon_v2_language,
      this.pokemon_v2_movetarget});

  @override
  factory InputpokemonV2MovetargetdescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovetargetOrderBy? pokemon_v2_movetarget;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    return Object.hashAll([
      l$description,
      l$id,
      l$language_id,
      l$move_target_id,
      l$pokemon_v2_language,
      l$pokemon_v2_movetarget
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    final lOther$pokemon_v2_movetarget = other.pokemon_v2_movetarget;
    if (l$pokemon_v2_movetarget != lOther$pokemon_v2_movetarget) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionStddevOrderBy {
  InputpokemonV2MovetargetdescriptionStddevOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionStddevPopOrderBy {
  InputpokemonV2MovetargetdescriptionStddevPopOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionStddevSampOrderBy {
  InputpokemonV2MovetargetdescriptionStddevSampOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionSumOrderBy {
  InputpokemonV2MovetargetdescriptionSumOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionVarPopOrderBy {
  InputpokemonV2MovetargetdescriptionVarPopOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionVarSampOrderBy {
  InputpokemonV2MovetargetdescriptionVarSampOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetdescriptionVarianceOrderBy {
  InputpokemonV2MovetargetdescriptionVarianceOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetdescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetdescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetdescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetdescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameAggregateOrderBy {
  InputpokemonV2MovetargetnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2MovetargetnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameAggregateOrderByFromJson(json);

  final InputpokemonV2MovetargetnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2MovetargetnameMaxOrderBy? max;

  final InputpokemonV2MovetargetnameMinOrderBy? min;

  final InputpokemonV2MovetargetnameStddevOrderBy? stddev;

  final InputpokemonV2MovetargetnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2MovetargetnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2MovetargetnameSumOrderBy? sum;

  final InputpokemonV2MovetargetnameVarPopOrderBy? var_pop;

  final InputpokemonV2MovetargetnameVarSampOrderBy? var_samp;

  final InputpokemonV2MovetargetnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameAvgOrderBy {
  InputpokemonV2MovetargetnameAvgOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameBoolExp {
  InputpokemonV2MovetargetnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.move_target_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movetarget});

  @override
  factory InputpokemonV2MovetargetnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2MovetargetnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2MovetargetnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2MovetargetnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? move_target_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2MovetargetBoolExp? pokemon_v2_movetarget;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$move_target_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movetarget
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    final lOther$pokemon_v2_movetarget = other.pokemon_v2_movetarget;
    if (l$pokemon_v2_movetarget != lOther$pokemon_v2_movetarget) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameMaxOrderBy {
  InputpokemonV2MovetargetnameMaxOrderBy(
      {this.id, this.language_id, this.move_target_id, this.name});

  @override
  factory InputpokemonV2MovetargetnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$move_target_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameMinOrderBy {
  InputpokemonV2MovetargetnameMinOrderBy(
      {this.id, this.language_id, this.move_target_id, this.name});

  @override
  factory InputpokemonV2MovetargetnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    final l$name = name;
    return Object.hashAll([l$id, l$language_id, l$move_target_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameOrderBy {
  InputpokemonV2MovetargetnameOrderBy(
      {this.id,
      this.language_id,
      this.move_target_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_movetarget});

  @override
  factory InputpokemonV2MovetargetnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2MovetargetOrderBy? pokemon_v2_movetarget;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$move_target_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_movetarget
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_movetarget = pokemon_v2_movetarget;
    final lOther$pokemon_v2_movetarget = other.pokemon_v2_movetarget;
    if (l$pokemon_v2_movetarget != lOther$pokemon_v2_movetarget) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameStddevOrderBy {
  InputpokemonV2MovetargetnameStddevOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameStddevPopOrderBy {
  InputpokemonV2MovetargetnameStddevPopOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameStddevSampOrderBy {
  InputpokemonV2MovetargetnameStddevSampOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameSumOrderBy {
  InputpokemonV2MovetargetnameSumOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameVarPopOrderBy {
  InputpokemonV2MovetargetnameVarPopOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameVarSampOrderBy {
  InputpokemonV2MovetargetnameVarSampOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2MovetargetnameVarianceOrderBy {
  InputpokemonV2MovetargetnameVarianceOrderBy(
      {this.id, this.language_id, this.move_target_id});

  @override
  factory InputpokemonV2MovetargetnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2MovetargetnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_target_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2MovetargetnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$move_target_id = move_target_id;
    return Object.hashAll([l$id, l$language_id, l$move_target_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2MovetargetnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$move_target_id = move_target_id;
    final lOther$move_target_id = other.move_target_id;
    if (l$move_target_id != lOther$move_target_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureAggregateOrderBy {
  InputpokemonV2NatureAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2NatureAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NatureAggregateOrderByFromJson(json);

  final InputpokemonV2NatureAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2NatureMaxOrderBy? max;

  final InputpokemonV2NatureMinOrderBy? min;

  final InputpokemonV2NatureStddevOrderBy? stddev;

  final InputpokemonV2NatureStddevPopOrderBy? stddev_pop;

  final InputpokemonV2NatureStddevSampOrderBy? stddev_samp;

  final InputpokemonV2NatureSumOrderBy? sum;

  final InputpokemonV2NatureVarPopOrderBy? var_pop;

  final InputpokemonV2NatureVarSampOrderBy? var_samp;

  final InputpokemonV2NatureVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NatureAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureAvgOrderBy {
  InputpokemonV2NatureAvgOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id});

  @override
  factory InputpokemonV2NatureAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2NatureAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2NatureAvgOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureBoolExp {
  InputpokemonV2NatureBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id,
      this.name,
      this.pokemonV2BerryflavorByLikesFlavorId,
      this.pokemonV2StatByIncreasedStatId,
      this.pokemon_v2_berryflavor,
      this.pokemon_v2_naturebattlestylepreferences,
      this.pokemon_v2_naturenames,
      this.pokemon_v2_naturepokeathlonstats,
      this.pokemon_v2_stat});

  @override
  factory InputpokemonV2NatureBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2NatureBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2NatureBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2NatureBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2NatureBoolExp>? $_or;

  final InputIntComparisonExp? decreased_stat_id;

  final InputIntComparisonExp? game_index;

  final InputIntComparisonExp? hates_flavor_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? increased_stat_id;

  final InputIntComparisonExp? likes_flavor_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2BerryflavorBoolExp? pokemonV2BerryflavorByLikesFlavorId;

  final InputpokemonV2StatBoolExp? pokemonV2StatByIncreasedStatId;

  final InputpokemonV2BerryflavorBoolExp? pokemon_v2_berryflavor;

  final InputpokemonV2NaturebattlestylepreferenceBoolExp?
      pokemon_v2_naturebattlestylepreferences;

  final InputpokemonV2NaturenameBoolExp? pokemon_v2_naturenames;

  final InputpokemonV2NaturepokeathlonstatBoolExp?
      pokemon_v2_naturepokeathlonstats;

  final InputpokemonV2StatBoolExp? pokemon_v2_stat;

  Map<String, dynamic> toJson() => _$InputpokemonV2NatureBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    final l$name = name;
    final l$pokemonV2BerryflavorByLikesFlavorId =
        pokemonV2BerryflavorByLikesFlavorId;
    final l$pokemonV2StatByIncreasedStatId = pokemonV2StatByIncreasedStatId;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final l$pokemon_v2_naturebattlestylepreferences =
        pokemon_v2_naturebattlestylepreferences;
    final l$pokemon_v2_naturenames = pokemon_v2_naturenames;
    final l$pokemon_v2_naturepokeathlonstats = pokemon_v2_naturepokeathlonstats;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id,
      l$name,
      l$pokemonV2BerryflavorByLikesFlavorId,
      l$pokemonV2StatByIncreasedStatId,
      l$pokemon_v2_berryflavor,
      l$pokemon_v2_naturebattlestylepreferences,
      l$pokemon_v2_naturenames,
      l$pokemon_v2_naturepokeathlonstats,
      l$pokemon_v2_stat
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2BerryflavorByLikesFlavorId =
        pokemonV2BerryflavorByLikesFlavorId;
    final lOther$pokemonV2BerryflavorByLikesFlavorId =
        other.pokemonV2BerryflavorByLikesFlavorId;
    if (l$pokemonV2BerryflavorByLikesFlavorId !=
        lOther$pokemonV2BerryflavorByLikesFlavorId) return false;
    final l$pokemonV2StatByIncreasedStatId = pokemonV2StatByIncreasedStatId;
    final lOther$pokemonV2StatByIncreasedStatId =
        other.pokemonV2StatByIncreasedStatId;
    if (l$pokemonV2StatByIncreasedStatId !=
        lOther$pokemonV2StatByIncreasedStatId) return false;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final lOther$pokemon_v2_berryflavor = other.pokemon_v2_berryflavor;
    if (l$pokemon_v2_berryflavor != lOther$pokemon_v2_berryflavor) return false;
    final l$pokemon_v2_naturebattlestylepreferences =
        pokemon_v2_naturebattlestylepreferences;
    final lOther$pokemon_v2_naturebattlestylepreferences =
        other.pokemon_v2_naturebattlestylepreferences;
    if (l$pokemon_v2_naturebattlestylepreferences !=
        lOther$pokemon_v2_naturebattlestylepreferences) return false;
    final l$pokemon_v2_naturenames = pokemon_v2_naturenames;
    final lOther$pokemon_v2_naturenames = other.pokemon_v2_naturenames;
    if (l$pokemon_v2_naturenames != lOther$pokemon_v2_naturenames) return false;
    final l$pokemon_v2_naturepokeathlonstats = pokemon_v2_naturepokeathlonstats;
    final lOther$pokemon_v2_naturepokeathlonstats =
        other.pokemon_v2_naturepokeathlonstats;
    if (l$pokemon_v2_naturepokeathlonstats !=
        lOther$pokemon_v2_naturepokeathlonstats) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureMaxOrderBy {
  InputpokemonV2NatureMaxOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id,
      this.name});

  @override
  factory InputpokemonV2NatureMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2NatureMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() => _$InputpokemonV2NatureMaxOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    final l$name = name;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id,
      l$name
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureMinOrderBy {
  InputpokemonV2NatureMinOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id,
      this.name});

  @override
  factory InputpokemonV2NatureMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2NatureMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() => _$InputpokemonV2NatureMinOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    final l$name = name;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id,
      l$name
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureOrderBy {
  InputpokemonV2NatureOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id,
      this.name,
      this.pokemonV2BerryflavorByLikesFlavorId,
      this.pokemonV2StatByIncreasedStatId,
      this.pokemon_v2_berryflavor,
      this.pokemon_v2_naturebattlestylepreferences_aggregate,
      this.pokemon_v2_naturenames_aggregate,
      this.pokemon_v2_naturepokeathlonstats_aggregate,
      this.pokemon_v2_stat});

  @override
  factory InputpokemonV2NatureOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2NatureOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2BerryflavorOrderBy? pokemonV2BerryflavorByLikesFlavorId;

  final InputpokemonV2StatOrderBy? pokemonV2StatByIncreasedStatId;

  final InputpokemonV2BerryflavorOrderBy? pokemon_v2_berryflavor;

  final InputpokemonV2NaturebattlestylepreferenceAggregateOrderBy?
      pokemon_v2_naturebattlestylepreferences_aggregate;

  final InputpokemonV2NaturenameAggregateOrderBy?
      pokemon_v2_naturenames_aggregate;

  final InputpokemonV2NaturepokeathlonstatAggregateOrderBy?
      pokemon_v2_naturepokeathlonstats_aggregate;

  final InputpokemonV2StatOrderBy? pokemon_v2_stat;

  Map<String, dynamic> toJson() => _$InputpokemonV2NatureOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    final l$name = name;
    final l$pokemonV2BerryflavorByLikesFlavorId =
        pokemonV2BerryflavorByLikesFlavorId;
    final l$pokemonV2StatByIncreasedStatId = pokemonV2StatByIncreasedStatId;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final l$pokemon_v2_naturebattlestylepreferences_aggregate =
        pokemon_v2_naturebattlestylepreferences_aggregate;
    final l$pokemon_v2_naturenames_aggregate = pokemon_v2_naturenames_aggregate;
    final l$pokemon_v2_naturepokeathlonstats_aggregate =
        pokemon_v2_naturepokeathlonstats_aggregate;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id,
      l$name,
      l$pokemonV2BerryflavorByLikesFlavorId,
      l$pokemonV2StatByIncreasedStatId,
      l$pokemon_v2_berryflavor,
      l$pokemon_v2_naturebattlestylepreferences_aggregate,
      l$pokemon_v2_naturenames_aggregate,
      l$pokemon_v2_naturepokeathlonstats_aggregate,
      l$pokemon_v2_stat
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2BerryflavorByLikesFlavorId =
        pokemonV2BerryflavorByLikesFlavorId;
    final lOther$pokemonV2BerryflavorByLikesFlavorId =
        other.pokemonV2BerryflavorByLikesFlavorId;
    if (l$pokemonV2BerryflavorByLikesFlavorId !=
        lOther$pokemonV2BerryflavorByLikesFlavorId) return false;
    final l$pokemonV2StatByIncreasedStatId = pokemonV2StatByIncreasedStatId;
    final lOther$pokemonV2StatByIncreasedStatId =
        other.pokemonV2StatByIncreasedStatId;
    if (l$pokemonV2StatByIncreasedStatId !=
        lOther$pokemonV2StatByIncreasedStatId) return false;
    final l$pokemon_v2_berryflavor = pokemon_v2_berryflavor;
    final lOther$pokemon_v2_berryflavor = other.pokemon_v2_berryflavor;
    if (l$pokemon_v2_berryflavor != lOther$pokemon_v2_berryflavor) return false;
    final l$pokemon_v2_naturebattlestylepreferences_aggregate =
        pokemon_v2_naturebattlestylepreferences_aggregate;
    final lOther$pokemon_v2_naturebattlestylepreferences_aggregate =
        other.pokemon_v2_naturebattlestylepreferences_aggregate;
    if (l$pokemon_v2_naturebattlestylepreferences_aggregate !=
        lOther$pokemon_v2_naturebattlestylepreferences_aggregate) return false;
    final l$pokemon_v2_naturenames_aggregate = pokemon_v2_naturenames_aggregate;
    final lOther$pokemon_v2_naturenames_aggregate =
        other.pokemon_v2_naturenames_aggregate;
    if (l$pokemon_v2_naturenames_aggregate !=
        lOther$pokemon_v2_naturenames_aggregate) return false;
    final l$pokemon_v2_naturepokeathlonstats_aggregate =
        pokemon_v2_naturepokeathlonstats_aggregate;
    final lOther$pokemon_v2_naturepokeathlonstats_aggregate =
        other.pokemon_v2_naturepokeathlonstats_aggregate;
    if (l$pokemon_v2_naturepokeathlonstats_aggregate !=
        lOther$pokemon_v2_naturepokeathlonstats_aggregate) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureStddevOrderBy {
  InputpokemonV2NatureStddevOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id});

  @override
  factory InputpokemonV2NatureStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NatureStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NatureStddevOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureStddevPopOrderBy {
  InputpokemonV2NatureStddevPopOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id});

  @override
  factory InputpokemonV2NatureStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NatureStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NatureStddevPopOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureStddevSampOrderBy {
  InputpokemonV2NatureStddevSampOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id});

  @override
  factory InputpokemonV2NatureStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NatureStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NatureStddevSampOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureSumOrderBy {
  InputpokemonV2NatureSumOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id});

  @override
  factory InputpokemonV2NatureSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2NatureSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2NatureSumOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureVarPopOrderBy {
  InputpokemonV2NatureVarPopOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id});

  @override
  factory InputpokemonV2NatureVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NatureVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NatureVarPopOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureVarSampOrderBy {
  InputpokemonV2NatureVarSampOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id});

  @override
  factory InputpokemonV2NatureVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NatureVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NatureVarSampOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NatureVarianceOrderBy {
  InputpokemonV2NatureVarianceOrderBy(
      {this.decreased_stat_id,
      this.game_index,
      this.hates_flavor_id,
      this.id,
      this.increased_stat_id,
      this.likes_flavor_id});

  @override
  factory InputpokemonV2NatureVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NatureVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? decreased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hates_flavor_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? increased_stat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? likes_flavor_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NatureVarianceOrderByToJson(this);
  int get hashCode {
    final l$decreased_stat_id = decreased_stat_id;
    final l$game_index = game_index;
    final l$hates_flavor_id = hates_flavor_id;
    final l$id = id;
    final l$increased_stat_id = increased_stat_id;
    final l$likes_flavor_id = likes_flavor_id;
    return Object.hashAll([
      l$decreased_stat_id,
      l$game_index,
      l$hates_flavor_id,
      l$id,
      l$increased_stat_id,
      l$likes_flavor_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NatureVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$decreased_stat_id = decreased_stat_id;
    final lOther$decreased_stat_id = other.decreased_stat_id;
    if (l$decreased_stat_id != lOther$decreased_stat_id) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$hates_flavor_id = hates_flavor_id;
    final lOther$hates_flavor_id = other.hates_flavor_id;
    if (l$hates_flavor_id != lOther$hates_flavor_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$increased_stat_id = increased_stat_id;
    final lOther$increased_stat_id = other.increased_stat_id;
    if (l$increased_stat_id != lOther$increased_stat_id) return false;
    final l$likes_flavor_id = likes_flavor_id;
    final lOther$likes_flavor_id = other.likes_flavor_id;
    if (l$likes_flavor_id != lOther$likes_flavor_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceAggregateOrderBy {
  InputpokemonV2NaturebattlestylepreferenceAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceAggregateOrderByFromJson(json);

  final InputpokemonV2NaturebattlestylepreferenceAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2NaturebattlestylepreferenceMaxOrderBy? max;

  final InputpokemonV2NaturebattlestylepreferenceMinOrderBy? min;

  final InputpokemonV2NaturebattlestylepreferenceStddevOrderBy? stddev;

  final InputpokemonV2NaturebattlestylepreferenceStddevPopOrderBy? stddev_pop;

  final InputpokemonV2NaturebattlestylepreferenceStddevSampOrderBy? stddev_samp;

  final InputpokemonV2NaturebattlestylepreferenceSumOrderBy? sum;

  final InputpokemonV2NaturebattlestylepreferenceVarPopOrderBy? var_pop;

  final InputpokemonV2NaturebattlestylepreferenceVarSampOrderBy? var_samp;

  final InputpokemonV2NaturebattlestylepreferenceVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceAvgOrderBy {
  InputpokemonV2NaturebattlestylepreferenceAvgOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceAvgOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceBoolExp {
  InputpokemonV2NaturebattlestylepreferenceBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id,
      this.pokemon_v2_movebattlestyle,
      this.pokemon_v2_nature});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2NaturebattlestylepreferenceBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2NaturebattlestylepreferenceBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2NaturebattlestylepreferenceBoolExp>? $_or;

  final InputIntComparisonExp? high_hp_preference;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? low_hp_preference;

  final InputIntComparisonExp? move_battle_style_id;

  final InputIntComparisonExp? nature_id;

  final InputpokemonV2MovebattlestyleBoolExp? pokemon_v2_movebattlestyle;

  final InputpokemonV2NatureBoolExp? pokemon_v2_nature;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    final l$pokemon_v2_movebattlestyle = pokemon_v2_movebattlestyle;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id,
      l$pokemon_v2_movebattlestyle,
      l$pokemon_v2_nature
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokemon_v2_movebattlestyle = pokemon_v2_movebattlestyle;
    final lOther$pokemon_v2_movebattlestyle = other.pokemon_v2_movebattlestyle;
    if (l$pokemon_v2_movebattlestyle != lOther$pokemon_v2_movebattlestyle)
      return false;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    final lOther$pokemon_v2_nature = other.pokemon_v2_nature;
    if (l$pokemon_v2_nature != lOther$pokemon_v2_nature) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceMaxOrderBy {
  InputpokemonV2NaturebattlestylepreferenceMaxOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceMaxOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceMinOrderBy {
  InputpokemonV2NaturebattlestylepreferenceMinOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceMinOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceOrderBy {
  InputpokemonV2NaturebattlestylepreferenceOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id,
      this.pokemon_v2_movebattlestyle,
      this.pokemon_v2_nature});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  final InputpokemonV2MovebattlestyleOrderBy? pokemon_v2_movebattlestyle;

  final InputpokemonV2NatureOrderBy? pokemon_v2_nature;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    final l$pokemon_v2_movebattlestyle = pokemon_v2_movebattlestyle;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id,
      l$pokemon_v2_movebattlestyle,
      l$pokemon_v2_nature
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokemon_v2_movebattlestyle = pokemon_v2_movebattlestyle;
    final lOther$pokemon_v2_movebattlestyle = other.pokemon_v2_movebattlestyle;
    if (l$pokemon_v2_movebattlestyle != lOther$pokemon_v2_movebattlestyle)
      return false;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    final lOther$pokemon_v2_nature = other.pokemon_v2_nature;
    if (l$pokemon_v2_nature != lOther$pokemon_v2_nature) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceStddevOrderBy {
  InputpokemonV2NaturebattlestylepreferenceStddevOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceStddevOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceStddevPopOrderBy {
  InputpokemonV2NaturebattlestylepreferenceStddevPopOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceStddevPopOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceStddevSampOrderBy {
  InputpokemonV2NaturebattlestylepreferenceStddevSampOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceStddevSampOrderByFromJson(
          json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceStddevSampOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other
            is InputpokemonV2NaturebattlestylepreferenceStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceSumOrderBy {
  InputpokemonV2NaturebattlestylepreferenceSumOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceSumOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceVarPopOrderBy {
  InputpokemonV2NaturebattlestylepreferenceVarPopOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceVarPopOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceVarSampOrderBy {
  InputpokemonV2NaturebattlestylepreferenceVarSampOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceVarSampOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturebattlestylepreferenceVarianceOrderBy {
  InputpokemonV2NaturebattlestylepreferenceVarianceOrderBy(
      {this.high_hp_preference,
      this.id,
      this.low_hp_preference,
      this.move_battle_style_id,
      this.nature_id});

  @override
  factory InputpokemonV2NaturebattlestylepreferenceVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturebattlestylepreferenceVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? high_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? low_hp_preference;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_battle_style_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturebattlestylepreferenceVarianceOrderByToJson(this);
  int get hashCode {
    final l$high_hp_preference = high_hp_preference;
    final l$id = id;
    final l$low_hp_preference = low_hp_preference;
    final l$move_battle_style_id = move_battle_style_id;
    final l$nature_id = nature_id;
    return Object.hashAll([
      l$high_hp_preference,
      l$id,
      l$low_hp_preference,
      l$move_battle_style_id,
      l$nature_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturebattlestylepreferenceVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$high_hp_preference = high_hp_preference;
    final lOther$high_hp_preference = other.high_hp_preference;
    if (l$high_hp_preference != lOther$high_hp_preference) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$low_hp_preference = low_hp_preference;
    final lOther$low_hp_preference = other.low_hp_preference;
    if (l$low_hp_preference != lOther$low_hp_preference) return false;
    final l$move_battle_style_id = move_battle_style_id;
    final lOther$move_battle_style_id = other.move_battle_style_id;
    if (l$move_battle_style_id != lOther$move_battle_style_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameAggregateOrderBy {
  InputpokemonV2NaturenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2NaturenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameAggregateOrderByFromJson(json);

  final InputpokemonV2NaturenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2NaturenameMaxOrderBy? max;

  final InputpokemonV2NaturenameMinOrderBy? min;

  final InputpokemonV2NaturenameStddevOrderBy? stddev;

  final InputpokemonV2NaturenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2NaturenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2NaturenameSumOrderBy? sum;

  final InputpokemonV2NaturenameVarPopOrderBy? var_pop;

  final InputpokemonV2NaturenameVarSampOrderBy? var_samp;

  final InputpokemonV2NaturenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameAvgOrderBy {
  InputpokemonV2NaturenameAvgOrderBy(
      {this.id, this.language_id, this.nature_id});

  @override
  factory InputpokemonV2NaturenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameBoolExp {
  InputpokemonV2NaturenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.nature_id,
      this.pokemon_v2_language,
      this.pokemon_v2_nature});

  @override
  factory InputpokemonV2NaturenameBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2NaturenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2NaturenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2NaturenameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? nature_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2NatureBoolExp? pokemon_v2_nature;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$nature_id = nature_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$nature_id,
      l$pokemon_v2_language,
      l$pokemon_v2_nature
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    final lOther$pokemon_v2_nature = other.pokemon_v2_nature;
    if (l$pokemon_v2_nature != lOther$pokemon_v2_nature) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameMaxOrderBy {
  InputpokemonV2NaturenameMaxOrderBy(
      {this.id, this.language_id, this.name, this.nature_id});

  @override
  factory InputpokemonV2NaturenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameMinOrderBy {
  InputpokemonV2NaturenameMinOrderBy(
      {this.id, this.language_id, this.name, this.nature_id});

  @override
  factory InputpokemonV2NaturenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameOrderBy {
  InputpokemonV2NaturenameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.nature_id,
      this.pokemon_v2_language,
      this.pokemon_v2_nature});

  @override
  factory InputpokemonV2NaturenameOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2NatureOrderBy? pokemon_v2_nature;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$nature_id = nature_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$nature_id,
      l$pokemon_v2_language,
      l$pokemon_v2_nature
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    final lOther$pokemon_v2_nature = other.pokemon_v2_nature;
    if (l$pokemon_v2_nature != lOther$pokemon_v2_nature) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameStddevOrderBy {
  InputpokemonV2NaturenameStddevOrderBy(
      {this.id, this.language_id, this.nature_id});

  @override
  factory InputpokemonV2NaturenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameStddevPopOrderBy {
  InputpokemonV2NaturenameStddevPopOrderBy(
      {this.id, this.language_id, this.nature_id});

  @override
  factory InputpokemonV2NaturenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameStddevSampOrderBy {
  InputpokemonV2NaturenameStddevSampOrderBy(
      {this.id, this.language_id, this.nature_id});

  @override
  factory InputpokemonV2NaturenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameSumOrderBy {
  InputpokemonV2NaturenameSumOrderBy(
      {this.id, this.language_id, this.nature_id});

  @override
  factory InputpokemonV2NaturenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameVarPopOrderBy {
  InputpokemonV2NaturenameVarPopOrderBy(
      {this.id, this.language_id, this.nature_id});

  @override
  factory InputpokemonV2NaturenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameVarSampOrderBy {
  InputpokemonV2NaturenameVarSampOrderBy(
      {this.id, this.language_id, this.nature_id});

  @override
  factory InputpokemonV2NaturenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturenameVarianceOrderBy {
  InputpokemonV2NaturenameVarianceOrderBy(
      {this.id, this.language_id, this.nature_id});

  @override
  factory InputpokemonV2NaturenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$nature_id = nature_id;
    return Object.hashAll([l$id, l$language_id, l$nature_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatAggregateOrderBy {
  InputpokemonV2NaturepokeathlonstatAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2NaturepokeathlonstatAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatAggregateOrderByFromJson(json);

  final InputpokemonV2NaturepokeathlonstatAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2NaturepokeathlonstatMaxOrderBy? max;

  final InputpokemonV2NaturepokeathlonstatMinOrderBy? min;

  final InputpokemonV2NaturepokeathlonstatStddevOrderBy? stddev;

  final InputpokemonV2NaturepokeathlonstatStddevPopOrderBy? stddev_pop;

  final InputpokemonV2NaturepokeathlonstatStddevSampOrderBy? stddev_samp;

  final InputpokemonV2NaturepokeathlonstatSumOrderBy? sum;

  final InputpokemonV2NaturepokeathlonstatVarPopOrderBy? var_pop;

  final InputpokemonV2NaturepokeathlonstatVarSampOrderBy? var_samp;

  final InputpokemonV2NaturepokeathlonstatVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatAvgOrderBy {
  InputpokemonV2NaturepokeathlonstatAvgOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatBoolExp {
  InputpokemonV2NaturepokeathlonstatBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.max_change,
      this.nature_id,
      this.pokeathlon_stat_id,
      this.pokemon_v2_nature,
      this.pokemon_v2_pokeathlonstat});

  @override
  factory InputpokemonV2NaturepokeathlonstatBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2NaturepokeathlonstatBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2NaturepokeathlonstatBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2NaturepokeathlonstatBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? max_change;

  final InputIntComparisonExp? nature_id;

  final InputIntComparisonExp? pokeathlon_stat_id;

  final InputpokemonV2NatureBoolExp? pokemon_v2_nature;

  final InputpokemonV2PokeathlonstatBoolExp? pokemon_v2_pokeathlonstat;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    final l$pokemon_v2_pokeathlonstat = pokemon_v2_pokeathlonstat;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$max_change,
      l$nature_id,
      l$pokeathlon_stat_id,
      l$pokemon_v2_nature,
      l$pokemon_v2_pokeathlonstat
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    final lOther$pokemon_v2_nature = other.pokemon_v2_nature;
    if (l$pokemon_v2_nature != lOther$pokemon_v2_nature) return false;
    final l$pokemon_v2_pokeathlonstat = pokemon_v2_pokeathlonstat;
    final lOther$pokemon_v2_pokeathlonstat = other.pokemon_v2_pokeathlonstat;
    if (l$pokemon_v2_pokeathlonstat != lOther$pokemon_v2_pokeathlonstat)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatMaxOrderBy {
  InputpokemonV2NaturepokeathlonstatMaxOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatMinOrderBy {
  InputpokemonV2NaturepokeathlonstatMinOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatOrderBy {
  InputpokemonV2NaturepokeathlonstatOrderBy(
      {this.id,
      this.max_change,
      this.nature_id,
      this.pokeathlon_stat_id,
      this.pokemon_v2_nature,
      this.pokemon_v2_pokeathlonstat});

  @override
  factory InputpokemonV2NaturepokeathlonstatOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  final InputpokemonV2NatureOrderBy? pokemon_v2_nature;

  final InputpokemonV2PokeathlonstatOrderBy? pokemon_v2_pokeathlonstat;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    final l$pokemon_v2_pokeathlonstat = pokemon_v2_pokeathlonstat;
    return Object.hashAll([
      l$id,
      l$max_change,
      l$nature_id,
      l$pokeathlon_stat_id,
      l$pokemon_v2_nature,
      l$pokemon_v2_pokeathlonstat
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    final l$pokemon_v2_nature = pokemon_v2_nature;
    final lOther$pokemon_v2_nature = other.pokemon_v2_nature;
    if (l$pokemon_v2_nature != lOther$pokemon_v2_nature) return false;
    final l$pokemon_v2_pokeathlonstat = pokemon_v2_pokeathlonstat;
    final lOther$pokemon_v2_pokeathlonstat = other.pokemon_v2_pokeathlonstat;
    if (l$pokemon_v2_pokeathlonstat != lOther$pokemon_v2_pokeathlonstat)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatStddevOrderBy {
  InputpokemonV2NaturepokeathlonstatStddevOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatStddevPopOrderBy {
  InputpokemonV2NaturepokeathlonstatStddevPopOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatStddevSampOrderBy {
  InputpokemonV2NaturepokeathlonstatStddevSampOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatSumOrderBy {
  InputpokemonV2NaturepokeathlonstatSumOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatVarPopOrderBy {
  InputpokemonV2NaturepokeathlonstatVarPopOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatVarSampOrderBy {
  InputpokemonV2NaturepokeathlonstatVarSampOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2NaturepokeathlonstatVarianceOrderBy {
  InputpokemonV2NaturepokeathlonstatVarianceOrderBy(
      {this.id, this.max_change, this.nature_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2NaturepokeathlonstatVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2NaturepokeathlonstatVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? max_change;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? nature_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2NaturepokeathlonstatVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$max_change = max_change;
    final l$nature_id = nature_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll(
        [l$id, l$max_change, l$nature_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2NaturepokeathlonstatVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$max_change = max_change;
    final lOther$max_change = other.max_change;
    if (l$max_change != lOther$max_change) return false;
    final l$nature_id = nature_id;
    final lOther$nature_id = other.nature_id;
    if (l$nature_id != lOther$nature_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkAggregateOrderBy {
  InputpokemonV2PalparkAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PalparkAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkAggregateOrderByFromJson(json);

  final InputpokemonV2PalparkAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PalparkMaxOrderBy? max;

  final InputpokemonV2PalparkMinOrderBy? min;

  final InputpokemonV2PalparkStddevOrderBy? stddev;

  final InputpokemonV2PalparkStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PalparkStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PalparkSumOrderBy? sum;

  final InputpokemonV2PalparkVarPopOrderBy? var_pop;

  final InputpokemonV2PalparkVarSampOrderBy? var_samp;

  final InputpokemonV2PalparkVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkAvgOrderBy {
  InputpokemonV2PalparkAvgOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkAvgOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkBoolExp {
  InputpokemonV2PalparkBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.pokemon_v2_palparkarea,
      this.pokemon_v2_pokemonspecy,
      this.rate});

  @override
  factory InputpokemonV2PalparkBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PalparkBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PalparkBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PalparkBoolExp>? $_or;

  final InputIntComparisonExp? base_score;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pal_park_area_id;

  final InputIntComparisonExp? pokemon_species_id;

  final InputpokemonV2PalparkareaBoolExp? pokemon_v2_palparkarea;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  final InputIntComparisonExp? rate;

  Map<String, dynamic> toJson() => _$InputpokemonV2PalparkBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_palparkarea = pokemon_v2_palparkarea;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final l$rate = rate;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$base_score,
      l$id,
      l$pal_park_area_id,
      l$pokemon_species_id,
      l$pokemon_v2_palparkarea,
      l$pokemon_v2_pokemonspecy,
      l$rate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_palparkarea = pokemon_v2_palparkarea;
    final lOther$pokemon_v2_palparkarea = other.pokemon_v2_palparkarea;
    if (l$pokemon_v2_palparkarea != lOther$pokemon_v2_palparkarea) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkMaxOrderBy {
  InputpokemonV2PalparkMaxOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkMaxOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkMinOrderBy {
  InputpokemonV2PalparkMinOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkMinOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkOrderBy {
  InputpokemonV2PalparkOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.pokemon_v2_palparkarea,
      this.pokemon_v2_pokemonspecy,
      this.rate});

  @override
  factory InputpokemonV2PalparkOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  final InputpokemonV2PalparkareaOrderBy? pokemon_v2_palparkarea;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() => _$InputpokemonV2PalparkOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_palparkarea = pokemon_v2_palparkarea;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final l$rate = rate;
    return Object.hashAll([
      l$base_score,
      l$id,
      l$pal_park_area_id,
      l$pokemon_species_id,
      l$pokemon_v2_palparkarea,
      l$pokemon_v2_pokemonspecy,
      l$rate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_palparkarea = pokemon_v2_palparkarea;
    final lOther$pokemon_v2_palparkarea = other.pokemon_v2_palparkarea;
    if (l$pokemon_v2_palparkarea != lOther$pokemon_v2_palparkarea) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkStddevOrderBy {
  InputpokemonV2PalparkStddevOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkStddevOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkStddevPopOrderBy {
  InputpokemonV2PalparkStddevPopOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkStddevPopOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkStddevSampOrderBy {
  InputpokemonV2PalparkStddevSampOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkStddevSampOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkSumOrderBy {
  InputpokemonV2PalparkSumOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkSumOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkVarPopOrderBy {
  InputpokemonV2PalparkVarPopOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkVarPopOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkVarSampOrderBy {
  InputpokemonV2PalparkVarSampOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkVarSampOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkVarianceOrderBy {
  InputpokemonV2PalparkVarianceOrderBy(
      {this.base_score,
      this.id,
      this.pal_park_area_id,
      this.pokemon_species_id,
      this.rate});

  @override
  factory InputpokemonV2PalparkVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_score;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkVarianceOrderByToJson(this);
  int get hashCode {
    final l$base_score = base_score;
    final l$id = id;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$rate = rate;
    return Object.hashAll(
        [l$base_score, l$id, l$pal_park_area_id, l$pokemon_species_id, l$rate]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_score = base_score;
    final lOther$base_score = other.base_score;
    if (l$base_score != lOther$base_score) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$rate = rate;
    final lOther$rate = other.rate;
    if (l$rate != lOther$rate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareaBoolExp {
  InputpokemonV2PalparkareaBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_palparkareanames,
      this.pokemon_v2_palparks});

  @override
  factory InputpokemonV2PalparkareaBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareaBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PalparkareaBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PalparkareaBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PalparkareaBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2PalparkareanameBoolExp? pokemon_v2_palparkareanames;

  final InputpokemonV2PalparkBoolExp? pokemon_v2_palparks;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareaBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_palparkareanames = pokemon_v2_palparkareanames;
    final l$pokemon_v2_palparks = pokemon_v2_palparks;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_palparkareanames,
      l$pokemon_v2_palparks
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareaBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_palparkareanames = pokemon_v2_palparkareanames;
    final lOther$pokemon_v2_palparkareanames =
        other.pokemon_v2_palparkareanames;
    if (l$pokemon_v2_palparkareanames != lOther$pokemon_v2_palparkareanames)
      return false;
    final l$pokemon_v2_palparks = pokemon_v2_palparks;
    final lOther$pokemon_v2_palparks = other.pokemon_v2_palparks;
    if (l$pokemon_v2_palparks != lOther$pokemon_v2_palparks) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareaOrderBy {
  InputpokemonV2PalparkareaOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_palparkareanames_aggregate,
      this.pokemon_v2_palparks_aggregate});

  @override
  factory InputpokemonV2PalparkareaOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareaOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2PalparkareanameAggregateOrderBy?
      pokemon_v2_palparkareanames_aggregate;

  final InputpokemonV2PalparkAggregateOrderBy? pokemon_v2_palparks_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareaOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_palparkareanames_aggregate =
        pokemon_v2_palparkareanames_aggregate;
    final l$pokemon_v2_palparks_aggregate = pokemon_v2_palparks_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_palparkareanames_aggregate,
      l$pokemon_v2_palparks_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareaOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_palparkareanames_aggregate =
        pokemon_v2_palparkareanames_aggregate;
    final lOther$pokemon_v2_palparkareanames_aggregate =
        other.pokemon_v2_palparkareanames_aggregate;
    if (l$pokemon_v2_palparkareanames_aggregate !=
        lOther$pokemon_v2_palparkareanames_aggregate) return false;
    final l$pokemon_v2_palparks_aggregate = pokemon_v2_palparks_aggregate;
    final lOther$pokemon_v2_palparks_aggregate =
        other.pokemon_v2_palparks_aggregate;
    if (l$pokemon_v2_palparks_aggregate != lOther$pokemon_v2_palparks_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameAggregateOrderBy {
  InputpokemonV2PalparkareanameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PalparkareanameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameAggregateOrderByFromJson(json);

  final InputpokemonV2PalparkareanameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PalparkareanameMaxOrderBy? max;

  final InputpokemonV2PalparkareanameMinOrderBy? min;

  final InputpokemonV2PalparkareanameStddevOrderBy? stddev;

  final InputpokemonV2PalparkareanameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PalparkareanameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PalparkareanameSumOrderBy? sum;

  final InputpokemonV2PalparkareanameVarPopOrderBy? var_pop;

  final InputpokemonV2PalparkareanameVarSampOrderBy? var_samp;

  final InputpokemonV2PalparkareanameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameAvgOrderBy {
  InputpokemonV2PalparkareanameAvgOrderBy(
      {this.id, this.language_id, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameBoolExp {
  InputpokemonV2PalparkareanameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pal_park_area_id,
      this.pokemon_v2_language,
      this.pokemon_v2_palparkarea});

  @override
  factory InputpokemonV2PalparkareanameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PalparkareanameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PalparkareanameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PalparkareanameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? pal_park_area_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PalparkareaBoolExp? pokemon_v2_palparkarea;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_palparkarea = pokemon_v2_palparkarea;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pal_park_area_id,
      l$pokemon_v2_language,
      l$pokemon_v2_palparkarea
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_palparkarea = pokemon_v2_palparkarea;
    final lOther$pokemon_v2_palparkarea = other.pokemon_v2_palparkarea;
    if (l$pokemon_v2_palparkarea != lOther$pokemon_v2_palparkarea) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameMaxOrderBy {
  InputpokemonV2PalparkareanameMaxOrderBy(
      {this.id, this.language_id, this.name, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameMinOrderBy {
  InputpokemonV2PalparkareanameMinOrderBy(
      {this.id, this.language_id, this.name, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameOrderBy {
  InputpokemonV2PalparkareanameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pal_park_area_id,
      this.pokemon_v2_language,
      this.pokemon_v2_palparkarea});

  @override
  factory InputpokemonV2PalparkareanameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PalparkareaOrderBy? pokemon_v2_palparkarea;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pal_park_area_id = pal_park_area_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_palparkarea = pokemon_v2_palparkarea;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pal_park_area_id,
      l$pokemon_v2_language,
      l$pokemon_v2_palparkarea
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_palparkarea = pokemon_v2_palparkarea;
    final lOther$pokemon_v2_palparkarea = other.pokemon_v2_palparkarea;
    if (l$pokemon_v2_palparkarea != lOther$pokemon_v2_palparkarea) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameStddevOrderBy {
  InputpokemonV2PalparkareanameStddevOrderBy(
      {this.id, this.language_id, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameStddevPopOrderBy {
  InputpokemonV2PalparkareanameStddevPopOrderBy(
      {this.id, this.language_id, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameStddevSampOrderBy {
  InputpokemonV2PalparkareanameStddevSampOrderBy(
      {this.id, this.language_id, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameSumOrderBy {
  InputpokemonV2PalparkareanameSumOrderBy(
      {this.id, this.language_id, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameVarPopOrderBy {
  InputpokemonV2PalparkareanameVarPopOrderBy(
      {this.id, this.language_id, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameVarSampOrderBy {
  InputpokemonV2PalparkareanameVarSampOrderBy(
      {this.id, this.language_id, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PalparkareanameVarianceOrderBy {
  InputpokemonV2PalparkareanameVarianceOrderBy(
      {this.id, this.language_id, this.pal_park_area_id});

  @override
  factory InputpokemonV2PalparkareanameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PalparkareanameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pal_park_area_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PalparkareanameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pal_park_area_id = pal_park_area_id;
    return Object.hashAll([l$id, l$language_id, l$pal_park_area_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PalparkareanameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pal_park_area_id = pal_park_area_id;
    final lOther$pal_park_area_id = other.pal_park_area_id;
    if (l$pal_park_area_id != lOther$pal_park_area_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatBoolExp {
  InputpokemonV2PokeathlonstatBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_naturepokeathlonstats,
      this.pokemon_v2_pokeathlonstatnames});

  @override
  factory InputpokemonV2PokeathlonstatBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokeathlonstatBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokeathlonstatBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokeathlonstatBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2NaturepokeathlonstatBoolExp?
      pokemon_v2_naturepokeathlonstats;

  final InputpokemonV2PokeathlonstatnameBoolExp? pokemon_v2_pokeathlonstatnames;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_naturepokeathlonstats = pokemon_v2_naturepokeathlonstats;
    final l$pokemon_v2_pokeathlonstatnames = pokemon_v2_pokeathlonstatnames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_naturepokeathlonstats,
      l$pokemon_v2_pokeathlonstatnames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_naturepokeathlonstats = pokemon_v2_naturepokeathlonstats;
    final lOther$pokemon_v2_naturepokeathlonstats =
        other.pokemon_v2_naturepokeathlonstats;
    if (l$pokemon_v2_naturepokeathlonstats !=
        lOther$pokemon_v2_naturepokeathlonstats) return false;
    final l$pokemon_v2_pokeathlonstatnames = pokemon_v2_pokeathlonstatnames;
    final lOther$pokemon_v2_pokeathlonstatnames =
        other.pokemon_v2_pokeathlonstatnames;
    if (l$pokemon_v2_pokeathlonstatnames !=
        lOther$pokemon_v2_pokeathlonstatnames) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatOrderBy {
  InputpokemonV2PokeathlonstatOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_naturepokeathlonstats_aggregate,
      this.pokemon_v2_pokeathlonstatnames_aggregate});

  @override
  factory InputpokemonV2PokeathlonstatOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2NaturepokeathlonstatAggregateOrderBy?
      pokemon_v2_naturepokeathlonstats_aggregate;

  final InputpokemonV2PokeathlonstatnameAggregateOrderBy?
      pokemon_v2_pokeathlonstatnames_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_naturepokeathlonstats_aggregate =
        pokemon_v2_naturepokeathlonstats_aggregate;
    final l$pokemon_v2_pokeathlonstatnames_aggregate =
        pokemon_v2_pokeathlonstatnames_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_naturepokeathlonstats_aggregate,
      l$pokemon_v2_pokeathlonstatnames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_naturepokeathlonstats_aggregate =
        pokemon_v2_naturepokeathlonstats_aggregate;
    final lOther$pokemon_v2_naturepokeathlonstats_aggregate =
        other.pokemon_v2_naturepokeathlonstats_aggregate;
    if (l$pokemon_v2_naturepokeathlonstats_aggregate !=
        lOther$pokemon_v2_naturepokeathlonstats_aggregate) return false;
    final l$pokemon_v2_pokeathlonstatnames_aggregate =
        pokemon_v2_pokeathlonstatnames_aggregate;
    final lOther$pokemon_v2_pokeathlonstatnames_aggregate =
        other.pokemon_v2_pokeathlonstatnames_aggregate;
    if (l$pokemon_v2_pokeathlonstatnames_aggregate !=
        lOther$pokemon_v2_pokeathlonstatnames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameAggregateOrderBy {
  InputpokemonV2PokeathlonstatnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokeathlonstatnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameAggregateOrderByFromJson(json);

  final InputpokemonV2PokeathlonstatnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokeathlonstatnameMaxOrderBy? max;

  final InputpokemonV2PokeathlonstatnameMinOrderBy? min;

  final InputpokemonV2PokeathlonstatnameStddevOrderBy? stddev;

  final InputpokemonV2PokeathlonstatnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokeathlonstatnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokeathlonstatnameSumOrderBy? sum;

  final InputpokemonV2PokeathlonstatnameVarPopOrderBy? var_pop;

  final InputpokemonV2PokeathlonstatnameVarSampOrderBy? var_samp;

  final InputpokemonV2PokeathlonstatnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameAvgOrderBy {
  InputpokemonV2PokeathlonstatnameAvgOrderBy(
      {this.id, this.language_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameBoolExp {
  InputpokemonV2PokeathlonstatnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokeathlon_stat_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokeathlonstat});

  @override
  factory InputpokemonV2PokeathlonstatnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokeathlonstatnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokeathlonstatnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokeathlonstatnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? pokeathlon_stat_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokeathlonstatBoolExp? pokemon_v2_pokeathlonstat;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokeathlonstat = pokemon_v2_pokeathlonstat;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokeathlon_stat_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokeathlonstat
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokeathlonstat = pokemon_v2_pokeathlonstat;
    final lOther$pokemon_v2_pokeathlonstat = other.pokemon_v2_pokeathlonstat;
    if (l$pokemon_v2_pokeathlonstat != lOther$pokemon_v2_pokeathlonstat)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameMaxOrderBy {
  InputpokemonV2PokeathlonstatnameMaxOrderBy(
      {this.id, this.language_id, this.name, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameMinOrderBy {
  InputpokemonV2PokeathlonstatnameMinOrderBy(
      {this.id, this.language_id, this.name, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameOrderBy {
  InputpokemonV2PokeathlonstatnameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokeathlon_stat_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokeathlonstat});

  @override
  factory InputpokemonV2PokeathlonstatnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokeathlonstatOrderBy? pokemon_v2_pokeathlonstat;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokeathlonstat = pokemon_v2_pokeathlonstat;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokeathlon_stat_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokeathlonstat
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokeathlonstat = pokemon_v2_pokeathlonstat;
    final lOther$pokemon_v2_pokeathlonstat = other.pokemon_v2_pokeathlonstat;
    if (l$pokemon_v2_pokeathlonstat != lOther$pokemon_v2_pokeathlonstat)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameStddevOrderBy {
  InputpokemonV2PokeathlonstatnameStddevOrderBy(
      {this.id, this.language_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameStddevPopOrderBy {
  InputpokemonV2PokeathlonstatnameStddevPopOrderBy(
      {this.id, this.language_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameStddevSampOrderBy {
  InputpokemonV2PokeathlonstatnameStddevSampOrderBy(
      {this.id, this.language_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameSumOrderBy {
  InputpokemonV2PokeathlonstatnameSumOrderBy(
      {this.id, this.language_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameVarPopOrderBy {
  InputpokemonV2PokeathlonstatnameVarPopOrderBy(
      {this.id, this.language_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameVarSampOrderBy {
  InputpokemonV2PokeathlonstatnameVarSampOrderBy(
      {this.id, this.language_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokeathlonstatnameVarianceOrderBy {
  InputpokemonV2PokeathlonstatnameVarianceOrderBy(
      {this.id, this.language_id, this.pokeathlon_stat_id});

  @override
  factory InputpokemonV2PokeathlonstatnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokeathlonstatnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokeathlon_stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokeathlonstatnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    return Object.hashAll([l$id, l$language_id, l$pokeathlon_stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokeathlonstatnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokeathlon_stat_id = pokeathlon_stat_id;
    final lOther$pokeathlon_stat_id = other.pokeathlon_stat_id;
    if (l$pokeathlon_stat_id != lOther$pokeathlon_stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexAggregateOrderBy {
  InputpokemonV2PokedexAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokedexAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexAggregateOrderByFromJson(json);

  final InputpokemonV2PokedexAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokedexMaxOrderBy? max;

  final InputpokemonV2PokedexMinOrderBy? min;

  final InputpokemonV2PokedexStddevOrderBy? stddev;

  final InputpokemonV2PokedexStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokedexStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokedexSumOrderBy? sum;

  final InputpokemonV2PokedexVarPopOrderBy? var_pop;

  final InputpokemonV2PokedexVarSampOrderBy? var_samp;

  final InputpokemonV2PokedexVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexAvgOrderBy {
  InputpokemonV2PokedexAvgOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2PokedexAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexBoolExp {
  InputpokemonV2PokedexBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.is_main_series,
      this.name,
      this.pokemon_v2_pokedexdescriptions,
      this.pokemon_v2_pokedexnames,
      this.pokemon_v2_pokedexversiongroups,
      this.pokemon_v2_pokemondexnumbers,
      this.pokemon_v2_region,
      this.region_id});

  @override
  factory InputpokemonV2PokedexBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokedexBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokedexBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokedexBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputBooleanComparisonExp? is_main_series;

  final InputStringComparisonExp? name;

  final InputpokemonV2PokedexdescriptionBoolExp? pokemon_v2_pokedexdescriptions;

  final InputpokemonV2PokedexnameBoolExp? pokemon_v2_pokedexnames;

  final InputpokemonV2PokedexversiongroupBoolExp?
      pokemon_v2_pokedexversiongroups;

  final InputpokemonV2PokemondexnumberBoolExp? pokemon_v2_pokemondexnumbers;

  final InputpokemonV2RegionBoolExp? pokemon_v2_region;

  final InputIntComparisonExp? region_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2PokedexBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$is_main_series = is_main_series;
    final l$name = name;
    final l$pokemon_v2_pokedexdescriptions = pokemon_v2_pokedexdescriptions;
    final l$pokemon_v2_pokedexnames = pokemon_v2_pokedexnames;
    final l$pokemon_v2_pokedexversiongroups = pokemon_v2_pokedexversiongroups;
    final l$pokemon_v2_pokemondexnumbers = pokemon_v2_pokemondexnumbers;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$region_id = region_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$is_main_series,
      l$name,
      l$pokemon_v2_pokedexdescriptions,
      l$pokemon_v2_pokedexnames,
      l$pokemon_v2_pokedexversiongroups,
      l$pokemon_v2_pokemondexnumbers,
      l$pokemon_v2_region,
      l$region_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_main_series = is_main_series;
    final lOther$is_main_series = other.is_main_series;
    if (l$is_main_series != lOther$is_main_series) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokedexdescriptions = pokemon_v2_pokedexdescriptions;
    final lOther$pokemon_v2_pokedexdescriptions =
        other.pokemon_v2_pokedexdescriptions;
    if (l$pokemon_v2_pokedexdescriptions !=
        lOther$pokemon_v2_pokedexdescriptions) return false;
    final l$pokemon_v2_pokedexnames = pokemon_v2_pokedexnames;
    final lOther$pokemon_v2_pokedexnames = other.pokemon_v2_pokedexnames;
    if (l$pokemon_v2_pokedexnames != lOther$pokemon_v2_pokedexnames)
      return false;
    final l$pokemon_v2_pokedexversiongroups = pokemon_v2_pokedexversiongroups;
    final lOther$pokemon_v2_pokedexversiongroups =
        other.pokemon_v2_pokedexversiongroups;
    if (l$pokemon_v2_pokedexversiongroups !=
        lOther$pokemon_v2_pokedexversiongroups) return false;
    final l$pokemon_v2_pokemondexnumbers = pokemon_v2_pokemondexnumbers;
    final lOther$pokemon_v2_pokemondexnumbers =
        other.pokemon_v2_pokemondexnumbers;
    if (l$pokemon_v2_pokemondexnumbers != lOther$pokemon_v2_pokemondexnumbers)
      return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexMaxOrderBy {
  InputpokemonV2PokedexMaxOrderBy({this.id, this.name, this.region_id});

  @override
  factory InputpokemonV2PokedexMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$name, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexMinOrderBy {
  InputpokemonV2PokedexMinOrderBy({this.id, this.name, this.region_id});

  @override
  factory InputpokemonV2PokedexMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$name, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexOrderBy {
  InputpokemonV2PokedexOrderBy(
      {this.id,
      this.is_main_series,
      this.name,
      this.pokemon_v2_pokedexdescriptions_aggregate,
      this.pokemon_v2_pokedexnames_aggregate,
      this.pokemon_v2_pokedexversiongroups_aggregate,
      this.pokemon_v2_pokemondexnumbers_aggregate,
      this.pokemon_v2_region,
      this.region_id});

  @override
  factory InputpokemonV2PokedexOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_main_series;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2PokedexdescriptionAggregateOrderBy?
      pokemon_v2_pokedexdescriptions_aggregate;

  final InputpokemonV2PokedexnameAggregateOrderBy?
      pokemon_v2_pokedexnames_aggregate;

  final InputpokemonV2PokedexversiongroupAggregateOrderBy?
      pokemon_v2_pokedexversiongroups_aggregate;

  final InputpokemonV2PokemondexnumberAggregateOrderBy?
      pokemon_v2_pokemondexnumbers_aggregate;

  final InputpokemonV2RegionOrderBy? pokemon_v2_region;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2PokedexOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$is_main_series = is_main_series;
    final l$name = name;
    final l$pokemon_v2_pokedexdescriptions_aggregate =
        pokemon_v2_pokedexdescriptions_aggregate;
    final l$pokemon_v2_pokedexnames_aggregate =
        pokemon_v2_pokedexnames_aggregate;
    final l$pokemon_v2_pokedexversiongroups_aggregate =
        pokemon_v2_pokedexversiongroups_aggregate;
    final l$pokemon_v2_pokemondexnumbers_aggregate =
        pokemon_v2_pokemondexnumbers_aggregate;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$region_id = region_id;
    return Object.hashAll([
      l$id,
      l$is_main_series,
      l$name,
      l$pokemon_v2_pokedexdescriptions_aggregate,
      l$pokemon_v2_pokedexnames_aggregate,
      l$pokemon_v2_pokedexversiongroups_aggregate,
      l$pokemon_v2_pokemondexnumbers_aggregate,
      l$pokemon_v2_region,
      l$region_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_main_series = is_main_series;
    final lOther$is_main_series = other.is_main_series;
    if (l$is_main_series != lOther$is_main_series) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokedexdescriptions_aggregate =
        pokemon_v2_pokedexdescriptions_aggregate;
    final lOther$pokemon_v2_pokedexdescriptions_aggregate =
        other.pokemon_v2_pokedexdescriptions_aggregate;
    if (l$pokemon_v2_pokedexdescriptions_aggregate !=
        lOther$pokemon_v2_pokedexdescriptions_aggregate) return false;
    final l$pokemon_v2_pokedexnames_aggregate =
        pokemon_v2_pokedexnames_aggregate;
    final lOther$pokemon_v2_pokedexnames_aggregate =
        other.pokemon_v2_pokedexnames_aggregate;
    if (l$pokemon_v2_pokedexnames_aggregate !=
        lOther$pokemon_v2_pokedexnames_aggregate) return false;
    final l$pokemon_v2_pokedexversiongroups_aggregate =
        pokemon_v2_pokedexversiongroups_aggregate;
    final lOther$pokemon_v2_pokedexversiongroups_aggregate =
        other.pokemon_v2_pokedexversiongroups_aggregate;
    if (l$pokemon_v2_pokedexversiongroups_aggregate !=
        lOther$pokemon_v2_pokedexversiongroups_aggregate) return false;
    final l$pokemon_v2_pokemondexnumbers_aggregate =
        pokemon_v2_pokemondexnumbers_aggregate;
    final lOther$pokemon_v2_pokemondexnumbers_aggregate =
        other.pokemon_v2_pokemondexnumbers_aggregate;
    if (l$pokemon_v2_pokemondexnumbers_aggregate !=
        lOther$pokemon_v2_pokemondexnumbers_aggregate) return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexStddevOrderBy {
  InputpokemonV2PokedexStddevOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2PokedexStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexStddevPopOrderBy {
  InputpokemonV2PokedexStddevPopOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2PokedexStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexStddevSampOrderBy {
  InputpokemonV2PokedexStddevSampOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2PokedexStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexSumOrderBy {
  InputpokemonV2PokedexSumOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2PokedexSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexVarPopOrderBy {
  InputpokemonV2PokedexVarPopOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2PokedexVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexVarSampOrderBy {
  InputpokemonV2PokedexVarSampOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2PokedexVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexVarianceOrderBy {
  InputpokemonV2PokedexVarianceOrderBy({this.id, this.region_id});

  @override
  factory InputpokemonV2PokedexVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionAggregateOrderBy {
  InputpokemonV2PokedexdescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokedexdescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2PokedexdescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokedexdescriptionMaxOrderBy? max;

  final InputpokemonV2PokedexdescriptionMinOrderBy? min;

  final InputpokemonV2PokedexdescriptionStddevOrderBy? stddev;

  final InputpokemonV2PokedexdescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokedexdescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokedexdescriptionSumOrderBy? sum;

  final InputpokemonV2PokedexdescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2PokedexdescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2PokedexdescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionAvgOrderBy {
  InputpokemonV2PokedexdescriptionAvgOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionBoolExp {
  InputpokemonV2PokedexdescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.id,
      this.language_id,
      this.pokedex_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokedex});

  @override
  factory InputpokemonV2PokedexdescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokedexdescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokedexdescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokedexdescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? pokedex_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokedexBoolExp? pokemon_v2_pokedex;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$id,
      l$language_id,
      l$pokedex_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokedex
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final lOther$pokemon_v2_pokedex = other.pokemon_v2_pokedex;
    if (l$pokemon_v2_pokedex != lOther$pokemon_v2_pokedex) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionMaxOrderBy {
  InputpokemonV2PokedexdescriptionMaxOrderBy(
      {this.description, this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$description, l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionMinOrderBy {
  InputpokemonV2PokedexdescriptionMinOrderBy(
      {this.description, this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$description, l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionOrderBy {
  InputpokemonV2PokedexdescriptionOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.pokedex_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokedex});

  @override
  factory InputpokemonV2PokedexdescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokedexOrderBy? pokemon_v2_pokedex;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    return Object.hashAll([
      l$description,
      l$id,
      l$language_id,
      l$pokedex_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokedex
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final lOther$pokemon_v2_pokedex = other.pokemon_v2_pokedex;
    if (l$pokemon_v2_pokedex != lOther$pokemon_v2_pokedex) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionStddevOrderBy {
  InputpokemonV2PokedexdescriptionStddevOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionStddevPopOrderBy {
  InputpokemonV2PokedexdescriptionStddevPopOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionStddevSampOrderBy {
  InputpokemonV2PokedexdescriptionStddevSampOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionSumOrderBy {
  InputpokemonV2PokedexdescriptionSumOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionVarPopOrderBy {
  InputpokemonV2PokedexdescriptionVarPopOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionVarSampOrderBy {
  InputpokemonV2PokedexdescriptionVarSampOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexdescriptionVarianceOrderBy {
  InputpokemonV2PokedexdescriptionVarianceOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexdescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexdescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexdescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexdescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameAggregateOrderBy {
  InputpokemonV2PokedexnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokedexnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameAggregateOrderByFromJson(json);

  final InputpokemonV2PokedexnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokedexnameMaxOrderBy? max;

  final InputpokemonV2PokedexnameMinOrderBy? min;

  final InputpokemonV2PokedexnameStddevOrderBy? stddev;

  final InputpokemonV2PokedexnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokedexnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokedexnameSumOrderBy? sum;

  final InputpokemonV2PokedexnameVarPopOrderBy? var_pop;

  final InputpokemonV2PokedexnameVarSampOrderBy? var_samp;

  final InputpokemonV2PokedexnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameAvgOrderBy {
  InputpokemonV2PokedexnameAvgOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameBoolExp {
  InputpokemonV2PokedexnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokedex_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokedex});

  @override
  factory InputpokemonV2PokedexnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokedexnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokedexnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokedexnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? pokedex_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokedexBoolExp? pokemon_v2_pokedex;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokedex_id = pokedex_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokedex_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokedex
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final lOther$pokemon_v2_pokedex = other.pokemon_v2_pokedex;
    if (l$pokemon_v2_pokedex != lOther$pokemon_v2_pokedex) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameMaxOrderBy {
  InputpokemonV2PokedexnameMaxOrderBy(
      {this.id, this.language_id, this.name, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameMinOrderBy {
  InputpokemonV2PokedexnameMinOrderBy(
      {this.id, this.language_id, this.name, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameOrderBy {
  InputpokemonV2PokedexnameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokedex_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokedex});

  @override
  factory InputpokemonV2PokedexnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokedexOrderBy? pokemon_v2_pokedex;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokedex_id = pokedex_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokedex_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokedex
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final lOther$pokemon_v2_pokedex = other.pokemon_v2_pokedex;
    if (l$pokemon_v2_pokedex != lOther$pokemon_v2_pokedex) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameStddevOrderBy {
  InputpokemonV2PokedexnameStddevOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameStddevPopOrderBy {
  InputpokemonV2PokedexnameStddevPopOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameStddevSampOrderBy {
  InputpokemonV2PokedexnameStddevSampOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameSumOrderBy {
  InputpokemonV2PokedexnameSumOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameVarPopOrderBy {
  InputpokemonV2PokedexnameVarPopOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameVarSampOrderBy {
  InputpokemonV2PokedexnameVarSampOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexnameVarianceOrderBy {
  InputpokemonV2PokedexnameVarianceOrderBy(
      {this.id, this.language_id, this.pokedex_id});

  @override
  factory InputpokemonV2PokedexnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokedex_id = pokedex_id;
    return Object.hashAll([l$id, l$language_id, l$pokedex_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupAggregateOrderBy {
  InputpokemonV2PokedexversiongroupAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokedexversiongroupAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupAggregateOrderByFromJson(json);

  final InputpokemonV2PokedexversiongroupAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokedexversiongroupMaxOrderBy? max;

  final InputpokemonV2PokedexversiongroupMinOrderBy? min;

  final InputpokemonV2PokedexversiongroupStddevOrderBy? stddev;

  final InputpokemonV2PokedexversiongroupStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokedexversiongroupStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokedexversiongroupSumOrderBy? sum;

  final InputpokemonV2PokedexversiongroupVarPopOrderBy? var_pop;

  final InputpokemonV2PokedexversiongroupVarSampOrderBy? var_samp;

  final InputpokemonV2PokedexversiongroupVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupAvgOrderBy {
  InputpokemonV2PokedexversiongroupAvgOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupBoolExp {
  InputpokemonV2PokedexversiongroupBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.pokedex_id,
      this.pokemon_v2_pokedex,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokedexversiongroupBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokedexversiongroupBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokedexversiongroupBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokedex_id;

  final InputpokemonV2PokedexBoolExp? pokemon_v2_pokedex;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$pokedex_id,
      l$pokemon_v2_pokedex,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final lOther$pokemon_v2_pokedex = other.pokemon_v2_pokedex;
    if (l$pokemon_v2_pokedex != lOther$pokemon_v2_pokedex) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupMaxOrderBy {
  InputpokemonV2PokedexversiongroupMaxOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupMinOrderBy {
  InputpokemonV2PokedexversiongroupMinOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupOrderBy {
  InputpokemonV2PokedexversiongroupOrderBy(
      {this.id,
      this.pokedex_id,
      this.pokemon_v2_pokedex,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  final InputpokemonV2PokedexOrderBy? pokemon_v2_pokedex;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$pokedex_id,
      l$pokemon_v2_pokedex,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final lOther$pokemon_v2_pokedex = other.pokemon_v2_pokedex;
    if (l$pokemon_v2_pokedex != lOther$pokemon_v2_pokedex) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupStddevOrderBy {
  InputpokemonV2PokedexversiongroupStddevOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupStddevPopOrderBy {
  InputpokemonV2PokedexversiongroupStddevPopOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupStddevSampOrderBy {
  InputpokemonV2PokedexversiongroupStddevSampOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupSumOrderBy {
  InputpokemonV2PokedexversiongroupSumOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupVarPopOrderBy {
  InputpokemonV2PokedexversiongroupVarPopOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupVarSampOrderBy {
  InputpokemonV2PokedexversiongroupVarSampOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokedexversiongroupVarianceOrderBy {
  InputpokemonV2PokedexversiongroupVarianceOrderBy(
      {this.id, this.pokedex_id, this.version_group_id});

  @override
  factory InputpokemonV2PokedexversiongroupVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokedexversiongroupVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokedexversiongroupVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$pokedex_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokedexversiongroupVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonAggregateOrderBy {
  InputpokemonV2PokemonAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonMaxOrderBy? max;

  final InputpokemonV2PokemonMinOrderBy? min;

  final InputpokemonV2PokemonStddevOrderBy? stddev;

  final InputpokemonV2PokemonStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonSumOrderBy? sum;

  final InputpokemonV2PokemonVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonAvgOrderBy {
  InputpokemonV2PokemonAvgOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonAvgOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonBoolExp {
  InputpokemonV2PokemonBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.base_experience,
      this.height,
      this.id,
      this.is_default,
      this.name,
      this.order,
      this.pokemon_species_id,
      this.pokemon_v2_encounters,
      this.pokemon_v2_pokemonabilities,
      this.pokemon_v2_pokemonforms,
      this.pokemon_v2_pokemongameindices,
      this.pokemon_v2_pokemonitems,
      this.pokemon_v2_pokemonmoves,
      this.pokemon_v2_pokemonspecy,
      this.pokemon_v2_pokemonsprites,
      this.pokemon_v2_pokemonstats,
      this.pokemon_v2_pokemontypepasts,
      this.pokemon_v2_pokemontypes,
      this.weight});

  @override
  factory InputpokemonV2PokemonBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonBoolExp>? $_or;

  final InputIntComparisonExp? base_experience;

  final InputIntComparisonExp? height;

  final InputIntComparisonExp? id;

  final InputBooleanComparisonExp? is_default;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? order;

  final InputIntComparisonExp? pokemon_species_id;

  final InputpokemonV2EncounterBoolExp? pokemon_v2_encounters;

  final InputpokemonV2PokemonabilityBoolExp? pokemon_v2_pokemonabilities;

  final InputpokemonV2PokemonformBoolExp? pokemon_v2_pokemonforms;

  final InputpokemonV2PokemongameindexBoolExp? pokemon_v2_pokemongameindices;

  final InputpokemonV2PokemonitemBoolExp? pokemon_v2_pokemonitems;

  final InputpokemonV2PokemonmoveBoolExp? pokemon_v2_pokemonmoves;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  final InputpokemonV2PokemonspritesBoolExp? pokemon_v2_pokemonsprites;

  final InputpokemonV2PokemonstatBoolExp? pokemon_v2_pokemonstats;

  final InputpokemonV2PokemontypepastBoolExp? pokemon_v2_pokemontypepasts;

  final InputpokemonV2PokemontypeBoolExp? pokemon_v2_pokemontypes;

  final InputIntComparisonExp? weight;

  Map<String, dynamic> toJson() => _$InputpokemonV2PokemonBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$is_default = is_default;
    final l$name = name;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_encounters = pokemon_v2_encounters;
    final l$pokemon_v2_pokemonabilities = pokemon_v2_pokemonabilities;
    final l$pokemon_v2_pokemonforms = pokemon_v2_pokemonforms;
    final l$pokemon_v2_pokemongameindices = pokemon_v2_pokemongameindices;
    final l$pokemon_v2_pokemonitems = pokemon_v2_pokemonitems;
    final l$pokemon_v2_pokemonmoves = pokemon_v2_pokemonmoves;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final l$pokemon_v2_pokemonsprites = pokemon_v2_pokemonsprites;
    final l$pokemon_v2_pokemonstats = pokemon_v2_pokemonstats;
    final l$pokemon_v2_pokemontypepasts = pokemon_v2_pokemontypepasts;
    final l$pokemon_v2_pokemontypes = pokemon_v2_pokemontypes;
    final l$weight = weight;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$base_experience,
      l$height,
      l$id,
      l$is_default,
      l$name,
      l$order,
      l$pokemon_species_id,
      l$pokemon_v2_encounters,
      l$pokemon_v2_pokemonabilities,
      l$pokemon_v2_pokemonforms,
      l$pokemon_v2_pokemongameindices,
      l$pokemon_v2_pokemonitems,
      l$pokemon_v2_pokemonmoves,
      l$pokemon_v2_pokemonspecy,
      l$pokemon_v2_pokemonsprites,
      l$pokemon_v2_pokemonstats,
      l$pokemon_v2_pokemontypepasts,
      l$pokemon_v2_pokemontypes,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_default = is_default;
    final lOther$is_default = other.is_default;
    if (l$is_default != lOther$is_default) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_encounters = pokemon_v2_encounters;
    final lOther$pokemon_v2_encounters = other.pokemon_v2_encounters;
    if (l$pokemon_v2_encounters != lOther$pokemon_v2_encounters) return false;
    final l$pokemon_v2_pokemonabilities = pokemon_v2_pokemonabilities;
    final lOther$pokemon_v2_pokemonabilities =
        other.pokemon_v2_pokemonabilities;
    if (l$pokemon_v2_pokemonabilities != lOther$pokemon_v2_pokemonabilities)
      return false;
    final l$pokemon_v2_pokemonforms = pokemon_v2_pokemonforms;
    final lOther$pokemon_v2_pokemonforms = other.pokemon_v2_pokemonforms;
    if (l$pokemon_v2_pokemonforms != lOther$pokemon_v2_pokemonforms)
      return false;
    final l$pokemon_v2_pokemongameindices = pokemon_v2_pokemongameindices;
    final lOther$pokemon_v2_pokemongameindices =
        other.pokemon_v2_pokemongameindices;
    if (l$pokemon_v2_pokemongameindices != lOther$pokemon_v2_pokemongameindices)
      return false;
    final l$pokemon_v2_pokemonitems = pokemon_v2_pokemonitems;
    final lOther$pokemon_v2_pokemonitems = other.pokemon_v2_pokemonitems;
    if (l$pokemon_v2_pokemonitems != lOther$pokemon_v2_pokemonitems)
      return false;
    final l$pokemon_v2_pokemonmoves = pokemon_v2_pokemonmoves;
    final lOther$pokemon_v2_pokemonmoves = other.pokemon_v2_pokemonmoves;
    if (l$pokemon_v2_pokemonmoves != lOther$pokemon_v2_pokemonmoves)
      return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    final l$pokemon_v2_pokemonsprites = pokemon_v2_pokemonsprites;
    final lOther$pokemon_v2_pokemonsprites = other.pokemon_v2_pokemonsprites;
    if (l$pokemon_v2_pokemonsprites != lOther$pokemon_v2_pokemonsprites)
      return false;
    final l$pokemon_v2_pokemonstats = pokemon_v2_pokemonstats;
    final lOther$pokemon_v2_pokemonstats = other.pokemon_v2_pokemonstats;
    if (l$pokemon_v2_pokemonstats != lOther$pokemon_v2_pokemonstats)
      return false;
    final l$pokemon_v2_pokemontypepasts = pokemon_v2_pokemontypepasts;
    final lOther$pokemon_v2_pokemontypepasts =
        other.pokemon_v2_pokemontypepasts;
    if (l$pokemon_v2_pokemontypepasts != lOther$pokemon_v2_pokemontypepasts)
      return false;
    final l$pokemon_v2_pokemontypes = pokemon_v2_pokemontypes;
    final lOther$pokemon_v2_pokemontypes = other.pokemon_v2_pokemontypes;
    if (l$pokemon_v2_pokemontypes != lOther$pokemon_v2_pokemontypes)
      return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonMaxOrderBy {
  InputpokemonV2PokemonMaxOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.name,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonMaxOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$name,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonMinOrderBy {
  InputpokemonV2PokemonMinOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.name,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonMinOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$name,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonOrderBy {
  InputpokemonV2PokemonOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.is_default,
      this.name,
      this.order,
      this.pokemon_species_id,
      this.pokemon_v2_encounters_aggregate,
      this.pokemon_v2_pokemonabilities_aggregate,
      this.pokemon_v2_pokemonforms_aggregate,
      this.pokemon_v2_pokemongameindices_aggregate,
      this.pokemon_v2_pokemonitems_aggregate,
      this.pokemon_v2_pokemonmoves_aggregate,
      this.pokemon_v2_pokemonspecy,
      this.pokemon_v2_pokemonsprites_aggregate,
      this.pokemon_v2_pokemonstats_aggregate,
      this.pokemon_v2_pokemontypepasts_aggregate,
      this.pokemon_v2_pokemontypes_aggregate,
      this.weight});

  @override
  factory InputpokemonV2PokemonOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_default;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  final InputpokemonV2EncounterAggregateOrderBy?
      pokemon_v2_encounters_aggregate;

  final InputpokemonV2PokemonabilityAggregateOrderBy?
      pokemon_v2_pokemonabilities_aggregate;

  final InputpokemonV2PokemonformAggregateOrderBy?
      pokemon_v2_pokemonforms_aggregate;

  final InputpokemonV2PokemongameindexAggregateOrderBy?
      pokemon_v2_pokemongameindices_aggregate;

  final InputpokemonV2PokemonitemAggregateOrderBy?
      pokemon_v2_pokemonitems_aggregate;

  final InputpokemonV2PokemonmoveAggregateOrderBy?
      pokemon_v2_pokemonmoves_aggregate;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  final InputpokemonV2PokemonspritesAggregateOrderBy?
      pokemon_v2_pokemonsprites_aggregate;

  final InputpokemonV2PokemonstatAggregateOrderBy?
      pokemon_v2_pokemonstats_aggregate;

  final InputpokemonV2PokemontypepastAggregateOrderBy?
      pokemon_v2_pokemontypepasts_aggregate;

  final InputpokemonV2PokemontypeAggregateOrderBy?
      pokemon_v2_pokemontypes_aggregate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() => _$InputpokemonV2PokemonOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$is_default = is_default;
    final l$name = name;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_encounters_aggregate = pokemon_v2_encounters_aggregate;
    final l$pokemon_v2_pokemonabilities_aggregate =
        pokemon_v2_pokemonabilities_aggregate;
    final l$pokemon_v2_pokemonforms_aggregate =
        pokemon_v2_pokemonforms_aggregate;
    final l$pokemon_v2_pokemongameindices_aggregate =
        pokemon_v2_pokemongameindices_aggregate;
    final l$pokemon_v2_pokemonitems_aggregate =
        pokemon_v2_pokemonitems_aggregate;
    final l$pokemon_v2_pokemonmoves_aggregate =
        pokemon_v2_pokemonmoves_aggregate;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final l$pokemon_v2_pokemonsprites_aggregate =
        pokemon_v2_pokemonsprites_aggregate;
    final l$pokemon_v2_pokemonstats_aggregate =
        pokemon_v2_pokemonstats_aggregate;
    final l$pokemon_v2_pokemontypepasts_aggregate =
        pokemon_v2_pokemontypepasts_aggregate;
    final l$pokemon_v2_pokemontypes_aggregate =
        pokemon_v2_pokemontypes_aggregate;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$is_default,
      l$name,
      l$order,
      l$pokemon_species_id,
      l$pokemon_v2_encounters_aggregate,
      l$pokemon_v2_pokemonabilities_aggregate,
      l$pokemon_v2_pokemonforms_aggregate,
      l$pokemon_v2_pokemongameindices_aggregate,
      l$pokemon_v2_pokemonitems_aggregate,
      l$pokemon_v2_pokemonmoves_aggregate,
      l$pokemon_v2_pokemonspecy,
      l$pokemon_v2_pokemonsprites_aggregate,
      l$pokemon_v2_pokemonstats_aggregate,
      l$pokemon_v2_pokemontypepasts_aggregate,
      l$pokemon_v2_pokemontypes_aggregate,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_default = is_default;
    final lOther$is_default = other.is_default;
    if (l$is_default != lOther$is_default) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_encounters_aggregate = pokemon_v2_encounters_aggregate;
    final lOther$pokemon_v2_encounters_aggregate =
        other.pokemon_v2_encounters_aggregate;
    if (l$pokemon_v2_encounters_aggregate !=
        lOther$pokemon_v2_encounters_aggregate) return false;
    final l$pokemon_v2_pokemonabilities_aggregate =
        pokemon_v2_pokemonabilities_aggregate;
    final lOther$pokemon_v2_pokemonabilities_aggregate =
        other.pokemon_v2_pokemonabilities_aggregate;
    if (l$pokemon_v2_pokemonabilities_aggregate !=
        lOther$pokemon_v2_pokemonabilities_aggregate) return false;
    final l$pokemon_v2_pokemonforms_aggregate =
        pokemon_v2_pokemonforms_aggregate;
    final lOther$pokemon_v2_pokemonforms_aggregate =
        other.pokemon_v2_pokemonforms_aggregate;
    if (l$pokemon_v2_pokemonforms_aggregate !=
        lOther$pokemon_v2_pokemonforms_aggregate) return false;
    final l$pokemon_v2_pokemongameindices_aggregate =
        pokemon_v2_pokemongameindices_aggregate;
    final lOther$pokemon_v2_pokemongameindices_aggregate =
        other.pokemon_v2_pokemongameindices_aggregate;
    if (l$pokemon_v2_pokemongameindices_aggregate !=
        lOther$pokemon_v2_pokemongameindices_aggregate) return false;
    final l$pokemon_v2_pokemonitems_aggregate =
        pokemon_v2_pokemonitems_aggregate;
    final lOther$pokemon_v2_pokemonitems_aggregate =
        other.pokemon_v2_pokemonitems_aggregate;
    if (l$pokemon_v2_pokemonitems_aggregate !=
        lOther$pokemon_v2_pokemonitems_aggregate) return false;
    final l$pokemon_v2_pokemonmoves_aggregate =
        pokemon_v2_pokemonmoves_aggregate;
    final lOther$pokemon_v2_pokemonmoves_aggregate =
        other.pokemon_v2_pokemonmoves_aggregate;
    if (l$pokemon_v2_pokemonmoves_aggregate !=
        lOther$pokemon_v2_pokemonmoves_aggregate) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    final l$pokemon_v2_pokemonsprites_aggregate =
        pokemon_v2_pokemonsprites_aggregate;
    final lOther$pokemon_v2_pokemonsprites_aggregate =
        other.pokemon_v2_pokemonsprites_aggregate;
    if (l$pokemon_v2_pokemonsprites_aggregate !=
        lOther$pokemon_v2_pokemonsprites_aggregate) return false;
    final l$pokemon_v2_pokemonstats_aggregate =
        pokemon_v2_pokemonstats_aggregate;
    final lOther$pokemon_v2_pokemonstats_aggregate =
        other.pokemon_v2_pokemonstats_aggregate;
    if (l$pokemon_v2_pokemonstats_aggregate !=
        lOther$pokemon_v2_pokemonstats_aggregate) return false;
    final l$pokemon_v2_pokemontypepasts_aggregate =
        pokemon_v2_pokemontypepasts_aggregate;
    final lOther$pokemon_v2_pokemontypepasts_aggregate =
        other.pokemon_v2_pokemontypepasts_aggregate;
    if (l$pokemon_v2_pokemontypepasts_aggregate !=
        lOther$pokemon_v2_pokemontypepasts_aggregate) return false;
    final l$pokemon_v2_pokemontypes_aggregate =
        pokemon_v2_pokemontypes_aggregate;
    final lOther$pokemon_v2_pokemontypes_aggregate =
        other.pokemon_v2_pokemontypes_aggregate;
    if (l$pokemon_v2_pokemontypes_aggregate !=
        lOther$pokemon_v2_pokemontypes_aggregate) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonStddevOrderBy {
  InputpokemonV2PokemonStddevOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonStddevOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonStddevPopOrderBy {
  InputpokemonV2PokemonStddevPopOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonStddevPopOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonStddevSampOrderBy {
  InputpokemonV2PokemonStddevSampOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonStddevSampOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonSumOrderBy {
  InputpokemonV2PokemonSumOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonSumOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonVarPopOrderBy {
  InputpokemonV2PokemonVarPopOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonVarPopOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonVarSampOrderBy {
  InputpokemonV2PokemonVarSampOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonVarSampOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonVarianceOrderBy {
  InputpokemonV2PokemonVarianceOrderBy(
      {this.base_experience,
      this.height,
      this.id,
      this.order,
      this.pokemon_species_id,
      this.weight});

  @override
  factory InputpokemonV2PokemonVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_experience;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? height;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? weight;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonVarianceOrderByToJson(this);
  int get hashCode {
    final l$base_experience = base_experience;
    final l$height = height;
    final l$id = id;
    final l$order = order;
    final l$pokemon_species_id = pokemon_species_id;
    final l$weight = weight;
    return Object.hashAll([
      l$base_experience,
      l$height,
      l$id,
      l$order,
      l$pokemon_species_id,
      l$weight
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_experience = base_experience;
    final lOther$base_experience = other.base_experience;
    if (l$base_experience != lOther$base_experience) return false;
    final l$height = height;
    final lOther$height = other.height;
    if (l$height != lOther$height) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$weight = weight;
    final lOther$weight = other.weight;
    if (l$weight != lOther$weight) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityAggregateOrderBy {
  InputpokemonV2PokemonabilityAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonabilityAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonabilityAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonabilityMaxOrderBy? max;

  final InputpokemonV2PokemonabilityMinOrderBy? min;

  final InputpokemonV2PokemonabilityStddevOrderBy? stddev;

  final InputpokemonV2PokemonabilityStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonabilityStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonabilitySumOrderBy? sum;

  final InputpokemonV2PokemonabilityVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonabilityVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonabilityVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityAvgOrderBy {
  InputpokemonV2PokemonabilityAvgOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityAvgOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityBoolExp {
  InputpokemonV2PokemonabilityBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.ability_id,
      this.id,
      this.is_hidden,
      this.pokemon_id,
      this.pokemon_v2_ability,
      this.pokemon_v2_pokemon,
      this.slot});

  @override
  factory InputpokemonV2PokemonabilityBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonabilityBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonabilityBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonabilityBoolExp>? $_or;

  final InputIntComparisonExp? ability_id;

  final InputIntComparisonExp? id;

  final InputBooleanComparisonExp? is_hidden;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2AbilityBoolExp? pokemon_v2_ability;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputIntComparisonExp? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$ability_id = ability_id;
    final l$id = id;
    final l$is_hidden = is_hidden;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$slot = slot;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$ability_id,
      l$id,
      l$is_hidden,
      l$pokemon_id,
      l$pokemon_v2_ability,
      l$pokemon_v2_pokemon,
      l$slot
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_hidden = is_hidden;
    final lOther$is_hidden = other.is_hidden;
    if (l$is_hidden != lOther$is_hidden) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityMaxOrderBy {
  InputpokemonV2PokemonabilityMaxOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityMaxOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityMinOrderBy {
  InputpokemonV2PokemonabilityMinOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityMinOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityOrderBy {
  InputpokemonV2PokemonabilityOrderBy(
      {this.ability_id,
      this.id,
      this.is_hidden,
      this.pokemon_id,
      this.pokemon_v2_ability,
      this.pokemon_v2_pokemon,
      this.slot});

  @override
  factory InputpokemonV2PokemonabilityOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_hidden;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2AbilityOrderBy? pokemon_v2_ability;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$is_hidden = is_hidden;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$slot = slot;
    return Object.hashAll([
      l$ability_id,
      l$id,
      l$is_hidden,
      l$pokemon_id,
      l$pokemon_v2_ability,
      l$pokemon_v2_pokemon,
      l$slot
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_hidden = is_hidden;
    final lOther$is_hidden = other.is_hidden;
    if (l$is_hidden != lOther$is_hidden) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_ability = pokemon_v2_ability;
    final lOther$pokemon_v2_ability = other.pokemon_v2_ability;
    if (l$pokemon_v2_ability != lOther$pokemon_v2_ability) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityStddevOrderBy {
  InputpokemonV2PokemonabilityStddevOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityStddevOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityStddevPopOrderBy {
  InputpokemonV2PokemonabilityStddevPopOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityStddevPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityStddevSampOrderBy {
  InputpokemonV2PokemonabilityStddevSampOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityStddevSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilitySumOrderBy {
  InputpokemonV2PokemonabilitySumOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilitySumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilitySumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilitySumOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilitySumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityVarPopOrderBy {
  InputpokemonV2PokemonabilityVarPopOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityVarPopOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityVarSampOrderBy {
  InputpokemonV2PokemonabilityVarSampOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityVarSampOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonabilityVarianceOrderBy {
  InputpokemonV2PokemonabilityVarianceOrderBy(
      {this.ability_id, this.id, this.pokemon_id, this.slot});

  @override
  factory InputpokemonV2PokemonabilityVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonabilityVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? ability_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonabilityVarianceOrderByToJson(this);
  int get hashCode {
    final l$ability_id = ability_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    return Object.hashAll([l$ability_id, l$id, l$pokemon_id, l$slot]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonabilityVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$ability_id = ability_id;
    final lOther$ability_id = other.ability_id;
    if (l$ability_id != lOther$ability_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolorBoolExp {
  InputpokemonV2PokemoncolorBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_pokemoncolornames,
      this.pokemon_v2_pokemonspecies});

  @override
  factory InputpokemonV2PokemoncolorBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolorBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemoncolorBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemoncolorBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemoncolorBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2PokemoncolornameBoolExp? pokemon_v2_pokemoncolornames;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecies;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolorBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_pokemoncolornames = pokemon_v2_pokemoncolornames;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_pokemoncolornames,
      l$pokemon_v2_pokemonspecies
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolorBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokemoncolornames = pokemon_v2_pokemoncolornames;
    final lOther$pokemon_v2_pokemoncolornames =
        other.pokemon_v2_pokemoncolornames;
    if (l$pokemon_v2_pokemoncolornames != lOther$pokemon_v2_pokemoncolornames)
      return false;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final lOther$pokemon_v2_pokemonspecies = other.pokemon_v2_pokemonspecies;
    if (l$pokemon_v2_pokemonspecies != lOther$pokemon_v2_pokemonspecies)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolorOrderBy {
  InputpokemonV2PokemoncolorOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_pokemoncolornames_aggregate,
      this.pokemon_v2_pokemonspecies_aggregate});

  @override
  factory InputpokemonV2PokemoncolorOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolorOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2PokemoncolornameAggregateOrderBy?
      pokemon_v2_pokemoncolornames_aggregate;

  final InputpokemonV2PokemonspeciesAggregateOrderBy?
      pokemon_v2_pokemonspecies_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolorOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_pokemoncolornames_aggregate =
        pokemon_v2_pokemoncolornames_aggregate;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_pokemoncolornames_aggregate,
      l$pokemon_v2_pokemonspecies_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolorOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokemoncolornames_aggregate =
        pokemon_v2_pokemoncolornames_aggregate;
    final lOther$pokemon_v2_pokemoncolornames_aggregate =
        other.pokemon_v2_pokemoncolornames_aggregate;
    if (l$pokemon_v2_pokemoncolornames_aggregate !=
        lOther$pokemon_v2_pokemoncolornames_aggregate) return false;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final lOther$pokemon_v2_pokemonspecies_aggregate =
        other.pokemon_v2_pokemonspecies_aggregate;
    if (l$pokemon_v2_pokemonspecies_aggregate !=
        lOther$pokemon_v2_pokemonspecies_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameAggregateOrderBy {
  InputpokemonV2PokemoncolornameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemoncolornameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameAggregateOrderByFromJson(json);

  final InputpokemonV2PokemoncolornameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemoncolornameMaxOrderBy? max;

  final InputpokemonV2PokemoncolornameMinOrderBy? min;

  final InputpokemonV2PokemoncolornameStddevOrderBy? stddev;

  final InputpokemonV2PokemoncolornameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemoncolornameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemoncolornameSumOrderBy? sum;

  final InputpokemonV2PokemoncolornameVarPopOrderBy? var_pop;

  final InputpokemonV2PokemoncolornameVarSampOrderBy? var_samp;

  final InputpokemonV2PokemoncolornameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameAvgOrderBy {
  InputpokemonV2PokemoncolornameAvgOrderBy(
      {this.id, this.language_id, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameBoolExp {
  InputpokemonV2PokemoncolornameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_color_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemoncolor});

  @override
  factory InputpokemonV2PokemoncolornameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemoncolornameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemoncolornameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemoncolornameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? pokemon_color_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokemoncolorBoolExp? pokemon_v2_pokemoncolor;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemoncolor = pokemon_v2_pokemoncolor;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokemon_color_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemoncolor
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemoncolor = pokemon_v2_pokemoncolor;
    final lOther$pokemon_v2_pokemoncolor = other.pokemon_v2_pokemoncolor;
    if (l$pokemon_v2_pokemoncolor != lOther$pokemon_v2_pokemoncolor)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameMaxOrderBy {
  InputpokemonV2PokemoncolornameMaxOrderBy(
      {this.id, this.language_id, this.name, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameMinOrderBy {
  InputpokemonV2PokemoncolornameMinOrderBy(
      {this.id, this.language_id, this.name, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameOrderBy {
  InputpokemonV2PokemoncolornameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_color_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemoncolor});

  @override
  factory InputpokemonV2PokemoncolornameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokemoncolorOrderBy? pokemon_v2_pokemoncolor;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemoncolor = pokemon_v2_pokemoncolor;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokemon_color_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemoncolor
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemoncolor = pokemon_v2_pokemoncolor;
    final lOther$pokemon_v2_pokemoncolor = other.pokemon_v2_pokemoncolor;
    if (l$pokemon_v2_pokemoncolor != lOther$pokemon_v2_pokemoncolor)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameStddevOrderBy {
  InputpokemonV2PokemoncolornameStddevOrderBy(
      {this.id, this.language_id, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameStddevPopOrderBy {
  InputpokemonV2PokemoncolornameStddevPopOrderBy(
      {this.id, this.language_id, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameStddevSampOrderBy {
  InputpokemonV2PokemoncolornameStddevSampOrderBy(
      {this.id, this.language_id, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameSumOrderBy {
  InputpokemonV2PokemoncolornameSumOrderBy(
      {this.id, this.language_id, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameVarPopOrderBy {
  InputpokemonV2PokemoncolornameVarPopOrderBy(
      {this.id, this.language_id, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameVarSampOrderBy {
  InputpokemonV2PokemoncolornameVarSampOrderBy(
      {this.id, this.language_id, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemoncolornameVarianceOrderBy {
  InputpokemonV2PokemoncolornameVarianceOrderBy(
      {this.id, this.language_id, this.pokemon_color_id});

  @override
  factory InputpokemonV2PokemoncolornameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemoncolornameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemoncolornameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_color_id = pokemon_color_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_color_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemoncolornameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberAggregateOrderBy {
  InputpokemonV2PokemondexnumberAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemondexnumberAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberAggregateOrderByFromJson(json);

  final InputpokemonV2PokemondexnumberAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemondexnumberMaxOrderBy? max;

  final InputpokemonV2PokemondexnumberMinOrderBy? min;

  final InputpokemonV2PokemondexnumberStddevOrderBy? stddev;

  final InputpokemonV2PokemondexnumberStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemondexnumberStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemondexnumberSumOrderBy? sum;

  final InputpokemonV2PokemondexnumberVarPopOrderBy? var_pop;

  final InputpokemonV2PokemondexnumberVarSampOrderBy? var_samp;

  final InputpokemonV2PokemondexnumberVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberAvgOrderBy {
  InputpokemonV2PokemondexnumberAvgOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberBoolExp {
  InputpokemonV2PokemondexnumberBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.pokedex_id,
      this.pokedex_number,
      this.pokemon_species_id,
      this.pokemon_v2_pokedex,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemondexnumberBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemondexnumberBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemondexnumberBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemondexnumberBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokedex_id;

  final InputIntComparisonExp? pokedex_number;

  final InputIntComparisonExp? pokemon_species_id;

  final InputpokemonV2PokedexBoolExp? pokemon_v2_pokedex;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$pokedex_id,
      l$pokedex_number,
      l$pokemon_species_id,
      l$pokemon_v2_pokedex,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final lOther$pokemon_v2_pokedex = other.pokemon_v2_pokedex;
    if (l$pokemon_v2_pokedex != lOther$pokemon_v2_pokedex) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberMaxOrderBy {
  InputpokemonV2PokemondexnumberMaxOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberMinOrderBy {
  InputpokemonV2PokemondexnumberMinOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberOrderBy {
  InputpokemonV2PokemondexnumberOrderBy(
      {this.id,
      this.pokedex_id,
      this.pokedex_number,
      this.pokemon_species_id,
      this.pokemon_v2_pokedex,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemondexnumberOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  final InputpokemonV2PokedexOrderBy? pokemon_v2_pokedex;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$id,
      l$pokedex_id,
      l$pokedex_number,
      l$pokemon_species_id,
      l$pokemon_v2_pokedex,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_pokedex = pokemon_v2_pokedex;
    final lOther$pokemon_v2_pokedex = other.pokemon_v2_pokedex;
    if (l$pokemon_v2_pokedex != lOther$pokemon_v2_pokedex) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberStddevOrderBy {
  InputpokemonV2PokemondexnumberStddevOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberStddevPopOrderBy {
  InputpokemonV2PokemondexnumberStddevPopOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberStddevSampOrderBy {
  InputpokemonV2PokemondexnumberStddevSampOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberSumOrderBy {
  InputpokemonV2PokemondexnumberSumOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberVarPopOrderBy {
  InputpokemonV2PokemondexnumberVarPopOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberVarSampOrderBy {
  InputpokemonV2PokemondexnumberVarSampOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemondexnumberVarianceOrderBy {
  InputpokemonV2PokemondexnumberVarianceOrderBy(
      {this.id, this.pokedex_id, this.pokedex_number, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemondexnumberVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemondexnumberVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokedex_number;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemondexnumberVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokedex_id = pokedex_id;
    final l$pokedex_number = pokedex_number;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$id, l$pokedex_id, l$pokedex_number, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemondexnumberVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokedex_id = pokedex_id;
    final lOther$pokedex_id = other.pokedex_id;
    if (l$pokedex_id != lOther$pokedex_id) return false;
    final l$pokedex_number = pokedex_number;
    final lOther$pokedex_number = other.pokedex_number;
    if (l$pokedex_number != lOther$pokedex_number) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupAggregateOrderBy {
  InputpokemonV2PokemonegggroupAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonegggroupAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonegggroupAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonegggroupMaxOrderBy? max;

  final InputpokemonV2PokemonegggroupMinOrderBy? min;

  final InputpokemonV2PokemonegggroupStddevOrderBy? stddev;

  final InputpokemonV2PokemonegggroupStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonegggroupStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonegggroupSumOrderBy? sum;

  final InputpokemonV2PokemonegggroupVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonegggroupVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonegggroupVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupAvgOrderBy {
  InputpokemonV2PokemonegggroupAvgOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupAvgOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupBoolExp {
  InputpokemonV2PokemonegggroupBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.egg_group_id,
      this.id,
      this.pokemon_species_id,
      this.pokemon_v2_egggroup,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemonegggroupBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonegggroupBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonegggroupBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonegggroupBoolExp>? $_or;

  final InputIntComparisonExp? egg_group_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_species_id;

  final InputpokemonV2EgggroupBoolExp? pokemon_v2_egggroup;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_egggroup = pokemon_v2_egggroup;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$egg_group_id,
      l$id,
      l$pokemon_species_id,
      l$pokemon_v2_egggroup,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_egggroup = pokemon_v2_egggroup;
    final lOther$pokemon_v2_egggroup = other.pokemon_v2_egggroup;
    if (l$pokemon_v2_egggroup != lOther$pokemon_v2_egggroup) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupMaxOrderBy {
  InputpokemonV2PokemonegggroupMaxOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupMaxOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupMinOrderBy {
  InputpokemonV2PokemonegggroupMinOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupMinOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupOrderBy {
  InputpokemonV2PokemonegggroupOrderBy(
      {this.egg_group_id,
      this.id,
      this.pokemon_species_id,
      this.pokemon_v2_egggroup,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemonegggroupOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  final InputpokemonV2EgggroupOrderBy? pokemon_v2_egggroup;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_egggroup = pokemon_v2_egggroup;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$egg_group_id,
      l$id,
      l$pokemon_species_id,
      l$pokemon_v2_egggroup,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_egggroup = pokemon_v2_egggroup;
    final lOther$pokemon_v2_egggroup = other.pokemon_v2_egggroup;
    if (l$pokemon_v2_egggroup != lOther$pokemon_v2_egggroup) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupStddevOrderBy {
  InputpokemonV2PokemonegggroupStddevOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupStddevOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupStddevPopOrderBy {
  InputpokemonV2PokemonegggroupStddevPopOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupStddevPopOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupStddevSampOrderBy {
  InputpokemonV2PokemonegggroupStddevSampOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupStddevSampOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupSumOrderBy {
  InputpokemonV2PokemonegggroupSumOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupSumOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupVarPopOrderBy {
  InputpokemonV2PokemonegggroupVarPopOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupVarPopOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupVarSampOrderBy {
  InputpokemonV2PokemonegggroupVarSampOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupVarSampOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonegggroupVarianceOrderBy {
  InputpokemonV2PokemonegggroupVarianceOrderBy(
      {this.egg_group_id, this.id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonegggroupVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonegggroupVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? egg_group_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonegggroupVarianceOrderByToJson(this);
  int get hashCode {
    final l$egg_group_id = egg_group_id;
    final l$id = id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$egg_group_id, l$id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonegggroupVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$egg_group_id = egg_group_id;
    final lOther$egg_group_id = other.egg_group_id;
    if (l$egg_group_id != lOther$egg_group_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionAggregateOrderBy {
  InputpokemonV2PokemonevolutionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonevolutionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonevolutionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonevolutionMaxOrderBy? max;

  final InputpokemonV2PokemonevolutionMinOrderBy? min;

  final InputpokemonV2PokemonevolutionStddevOrderBy? stddev;

  final InputpokemonV2PokemonevolutionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonevolutionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonevolutionSumOrderBy? sum;

  final InputpokemonV2PokemonevolutionVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonevolutionVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonevolutionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionAvgOrderBy {
  InputpokemonV2PokemonevolutionAvgOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionAvgOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionBoolExp {
  InputpokemonV2PokemonevolutionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.needs_overworld_rain,
      this.party_species_id,
      this.party_type_id,
      this.pokemonV2ItemByHeldItemId,
      this.pokemonV2PokemonspecyByPartySpeciesId,
      this.pokemonV2PokemonspecyByTradeSpeciesId,
      this.pokemonV2TypeByPartyTypeId,
      this.pokemon_v2_evolutiontrigger,
      this.pokemon_v2_gender,
      this.pokemon_v2_item,
      this.pokemon_v2_location,
      this.pokemon_v2_move,
      this.pokemon_v2_pokemonspecy,
      this.pokemon_v2_type,
      this.relative_physical_stats,
      this.time_of_day,
      this.trade_species_id,
      this.turn_upside_down});

  @override
  factory InputpokemonV2PokemonevolutionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonevolutionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonevolutionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonevolutionBoolExp>? $_or;

  final InputIntComparisonExp? evolution_item_id;

  final InputIntComparisonExp? evolution_trigger_id;

  final InputIntComparisonExp? evolved_species_id;

  final InputIntComparisonExp? gender_id;

  final InputIntComparisonExp? held_item_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? known_move_id;

  final InputIntComparisonExp? known_move_type_id;

  final InputIntComparisonExp? location_id;

  final InputIntComparisonExp? min_affection;

  final InputIntComparisonExp? min_beauty;

  final InputIntComparisonExp? min_happiness;

  final InputIntComparisonExp? min_level;

  final InputBooleanComparisonExp? needs_overworld_rain;

  final InputIntComparisonExp? party_species_id;

  final InputIntComparisonExp? party_type_id;

  final InputpokemonV2ItemBoolExp? pokemonV2ItemByHeldItemId;

  final InputpokemonV2PokemonspeciesBoolExp?
      pokemonV2PokemonspecyByPartySpeciesId;

  final InputpokemonV2PokemonspeciesBoolExp?
      pokemonV2PokemonspecyByTradeSpeciesId;

  final InputpokemonV2TypeBoolExp? pokemonV2TypeByPartyTypeId;

  final InputpokemonV2EvolutiontriggerBoolExp? pokemon_v2_evolutiontrigger;

  final InputpokemonV2GenderBoolExp? pokemon_v2_gender;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2LocationBoolExp? pokemon_v2_location;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? relative_physical_stats;

  final InputStringComparisonExp? time_of_day;

  final InputIntComparisonExp? trade_species_id;

  final InputBooleanComparisonExp? turn_upside_down;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$needs_overworld_rain = needs_overworld_rain;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$pokemonV2ItemByHeldItemId = pokemonV2ItemByHeldItemId;
    final l$pokemonV2PokemonspecyByPartySpeciesId =
        pokemonV2PokemonspecyByPartySpeciesId;
    final l$pokemonV2PokemonspecyByTradeSpeciesId =
        pokemonV2PokemonspecyByTradeSpeciesId;
    final l$pokemonV2TypeByPartyTypeId = pokemonV2TypeByPartyTypeId;
    final l$pokemon_v2_evolutiontrigger = pokemon_v2_evolutiontrigger;
    final l$pokemon_v2_gender = pokemon_v2_gender;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_location = pokemon_v2_location;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$relative_physical_stats = relative_physical_stats;
    final l$time_of_day = time_of_day;
    final l$trade_species_id = trade_species_id;
    final l$turn_upside_down = turn_upside_down;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$needs_overworld_rain,
      l$party_species_id,
      l$party_type_id,
      l$pokemonV2ItemByHeldItemId,
      l$pokemonV2PokemonspecyByPartySpeciesId,
      l$pokemonV2PokemonspecyByTradeSpeciesId,
      l$pokemonV2TypeByPartyTypeId,
      l$pokemon_v2_evolutiontrigger,
      l$pokemon_v2_gender,
      l$pokemon_v2_item,
      l$pokemon_v2_location,
      l$pokemon_v2_move,
      l$pokemon_v2_pokemonspecy,
      l$pokemon_v2_type,
      l$relative_physical_stats,
      l$time_of_day,
      l$trade_species_id,
      l$turn_upside_down
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$needs_overworld_rain = needs_overworld_rain;
    final lOther$needs_overworld_rain = other.needs_overworld_rain;
    if (l$needs_overworld_rain != lOther$needs_overworld_rain) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$pokemonV2ItemByHeldItemId = pokemonV2ItemByHeldItemId;
    final lOther$pokemonV2ItemByHeldItemId = other.pokemonV2ItemByHeldItemId;
    if (l$pokemonV2ItemByHeldItemId != lOther$pokemonV2ItemByHeldItemId)
      return false;
    final l$pokemonV2PokemonspecyByPartySpeciesId =
        pokemonV2PokemonspecyByPartySpeciesId;
    final lOther$pokemonV2PokemonspecyByPartySpeciesId =
        other.pokemonV2PokemonspecyByPartySpeciesId;
    if (l$pokemonV2PokemonspecyByPartySpeciesId !=
        lOther$pokemonV2PokemonspecyByPartySpeciesId) return false;
    final l$pokemonV2PokemonspecyByTradeSpeciesId =
        pokemonV2PokemonspecyByTradeSpeciesId;
    final lOther$pokemonV2PokemonspecyByTradeSpeciesId =
        other.pokemonV2PokemonspecyByTradeSpeciesId;
    if (l$pokemonV2PokemonspecyByTradeSpeciesId !=
        lOther$pokemonV2PokemonspecyByTradeSpeciesId) return false;
    final l$pokemonV2TypeByPartyTypeId = pokemonV2TypeByPartyTypeId;
    final lOther$pokemonV2TypeByPartyTypeId = other.pokemonV2TypeByPartyTypeId;
    if (l$pokemonV2TypeByPartyTypeId != lOther$pokemonV2TypeByPartyTypeId)
      return false;
    final l$pokemon_v2_evolutiontrigger = pokemon_v2_evolutiontrigger;
    final lOther$pokemon_v2_evolutiontrigger =
        other.pokemon_v2_evolutiontrigger;
    if (l$pokemon_v2_evolutiontrigger != lOther$pokemon_v2_evolutiontrigger)
      return false;
    final l$pokemon_v2_gender = pokemon_v2_gender;
    final lOther$pokemon_v2_gender = other.pokemon_v2_gender;
    if (l$pokemon_v2_gender != lOther$pokemon_v2_gender) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_location = pokemon_v2_location;
    final lOther$pokemon_v2_location = other.pokemon_v2_location;
    if (l$pokemon_v2_location != lOther$pokemon_v2_location) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$time_of_day = time_of_day;
    final lOther$time_of_day = other.time_of_day;
    if (l$time_of_day != lOther$time_of_day) return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    final l$turn_upside_down = turn_upside_down;
    final lOther$turn_upside_down = other.turn_upside_down;
    if (l$turn_upside_down != lOther$turn_upside_down) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionMaxOrderBy {
  InputpokemonV2PokemonevolutionMaxOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.time_of_day,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? time_of_day;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionMaxOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$time_of_day = time_of_day;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$time_of_day,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$time_of_day = time_of_day;
    final lOther$time_of_day = other.time_of_day;
    if (l$time_of_day != lOther$time_of_day) return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionMinOrderBy {
  InputpokemonV2PokemonevolutionMinOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.time_of_day,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? time_of_day;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionMinOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$time_of_day = time_of_day;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$time_of_day,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$time_of_day = time_of_day;
    final lOther$time_of_day = other.time_of_day;
    if (l$time_of_day != lOther$time_of_day) return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionOrderBy {
  InputpokemonV2PokemonevolutionOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.needs_overworld_rain,
      this.party_species_id,
      this.party_type_id,
      this.pokemonV2ItemByHeldItemId,
      this.pokemonV2PokemonspecyByPartySpeciesId,
      this.pokemonV2PokemonspecyByTradeSpeciesId,
      this.pokemonV2TypeByPartyTypeId,
      this.pokemon_v2_evolutiontrigger,
      this.pokemon_v2_gender,
      this.pokemon_v2_item,
      this.pokemon_v2_location,
      this.pokemon_v2_move,
      this.pokemon_v2_pokemonspecy,
      this.pokemon_v2_type,
      this.relative_physical_stats,
      this.time_of_day,
      this.trade_species_id,
      this.turn_upside_down});

  @override
  factory InputpokemonV2PokemonevolutionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? needs_overworld_rain;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  final InputpokemonV2ItemOrderBy? pokemonV2ItemByHeldItemId;

  final InputpokemonV2PokemonspeciesOrderBy?
      pokemonV2PokemonspecyByPartySpeciesId;

  final InputpokemonV2PokemonspeciesOrderBy?
      pokemonV2PokemonspecyByTradeSpeciesId;

  final InputpokemonV2TypeOrderBy? pokemonV2TypeByPartyTypeId;

  final InputpokemonV2EvolutiontriggerOrderBy? pokemon_v2_evolutiontrigger;

  final InputpokemonV2GenderOrderBy? pokemon_v2_gender;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2LocationOrderBy? pokemon_v2_location;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? time_of_day;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? turn_upside_down;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$needs_overworld_rain = needs_overworld_rain;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$pokemonV2ItemByHeldItemId = pokemonV2ItemByHeldItemId;
    final l$pokemonV2PokemonspecyByPartySpeciesId =
        pokemonV2PokemonspecyByPartySpeciesId;
    final l$pokemonV2PokemonspecyByTradeSpeciesId =
        pokemonV2PokemonspecyByTradeSpeciesId;
    final l$pokemonV2TypeByPartyTypeId = pokemonV2TypeByPartyTypeId;
    final l$pokemon_v2_evolutiontrigger = pokemon_v2_evolutiontrigger;
    final l$pokemon_v2_gender = pokemon_v2_gender;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_location = pokemon_v2_location;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$relative_physical_stats = relative_physical_stats;
    final l$time_of_day = time_of_day;
    final l$trade_species_id = trade_species_id;
    final l$turn_upside_down = turn_upside_down;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$needs_overworld_rain,
      l$party_species_id,
      l$party_type_id,
      l$pokemonV2ItemByHeldItemId,
      l$pokemonV2PokemonspecyByPartySpeciesId,
      l$pokemonV2PokemonspecyByTradeSpeciesId,
      l$pokemonV2TypeByPartyTypeId,
      l$pokemon_v2_evolutiontrigger,
      l$pokemon_v2_gender,
      l$pokemon_v2_item,
      l$pokemon_v2_location,
      l$pokemon_v2_move,
      l$pokemon_v2_pokemonspecy,
      l$pokemon_v2_type,
      l$relative_physical_stats,
      l$time_of_day,
      l$trade_species_id,
      l$turn_upside_down
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$needs_overworld_rain = needs_overworld_rain;
    final lOther$needs_overworld_rain = other.needs_overworld_rain;
    if (l$needs_overworld_rain != lOther$needs_overworld_rain) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$pokemonV2ItemByHeldItemId = pokemonV2ItemByHeldItemId;
    final lOther$pokemonV2ItemByHeldItemId = other.pokemonV2ItemByHeldItemId;
    if (l$pokemonV2ItemByHeldItemId != lOther$pokemonV2ItemByHeldItemId)
      return false;
    final l$pokemonV2PokemonspecyByPartySpeciesId =
        pokemonV2PokemonspecyByPartySpeciesId;
    final lOther$pokemonV2PokemonspecyByPartySpeciesId =
        other.pokemonV2PokemonspecyByPartySpeciesId;
    if (l$pokemonV2PokemonspecyByPartySpeciesId !=
        lOther$pokemonV2PokemonspecyByPartySpeciesId) return false;
    final l$pokemonV2PokemonspecyByTradeSpeciesId =
        pokemonV2PokemonspecyByTradeSpeciesId;
    final lOther$pokemonV2PokemonspecyByTradeSpeciesId =
        other.pokemonV2PokemonspecyByTradeSpeciesId;
    if (l$pokemonV2PokemonspecyByTradeSpeciesId !=
        lOther$pokemonV2PokemonspecyByTradeSpeciesId) return false;
    final l$pokemonV2TypeByPartyTypeId = pokemonV2TypeByPartyTypeId;
    final lOther$pokemonV2TypeByPartyTypeId = other.pokemonV2TypeByPartyTypeId;
    if (l$pokemonV2TypeByPartyTypeId != lOther$pokemonV2TypeByPartyTypeId)
      return false;
    final l$pokemon_v2_evolutiontrigger = pokemon_v2_evolutiontrigger;
    final lOther$pokemon_v2_evolutiontrigger =
        other.pokemon_v2_evolutiontrigger;
    if (l$pokemon_v2_evolutiontrigger != lOther$pokemon_v2_evolutiontrigger)
      return false;
    final l$pokemon_v2_gender = pokemon_v2_gender;
    final lOther$pokemon_v2_gender = other.pokemon_v2_gender;
    if (l$pokemon_v2_gender != lOther$pokemon_v2_gender) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_location = pokemon_v2_location;
    final lOther$pokemon_v2_location = other.pokemon_v2_location;
    if (l$pokemon_v2_location != lOther$pokemon_v2_location) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$time_of_day = time_of_day;
    final lOther$time_of_day = other.time_of_day;
    if (l$time_of_day != lOther$time_of_day) return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    final l$turn_upside_down = turn_upside_down;
    final lOther$turn_upside_down = other.turn_upside_down;
    if (l$turn_upside_down != lOther$turn_upside_down) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionStddevOrderBy {
  InputpokemonV2PokemonevolutionStddevOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionStddevOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionStddevPopOrderBy {
  InputpokemonV2PokemonevolutionStddevPopOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionStddevSampOrderBy {
  InputpokemonV2PokemonevolutionStddevSampOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionSumOrderBy {
  InputpokemonV2PokemonevolutionSumOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionSumOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionVarPopOrderBy {
  InputpokemonV2PokemonevolutionVarPopOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionVarPopOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionVarSampOrderBy {
  InputpokemonV2PokemonevolutionVarSampOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionVarSampOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonevolutionVarianceOrderBy {
  InputpokemonV2PokemonevolutionVarianceOrderBy(
      {this.evolution_item_id,
      this.evolution_trigger_id,
      this.evolved_species_id,
      this.gender_id,
      this.held_item_id,
      this.id,
      this.known_move_id,
      this.known_move_type_id,
      this.location_id,
      this.min_affection,
      this.min_beauty,
      this.min_happiness,
      this.min_level,
      this.party_species_id,
      this.party_type_id,
      this.relative_physical_stats,
      this.trade_species_id});

  @override
  factory InputpokemonV2PokemonevolutionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonevolutionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_trigger_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolved_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? held_item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? known_move_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? location_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_affection;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_beauty;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? min_level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? party_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? relative_physical_stats;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? trade_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonevolutionVarianceOrderByToJson(this);
  int get hashCode {
    final l$evolution_item_id = evolution_item_id;
    final l$evolution_trigger_id = evolution_trigger_id;
    final l$evolved_species_id = evolved_species_id;
    final l$gender_id = gender_id;
    final l$held_item_id = held_item_id;
    final l$id = id;
    final l$known_move_id = known_move_id;
    final l$known_move_type_id = known_move_type_id;
    final l$location_id = location_id;
    final l$min_affection = min_affection;
    final l$min_beauty = min_beauty;
    final l$min_happiness = min_happiness;
    final l$min_level = min_level;
    final l$party_species_id = party_species_id;
    final l$party_type_id = party_type_id;
    final l$relative_physical_stats = relative_physical_stats;
    final l$trade_species_id = trade_species_id;
    return Object.hashAll([
      l$evolution_item_id,
      l$evolution_trigger_id,
      l$evolved_species_id,
      l$gender_id,
      l$held_item_id,
      l$id,
      l$known_move_id,
      l$known_move_type_id,
      l$location_id,
      l$min_affection,
      l$min_beauty,
      l$min_happiness,
      l$min_level,
      l$party_species_id,
      l$party_type_id,
      l$relative_physical_stats,
      l$trade_species_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonevolutionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$evolution_item_id = evolution_item_id;
    final lOther$evolution_item_id = other.evolution_item_id;
    if (l$evolution_item_id != lOther$evolution_item_id) return false;
    final l$evolution_trigger_id = evolution_trigger_id;
    final lOther$evolution_trigger_id = other.evolution_trigger_id;
    if (l$evolution_trigger_id != lOther$evolution_trigger_id) return false;
    final l$evolved_species_id = evolved_species_id;
    final lOther$evolved_species_id = other.evolved_species_id;
    if (l$evolved_species_id != lOther$evolved_species_id) return false;
    final l$gender_id = gender_id;
    final lOther$gender_id = other.gender_id;
    if (l$gender_id != lOther$gender_id) return false;
    final l$held_item_id = held_item_id;
    final lOther$held_item_id = other.held_item_id;
    if (l$held_item_id != lOther$held_item_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$known_move_id = known_move_id;
    final lOther$known_move_id = other.known_move_id;
    if (l$known_move_id != lOther$known_move_id) return false;
    final l$known_move_type_id = known_move_type_id;
    final lOther$known_move_type_id = other.known_move_type_id;
    if (l$known_move_type_id != lOther$known_move_type_id) return false;
    final l$location_id = location_id;
    final lOther$location_id = other.location_id;
    if (l$location_id != lOther$location_id) return false;
    final l$min_affection = min_affection;
    final lOther$min_affection = other.min_affection;
    if (l$min_affection != lOther$min_affection) return false;
    final l$min_beauty = min_beauty;
    final lOther$min_beauty = other.min_beauty;
    if (l$min_beauty != lOther$min_beauty) return false;
    final l$min_happiness = min_happiness;
    final lOther$min_happiness = other.min_happiness;
    if (l$min_happiness != lOther$min_happiness) return false;
    final l$min_level = min_level;
    final lOther$min_level = other.min_level;
    if (l$min_level != lOther$min_level) return false;
    final l$party_species_id = party_species_id;
    final lOther$party_species_id = other.party_species_id;
    if (l$party_species_id != lOther$party_species_id) return false;
    final l$party_type_id = party_type_id;
    final lOther$party_type_id = other.party_type_id;
    if (l$party_type_id != lOther$party_type_id) return false;
    final l$relative_physical_stats = relative_physical_stats;
    final lOther$relative_physical_stats = other.relative_physical_stats;
    if (l$relative_physical_stats != lOther$relative_physical_stats)
      return false;
    final l$trade_species_id = trade_species_id;
    final lOther$trade_species_id = other.trade_species_id;
    if (l$trade_species_id != lOther$trade_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformAggregateOrderBy {
  InputpokemonV2PokemonformAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonformAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonformAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonformMaxOrderBy? max;

  final InputpokemonV2PokemonformMinOrderBy? min;

  final InputpokemonV2PokemonformStddevOrderBy? stddev;

  final InputpokemonV2PokemonformStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonformStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonformSumOrderBy? sum;

  final InputpokemonV2PokemonformVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonformVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonformVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformAvgOrderBy {
  InputpokemonV2PokemonformAvgOrderBy(
      {this.form_order,
      this.id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformAvgOrderByToJson(this);
  int get hashCode {
    final l$form_order = form_order;
    final l$id = id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$form_order, l$id, l$order, l$pokemon_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformBoolExp {
  InputpokemonV2PokemonformBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.form_name,
      this.form_order,
      this.id,
      this.is_battle_only,
      this.is_default,
      this.is_mega,
      this.name,
      this.order,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_pokemonformgenerations,
      this.pokemon_v2_pokemonformnames,
      this.pokemon_v2_pokemonformsprites,
      this.pokemon_v2_pokemonformtypes,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonformBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonformBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonformBoolExp>? $_or;

  final InputStringComparisonExp? form_name;

  final InputIntComparisonExp? form_order;

  final InputIntComparisonExp? id;

  final InputBooleanComparisonExp? is_battle_only;

  final InputBooleanComparisonExp? is_default;

  final InputBooleanComparisonExp? is_mega;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? order;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputpokemonV2PokemonformgenerationBoolExp?
      pokemon_v2_pokemonformgenerations;

  final InputpokemonV2PokemonformnameBoolExp? pokemon_v2_pokemonformnames;

  final InputpokemonV2PokemonformspritesBoolExp? pokemon_v2_pokemonformsprites;

  final InputpokemonV2PokemonformtypeBoolExp? pokemon_v2_pokemonformtypes;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$form_name = form_name;
    final l$form_order = form_order;
    final l$id = id;
    final l$is_battle_only = is_battle_only;
    final l$is_default = is_default;
    final l$is_mega = is_mega;
    final l$name = name;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_pokemonformgenerations =
        pokemon_v2_pokemonformgenerations;
    final l$pokemon_v2_pokemonformnames = pokemon_v2_pokemonformnames;
    final l$pokemon_v2_pokemonformsprites = pokemon_v2_pokemonformsprites;
    final l$pokemon_v2_pokemonformtypes = pokemon_v2_pokemonformtypes;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$form_name,
      l$form_order,
      l$id,
      l$is_battle_only,
      l$is_default,
      l$is_mega,
      l$name,
      l$order,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_pokemonformgenerations,
      l$pokemon_v2_pokemonformnames,
      l$pokemon_v2_pokemonformsprites,
      l$pokemon_v2_pokemonformtypes,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$form_name = form_name;
    final lOther$form_name = other.form_name;
    if (l$form_name != lOther$form_name) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_battle_only = is_battle_only;
    final lOther$is_battle_only = other.is_battle_only;
    if (l$is_battle_only != lOther$is_battle_only) return false;
    final l$is_default = is_default;
    final lOther$is_default = other.is_default;
    if (l$is_default != lOther$is_default) return false;
    final l$is_mega = is_mega;
    final lOther$is_mega = other.is_mega;
    if (l$is_mega != lOther$is_mega) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_pokemonformgenerations =
        pokemon_v2_pokemonformgenerations;
    final lOther$pokemon_v2_pokemonformgenerations =
        other.pokemon_v2_pokemonformgenerations;
    if (l$pokemon_v2_pokemonformgenerations !=
        lOther$pokemon_v2_pokemonformgenerations) return false;
    final l$pokemon_v2_pokemonformnames = pokemon_v2_pokemonformnames;
    final lOther$pokemon_v2_pokemonformnames =
        other.pokemon_v2_pokemonformnames;
    if (l$pokemon_v2_pokemonformnames != lOther$pokemon_v2_pokemonformnames)
      return false;
    final l$pokemon_v2_pokemonformsprites = pokemon_v2_pokemonformsprites;
    final lOther$pokemon_v2_pokemonformsprites =
        other.pokemon_v2_pokemonformsprites;
    if (l$pokemon_v2_pokemonformsprites != lOther$pokemon_v2_pokemonformsprites)
      return false;
    final l$pokemon_v2_pokemonformtypes = pokemon_v2_pokemonformtypes;
    final lOther$pokemon_v2_pokemonformtypes =
        other.pokemon_v2_pokemonformtypes;
    if (l$pokemon_v2_pokemonformtypes != lOther$pokemon_v2_pokemonformtypes)
      return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformMaxOrderBy {
  InputpokemonV2PokemonformMaxOrderBy(
      {this.form_name,
      this.form_order,
      this.id,
      this.name,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformMaxOrderByToJson(this);
  int get hashCode {
    final l$form_name = form_name;
    final l$form_order = form_order;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$form_name,
      l$form_order,
      l$id,
      l$name,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_name = form_name;
    final lOther$form_name = other.form_name;
    if (l$form_name != lOther$form_name) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformMinOrderBy {
  InputpokemonV2PokemonformMinOrderBy(
      {this.form_name,
      this.form_order,
      this.id,
      this.name,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformMinOrderByToJson(this);
  int get hashCode {
    final l$form_name = form_name;
    final l$form_order = form_order;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$form_name,
      l$form_order,
      l$id,
      l$name,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_name = form_name;
    final lOther$form_name = other.form_name;
    if (l$form_name != lOther$form_name) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformOrderBy {
  InputpokemonV2PokemonformOrderBy(
      {this.form_name,
      this.form_order,
      this.id,
      this.is_battle_only,
      this.is_default,
      this.is_mega,
      this.name,
      this.order,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_pokemonformgenerations_aggregate,
      this.pokemon_v2_pokemonformnames_aggregate,
      this.pokemon_v2_pokemonformsprites_aggregate,
      this.pokemon_v2_pokemonformtypes_aggregate,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_battle_only;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_default;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_mega;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  final InputpokemonV2PokemonformgenerationAggregateOrderBy?
      pokemon_v2_pokemonformgenerations_aggregate;

  final InputpokemonV2PokemonformnameAggregateOrderBy?
      pokemon_v2_pokemonformnames_aggregate;

  final InputpokemonV2PokemonformspritesAggregateOrderBy?
      pokemon_v2_pokemonformsprites_aggregate;

  final InputpokemonV2PokemonformtypeAggregateOrderBy?
      pokemon_v2_pokemonformtypes_aggregate;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformOrderByToJson(this);
  int get hashCode {
    final l$form_name = form_name;
    final l$form_order = form_order;
    final l$id = id;
    final l$is_battle_only = is_battle_only;
    final l$is_default = is_default;
    final l$is_mega = is_mega;
    final l$name = name;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_pokemonformgenerations_aggregate =
        pokemon_v2_pokemonformgenerations_aggregate;
    final l$pokemon_v2_pokemonformnames_aggregate =
        pokemon_v2_pokemonformnames_aggregate;
    final l$pokemon_v2_pokemonformsprites_aggregate =
        pokemon_v2_pokemonformsprites_aggregate;
    final l$pokemon_v2_pokemonformtypes_aggregate =
        pokemon_v2_pokemonformtypes_aggregate;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$form_name,
      l$form_order,
      l$id,
      l$is_battle_only,
      l$is_default,
      l$is_mega,
      l$name,
      l$order,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_pokemonformgenerations_aggregate,
      l$pokemon_v2_pokemonformnames_aggregate,
      l$pokemon_v2_pokemonformsprites_aggregate,
      l$pokemon_v2_pokemonformtypes_aggregate,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_name = form_name;
    final lOther$form_name = other.form_name;
    if (l$form_name != lOther$form_name) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_battle_only = is_battle_only;
    final lOther$is_battle_only = other.is_battle_only;
    if (l$is_battle_only != lOther$is_battle_only) return false;
    final l$is_default = is_default;
    final lOther$is_default = other.is_default;
    if (l$is_default != lOther$is_default) return false;
    final l$is_mega = is_mega;
    final lOther$is_mega = other.is_mega;
    if (l$is_mega != lOther$is_mega) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_pokemonformgenerations_aggregate =
        pokemon_v2_pokemonformgenerations_aggregate;
    final lOther$pokemon_v2_pokemonformgenerations_aggregate =
        other.pokemon_v2_pokemonformgenerations_aggregate;
    if (l$pokemon_v2_pokemonformgenerations_aggregate !=
        lOther$pokemon_v2_pokemonformgenerations_aggregate) return false;
    final l$pokemon_v2_pokemonformnames_aggregate =
        pokemon_v2_pokemonformnames_aggregate;
    final lOther$pokemon_v2_pokemonformnames_aggregate =
        other.pokemon_v2_pokemonformnames_aggregate;
    if (l$pokemon_v2_pokemonformnames_aggregate !=
        lOther$pokemon_v2_pokemonformnames_aggregate) return false;
    final l$pokemon_v2_pokemonformsprites_aggregate =
        pokemon_v2_pokemonformsprites_aggregate;
    final lOther$pokemon_v2_pokemonformsprites_aggregate =
        other.pokemon_v2_pokemonformsprites_aggregate;
    if (l$pokemon_v2_pokemonformsprites_aggregate !=
        lOther$pokemon_v2_pokemonformsprites_aggregate) return false;
    final l$pokemon_v2_pokemonformtypes_aggregate =
        pokemon_v2_pokemonformtypes_aggregate;
    final lOther$pokemon_v2_pokemonformtypes_aggregate =
        other.pokemon_v2_pokemonformtypes_aggregate;
    if (l$pokemon_v2_pokemonformtypes_aggregate !=
        lOther$pokemon_v2_pokemonformtypes_aggregate) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformStddevOrderBy {
  InputpokemonV2PokemonformStddevOrderBy(
      {this.form_order,
      this.id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformStddevOrderByToJson(this);
  int get hashCode {
    final l$form_order = form_order;
    final l$id = id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$form_order, l$id, l$order, l$pokemon_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformStddevPopOrderBy {
  InputpokemonV2PokemonformStddevPopOrderBy(
      {this.form_order,
      this.id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformStddevPopOrderByToJson(this);
  int get hashCode {
    final l$form_order = form_order;
    final l$id = id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$form_order, l$id, l$order, l$pokemon_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformStddevSampOrderBy {
  InputpokemonV2PokemonformStddevSampOrderBy(
      {this.form_order,
      this.id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformStddevSampOrderByToJson(this);
  int get hashCode {
    final l$form_order = form_order;
    final l$id = id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$form_order, l$id, l$order, l$pokemon_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformSumOrderBy {
  InputpokemonV2PokemonformSumOrderBy(
      {this.form_order,
      this.id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformSumOrderByToJson(this);
  int get hashCode {
    final l$form_order = form_order;
    final l$id = id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$form_order, l$id, l$order, l$pokemon_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformVarPopOrderBy {
  InputpokemonV2PokemonformVarPopOrderBy(
      {this.form_order,
      this.id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformVarPopOrderByToJson(this);
  int get hashCode {
    final l$form_order = form_order;
    final l$id = id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$form_order, l$id, l$order, l$pokemon_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformVarSampOrderBy {
  InputpokemonV2PokemonformVarSampOrderBy(
      {this.form_order,
      this.id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformVarSampOrderByToJson(this);
  int get hashCode {
    final l$form_order = form_order;
    final l$id = id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$form_order, l$id, l$order, l$pokemon_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformVarianceOrderBy {
  InputpokemonV2PokemonformVarianceOrderBy(
      {this.form_order,
      this.id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonformVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? form_order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformVarianceOrderByToJson(this);
  int get hashCode {
    final l$form_order = form_order;
    final l$id = id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll(
        [l$form_order, l$id, l$order, l$pokemon_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$form_order = form_order;
    final lOther$form_order = other.form_order;
    if (l$form_order != lOther$form_order) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationAggregateOrderBy {
  InputpokemonV2PokemonformgenerationAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonformgenerationAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonformgenerationAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonformgenerationMaxOrderBy? max;

  final InputpokemonV2PokemonformgenerationMinOrderBy? min;

  final InputpokemonV2PokemonformgenerationStddevOrderBy? stddev;

  final InputpokemonV2PokemonformgenerationStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonformgenerationStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonformgenerationSumOrderBy? sum;

  final InputpokemonV2PokemonformgenerationVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonformgenerationVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonformgenerationVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationAvgOrderBy {
  InputpokemonV2PokemonformgenerationAvgOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationAvgOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationBoolExp {
  InputpokemonV2PokemonformgenerationBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.game_index,
      this.generation_id,
      this.id,
      this.pokemon_form_id,
      this.pokemon_v2_generation,
      this.pokemon_v2_pokemonform});

  @override
  factory InputpokemonV2PokemonformgenerationBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonformgenerationBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonformgenerationBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonformgenerationBoolExp>? $_or;

  final InputIntComparisonExp? game_index;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_form_id;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2PokemonformBoolExp? pokemon_v2_pokemonform;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$game_index,
      l$generation_id,
      l$id,
      l$pokemon_form_id,
      l$pokemon_v2_generation,
      l$pokemon_v2_pokemonform
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final lOther$pokemon_v2_pokemonform = other.pokemon_v2_pokemonform;
    if (l$pokemon_v2_pokemonform != lOther$pokemon_v2_pokemonform) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationMaxOrderBy {
  InputpokemonV2PokemonformgenerationMaxOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationMaxOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationMinOrderBy {
  InputpokemonV2PokemonformgenerationMinOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationMinOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationOrderBy {
  InputpokemonV2PokemonformgenerationOrderBy(
      {this.game_index,
      this.generation_id,
      this.id,
      this.pokemon_form_id,
      this.pokemon_v2_generation,
      this.pokemon_v2_pokemonform});

  @override
  factory InputpokemonV2PokemonformgenerationOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2PokemonformOrderBy? pokemon_v2_pokemonform;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    return Object.hashAll([
      l$game_index,
      l$generation_id,
      l$id,
      l$pokemon_form_id,
      l$pokemon_v2_generation,
      l$pokemon_v2_pokemonform
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final lOther$pokemon_v2_pokemonform = other.pokemon_v2_pokemonform;
    if (l$pokemon_v2_pokemonform != lOther$pokemon_v2_pokemonform) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationStddevOrderBy {
  InputpokemonV2PokemonformgenerationStddevOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationStddevOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationStddevPopOrderBy {
  InputpokemonV2PokemonformgenerationStddevPopOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationStddevPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationStddevSampOrderBy {
  InputpokemonV2PokemonformgenerationStddevSampOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationStddevSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationSumOrderBy {
  InputpokemonV2PokemonformgenerationSumOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationSumOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationVarPopOrderBy {
  InputpokemonV2PokemonformgenerationVarPopOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationVarPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationVarSampOrderBy {
  InputpokemonV2PokemonformgenerationVarSampOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationVarSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformgenerationVarianceOrderBy {
  InputpokemonV2PokemonformgenerationVarianceOrderBy(
      {this.game_index, this.generation_id, this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformgenerationVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformgenerationVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformgenerationVarianceOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll(
        [l$game_index, l$generation_id, l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformgenerationVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameAggregateOrderBy {
  InputpokemonV2PokemonformnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonformnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonformnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonformnameMaxOrderBy? max;

  final InputpokemonV2PokemonformnameMinOrderBy? min;

  final InputpokemonV2PokemonformnameStddevOrderBy? stddev;

  final InputpokemonV2PokemonformnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonformnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonformnameSumOrderBy? sum;

  final InputpokemonV2PokemonformnameVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonformnameVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonformnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameAvgOrderBy {
  InputpokemonV2PokemonformnameAvgOrderBy(
      {this.id, this.language_id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameBoolExp {
  InputpokemonV2PokemonformnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_form_id,
      this.pokemon_name,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonform});

  @override
  factory InputpokemonV2PokemonformnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonformnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonformnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonformnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? pokemon_form_id;

  final InputStringComparisonExp? pokemon_name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokemonformBoolExp? pokemon_v2_pokemonform;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_name = pokemon_name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokemon_form_id,
      l$pokemon_name,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonform
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_name = pokemon_name;
    final lOther$pokemon_name = other.pokemon_name;
    if (l$pokemon_name != lOther$pokemon_name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final lOther$pokemon_v2_pokemonform = other.pokemon_v2_pokemonform;
    if (l$pokemon_v2_pokemonform != lOther$pokemon_v2_pokemonform) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameMaxOrderBy {
  InputpokemonV2PokemonformnameMaxOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_form_id,
      this.pokemon_name});

  @override
  factory InputpokemonV2PokemonformnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_name = pokemon_name;
    return Object.hashAll(
        [l$id, l$language_id, l$name, l$pokemon_form_id, l$pokemon_name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_name = pokemon_name;
    final lOther$pokemon_name = other.pokemon_name;
    if (l$pokemon_name != lOther$pokemon_name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameMinOrderBy {
  InputpokemonV2PokemonformnameMinOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_form_id,
      this.pokemon_name});

  @override
  factory InputpokemonV2PokemonformnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_name;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_name = pokemon_name;
    return Object.hashAll(
        [l$id, l$language_id, l$name, l$pokemon_form_id, l$pokemon_name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_name = pokemon_name;
    final lOther$pokemon_name = other.pokemon_name;
    if (l$pokemon_name != lOther$pokemon_name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameOrderBy {
  InputpokemonV2PokemonformnameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_form_id,
      this.pokemon_name,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonform});

  @override
  factory InputpokemonV2PokemonformnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokemonformOrderBy? pokemon_v2_pokemonform;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_name = pokemon_name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokemon_form_id,
      l$pokemon_name,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonform
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_name = pokemon_name;
    final lOther$pokemon_name = other.pokemon_name;
    if (l$pokemon_name != lOther$pokemon_name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final lOther$pokemon_v2_pokemonform = other.pokemon_v2_pokemonform;
    if (l$pokemon_v2_pokemonform != lOther$pokemon_v2_pokemonform) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameStddevOrderBy {
  InputpokemonV2PokemonformnameStddevOrderBy(
      {this.id, this.language_id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameStddevPopOrderBy {
  InputpokemonV2PokemonformnameStddevPopOrderBy(
      {this.id, this.language_id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameStddevSampOrderBy {
  InputpokemonV2PokemonformnameStddevSampOrderBy(
      {this.id, this.language_id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameSumOrderBy {
  InputpokemonV2PokemonformnameSumOrderBy(
      {this.id, this.language_id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameVarPopOrderBy {
  InputpokemonV2PokemonformnameVarPopOrderBy(
      {this.id, this.language_id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameVarSampOrderBy {
  InputpokemonV2PokemonformnameVarSampOrderBy(
      {this.id, this.language_id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformnameVarianceOrderBy {
  InputpokemonV2PokemonformnameVarianceOrderBy(
      {this.id, this.language_id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesAggregateOrderBy {
  InputpokemonV2PokemonformspritesAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonformspritesAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonformspritesAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonformspritesMaxOrderBy? max;

  final InputpokemonV2PokemonformspritesMinOrderBy? min;

  final InputpokemonV2PokemonformspritesStddevOrderBy? stddev;

  final InputpokemonV2PokemonformspritesStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonformspritesStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonformspritesSumOrderBy? sum;

  final InputpokemonV2PokemonformspritesVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonformspritesVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonformspritesVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesAvgOrderBy {
  InputpokemonV2PokemonformspritesAvgOrderBy({this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformspritesAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesBoolExp {
  InputpokemonV2PokemonformspritesBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.pokemon_form_id,
      this.pokemon_v2_pokemonform,
      this.sprites});

  @override
  factory InputpokemonV2PokemonformspritesBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonformspritesBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonformspritesBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonformspritesBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_form_id;

  final InputpokemonV2PokemonformBoolExp? pokemon_v2_pokemonform;

  final InputStringComparisonExp? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final l$sprites = sprites;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$pokemon_form_id,
      l$pokemon_v2_pokemonform,
      l$sprites
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final lOther$pokemon_v2_pokemonform = other.pokemon_v2_pokemonform;
    if (l$pokemon_v2_pokemonform != lOther$pokemon_v2_pokemonform) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesMaxOrderBy {
  InputpokemonV2PokemonformspritesMaxOrderBy(
      {this.id, this.pokemon_form_id, this.sprites});

  @override
  factory InputpokemonV2PokemonformspritesMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$sprites = sprites;
    return Object.hashAll([l$id, l$pokemon_form_id, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesMinOrderBy {
  InputpokemonV2PokemonformspritesMinOrderBy(
      {this.id, this.pokemon_form_id, this.sprites});

  @override
  factory InputpokemonV2PokemonformspritesMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$sprites = sprites;
    return Object.hashAll([l$id, l$pokemon_form_id, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesOrderBy {
  InputpokemonV2PokemonformspritesOrderBy(
      {this.id,
      this.pokemon_form_id,
      this.pokemon_v2_pokemonform,
      this.sprites});

  @override
  factory InputpokemonV2PokemonformspritesOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  final InputpokemonV2PokemonformOrderBy? pokemon_v2_pokemonform;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final l$sprites = sprites;
    return Object.hashAll(
        [l$id, l$pokemon_form_id, l$pokemon_v2_pokemonform, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final lOther$pokemon_v2_pokemonform = other.pokemon_v2_pokemonform;
    if (l$pokemon_v2_pokemonform != lOther$pokemon_v2_pokemonform) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesStddevOrderBy {
  InputpokemonV2PokemonformspritesStddevOrderBy(
      {this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformspritesStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesStddevPopOrderBy {
  InputpokemonV2PokemonformspritesStddevPopOrderBy(
      {this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformspritesStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesStddevSampOrderBy {
  InputpokemonV2PokemonformspritesStddevSampOrderBy(
      {this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformspritesStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesSumOrderBy {
  InputpokemonV2PokemonformspritesSumOrderBy({this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformspritesSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesVarPopOrderBy {
  InputpokemonV2PokemonformspritesVarPopOrderBy(
      {this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformspritesVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesVarSampOrderBy {
  InputpokemonV2PokemonformspritesVarSampOrderBy(
      {this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformspritesVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformspritesVarianceOrderBy {
  InputpokemonV2PokemonformspritesVarianceOrderBy(
      {this.id, this.pokemon_form_id});

  @override
  factory InputpokemonV2PokemonformspritesVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformspritesVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformspritesVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    return Object.hashAll([l$id, l$pokemon_form_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformspritesVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeAggregateOrderBy {
  InputpokemonV2PokemonformtypeAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonformtypeAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonformtypeAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonformtypeMaxOrderBy? max;

  final InputpokemonV2PokemonformtypeMinOrderBy? min;

  final InputpokemonV2PokemonformtypeStddevOrderBy? stddev;

  final InputpokemonV2PokemonformtypeStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonformtypeStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonformtypeSumOrderBy? sum;

  final InputpokemonV2PokemonformtypeVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonformtypeVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonformtypeVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeAvgOrderBy {
  InputpokemonV2PokemonformtypeAvgOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeBoolExp {
  InputpokemonV2PokemonformtypeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.pokemon_form_id,
      this.pokemon_v2_pokemonform,
      this.pokemon_v2_type,
      this.slot,
      this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonformtypeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonformtypeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonformtypeBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_form_id;

  final InputpokemonV2PokemonformBoolExp? pokemon_v2_pokemonform;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? slot;

  final InputIntComparisonExp? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$pokemon_form_id,
      l$pokemon_v2_pokemonform,
      l$pokemon_v2_type,
      l$slot,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final lOther$pokemon_v2_pokemonform = other.pokemon_v2_pokemonform;
    if (l$pokemon_v2_pokemonform != lOther$pokemon_v2_pokemonform) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeMaxOrderBy {
  InputpokemonV2PokemonformtypeMaxOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeMinOrderBy {
  InputpokemonV2PokemonformtypeMinOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeOrderBy {
  InputpokemonV2PokemonformtypeOrderBy(
      {this.id,
      this.pokemon_form_id,
      this.pokemon_v2_pokemonform,
      this.pokemon_v2_type,
      this.slot,
      this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  final InputpokemonV2PokemonformOrderBy? pokemon_v2_pokemonform;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([
      l$id,
      l$pokemon_form_id,
      l$pokemon_v2_pokemonform,
      l$pokemon_v2_type,
      l$slot,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$pokemon_v2_pokemonform = pokemon_v2_pokemonform;
    final lOther$pokemon_v2_pokemonform = other.pokemon_v2_pokemonform;
    if (l$pokemon_v2_pokemonform != lOther$pokemon_v2_pokemonform) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeStddevOrderBy {
  InputpokemonV2PokemonformtypeStddevOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeStddevPopOrderBy {
  InputpokemonV2PokemonformtypeStddevPopOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeStddevSampOrderBy {
  InputpokemonV2PokemonformtypeStddevSampOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeSumOrderBy {
  InputpokemonV2PokemonformtypeSumOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeVarPopOrderBy {
  InputpokemonV2PokemonformtypeVarPopOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeVarSampOrderBy {
  InputpokemonV2PokemonformtypeVarSampOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonformtypeVarianceOrderBy {
  InputpokemonV2PokemonformtypeVarianceOrderBy(
      {this.id, this.pokemon_form_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemonformtypeVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonformtypeVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_form_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonformtypeVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_form_id = pokemon_form_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_form_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonformtypeVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_form_id = pokemon_form_id;
    final lOther$pokemon_form_id = other.pokemon_form_id;
    if (l$pokemon_form_id != lOther$pokemon_form_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexAggregateOrderBy {
  InputpokemonV2PokemongameindexAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemongameindexAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexAggregateOrderByFromJson(json);

  final InputpokemonV2PokemongameindexAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemongameindexMaxOrderBy? max;

  final InputpokemonV2PokemongameindexMinOrderBy? min;

  final InputpokemonV2PokemongameindexStddevOrderBy? stddev;

  final InputpokemonV2PokemongameindexStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemongameindexStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemongameindexSumOrderBy? sum;

  final InputpokemonV2PokemongameindexVarPopOrderBy? var_pop;

  final InputpokemonV2PokemongameindexVarSampOrderBy? var_samp;

  final InputpokemonV2PokemongameindexVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexAvgOrderBy {
  InputpokemonV2PokemongameindexAvgOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexAvgOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexBoolExp {
  InputpokemonV2PokemongameindexBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.game_index,
      this.id,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_version,
      this.version_id});

  @override
  factory InputpokemonV2PokemongameindexBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemongameindexBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemongameindexBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemongameindexBoolExp>? $_or;

  final InputIntComparisonExp? game_index;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputpokemonV2VersionBoolExp? pokemon_v2_version;

  final InputIntComparisonExp? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$version_id = version_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$game_index,
      l$id,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_version,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexMaxOrderBy {
  InputpokemonV2PokemongameindexMaxOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexMaxOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexMinOrderBy {
  InputpokemonV2PokemongameindexMinOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexMinOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexOrderBy {
  InputpokemonV2PokemongameindexOrderBy(
      {this.game_index,
      this.id,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_version,
      this.version_id});

  @override
  factory InputpokemonV2PokemongameindexOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  final InputpokemonV2VersionOrderBy? pokemon_v2_version;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$version_id = version_id;
    return Object.hashAll([
      l$game_index,
      l$id,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_version,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexStddevOrderBy {
  InputpokemonV2PokemongameindexStddevOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexStddevOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexStddevPopOrderBy {
  InputpokemonV2PokemongameindexStddevPopOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexStddevPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexStddevSampOrderBy {
  InputpokemonV2PokemongameindexStddevSampOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexStddevSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexSumOrderBy {
  InputpokemonV2PokemongameindexSumOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexSumOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexVarPopOrderBy {
  InputpokemonV2PokemongameindexVarPopOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexVarPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexVarSampOrderBy {
  InputpokemonV2PokemongameindexVarSampOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexVarSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemongameindexVarianceOrderBy {
  InputpokemonV2PokemongameindexVarianceOrderBy(
      {this.game_index, this.id, this.pokemon_id, this.version_id});

  @override
  factory InputpokemonV2PokemongameindexVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemongameindexVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemongameindexVarianceOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$version_id = version_id;
    return Object.hashAll([l$game_index, l$id, l$pokemon_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemongameindexVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatBoolExp {
  InputpokemonV2PokemonhabitatBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_pokemonhabitatnames,
      this.pokemon_v2_pokemonspecies});

  @override
  factory InputpokemonV2PokemonhabitatBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonhabitatBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonhabitatBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonhabitatBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2PokemonhabitatnameBoolExp? pokemon_v2_pokemonhabitatnames;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecies;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_pokemonhabitatnames = pokemon_v2_pokemonhabitatnames;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_pokemonhabitatnames,
      l$pokemon_v2_pokemonspecies
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokemonhabitatnames = pokemon_v2_pokemonhabitatnames;
    final lOther$pokemon_v2_pokemonhabitatnames =
        other.pokemon_v2_pokemonhabitatnames;
    if (l$pokemon_v2_pokemonhabitatnames !=
        lOther$pokemon_v2_pokemonhabitatnames) return false;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final lOther$pokemon_v2_pokemonspecies = other.pokemon_v2_pokemonspecies;
    if (l$pokemon_v2_pokemonspecies != lOther$pokemon_v2_pokemonspecies)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatOrderBy {
  InputpokemonV2PokemonhabitatOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_pokemonhabitatnames_aggregate,
      this.pokemon_v2_pokemonspecies_aggregate});

  @override
  factory InputpokemonV2PokemonhabitatOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2PokemonhabitatnameAggregateOrderBy?
      pokemon_v2_pokemonhabitatnames_aggregate;

  final InputpokemonV2PokemonspeciesAggregateOrderBy?
      pokemon_v2_pokemonspecies_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_pokemonhabitatnames_aggregate =
        pokemon_v2_pokemonhabitatnames_aggregate;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_pokemonhabitatnames_aggregate,
      l$pokemon_v2_pokemonspecies_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokemonhabitatnames_aggregate =
        pokemon_v2_pokemonhabitatnames_aggregate;
    final lOther$pokemon_v2_pokemonhabitatnames_aggregate =
        other.pokemon_v2_pokemonhabitatnames_aggregate;
    if (l$pokemon_v2_pokemonhabitatnames_aggregate !=
        lOther$pokemon_v2_pokemonhabitatnames_aggregate) return false;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final lOther$pokemon_v2_pokemonspecies_aggregate =
        other.pokemon_v2_pokemonspecies_aggregate;
    if (l$pokemon_v2_pokemonspecies_aggregate !=
        lOther$pokemon_v2_pokemonspecies_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameAggregateOrderBy {
  InputpokemonV2PokemonhabitatnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonhabitatnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonhabitatnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonhabitatnameMaxOrderBy? max;

  final InputpokemonV2PokemonhabitatnameMinOrderBy? min;

  final InputpokemonV2PokemonhabitatnameStddevOrderBy? stddev;

  final InputpokemonV2PokemonhabitatnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonhabitatnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonhabitatnameSumOrderBy? sum;

  final InputpokemonV2PokemonhabitatnameVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonhabitatnameVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonhabitatnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameAvgOrderBy {
  InputpokemonV2PokemonhabitatnameAvgOrderBy(
      {this.id, this.language_id, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameBoolExp {
  InputpokemonV2PokemonhabitatnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_habitat_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonhabitat});

  @override
  factory InputpokemonV2PokemonhabitatnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonhabitatnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonhabitatnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonhabitatnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? pokemon_habitat_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokemonhabitatBoolExp? pokemon_v2_pokemonhabitat;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonhabitat = pokemon_v2_pokemonhabitat;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokemon_habitat_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonhabitat
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonhabitat = pokemon_v2_pokemonhabitat;
    final lOther$pokemon_v2_pokemonhabitat = other.pokemon_v2_pokemonhabitat;
    if (l$pokemon_v2_pokemonhabitat != lOther$pokemon_v2_pokemonhabitat)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameMaxOrderBy {
  InputpokemonV2PokemonhabitatnameMaxOrderBy(
      {this.id, this.language_id, this.name, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameMinOrderBy {
  InputpokemonV2PokemonhabitatnameMinOrderBy(
      {this.id, this.language_id, this.name, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameOrderBy {
  InputpokemonV2PokemonhabitatnameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_habitat_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonhabitat});

  @override
  factory InputpokemonV2PokemonhabitatnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokemonhabitatOrderBy? pokemon_v2_pokemonhabitat;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonhabitat = pokemon_v2_pokemonhabitat;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokemon_habitat_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonhabitat
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonhabitat = pokemon_v2_pokemonhabitat;
    final lOther$pokemon_v2_pokemonhabitat = other.pokemon_v2_pokemonhabitat;
    if (l$pokemon_v2_pokemonhabitat != lOther$pokemon_v2_pokemonhabitat)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameStddevOrderBy {
  InputpokemonV2PokemonhabitatnameStddevOrderBy(
      {this.id, this.language_id, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameStddevPopOrderBy {
  InputpokemonV2PokemonhabitatnameStddevPopOrderBy(
      {this.id, this.language_id, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameStddevSampOrderBy {
  InputpokemonV2PokemonhabitatnameStddevSampOrderBy(
      {this.id, this.language_id, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameSumOrderBy {
  InputpokemonV2PokemonhabitatnameSumOrderBy(
      {this.id, this.language_id, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameVarPopOrderBy {
  InputpokemonV2PokemonhabitatnameVarPopOrderBy(
      {this.id, this.language_id, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameVarSampOrderBy {
  InputpokemonV2PokemonhabitatnameVarSampOrderBy(
      {this.id, this.language_id, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonhabitatnameVarianceOrderBy {
  InputpokemonV2PokemonhabitatnameVarianceOrderBy(
      {this.id, this.language_id, this.pokemon_habitat_id});

  @override
  factory InputpokemonV2PokemonhabitatnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonhabitatnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonhabitatnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_habitat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonhabitatnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemAggregateOrderBy {
  InputpokemonV2PokemonitemAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonitemAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonitemAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonitemMaxOrderBy? max;

  final InputpokemonV2PokemonitemMinOrderBy? min;

  final InputpokemonV2PokemonitemStddevOrderBy? stddev;

  final InputpokemonV2PokemonitemStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonitemStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonitemSumOrderBy? sum;

  final InputpokemonV2PokemonitemVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonitemVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonitemVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemAvgOrderBy {
  InputpokemonV2PokemonitemAvgOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemBoolExp {
  InputpokemonV2PokemonitemBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.item_id,
      this.pokemon_id,
      this.pokemon_v2_item,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_version,
      this.rarity,
      this.version_id});

  @override
  factory InputpokemonV2PokemonitemBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonitemBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonitemBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonitemBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? item_id;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2ItemBoolExp? pokemon_v2_item;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputpokemonV2VersionBoolExp? pokemon_v2_version;

  final InputIntComparisonExp? rarity;

  final InputIntComparisonExp? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$item_id,
      l$pokemon_id,
      l$pokemon_v2_item,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_version,
      l$rarity,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemMaxOrderBy {
  InputpokemonV2PokemonitemMaxOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemMinOrderBy {
  InputpokemonV2PokemonitemMinOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemOrderBy {
  InputpokemonV2PokemonitemOrderBy(
      {this.id,
      this.item_id,
      this.pokemon_id,
      this.pokemon_v2_item,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_version,
      this.rarity,
      this.version_id});

  @override
  factory InputpokemonV2PokemonitemOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2ItemOrderBy? pokemon_v2_item;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  final InputpokemonV2VersionOrderBy? pokemon_v2_version;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_item = pokemon_v2_item;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll([
      l$id,
      l$item_id,
      l$pokemon_id,
      l$pokemon_v2_item,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_version,
      l$rarity,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_item = pokemon_v2_item;
    final lOther$pokemon_v2_item = other.pokemon_v2_item;
    if (l$pokemon_v2_item != lOther$pokemon_v2_item) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemStddevOrderBy {
  InputpokemonV2PokemonitemStddevOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemStddevPopOrderBy {
  InputpokemonV2PokemonitemStddevPopOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemStddevSampOrderBy {
  InputpokemonV2PokemonitemStddevSampOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemSumOrderBy {
  InputpokemonV2PokemonitemSumOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemVarPopOrderBy {
  InputpokemonV2PokemonitemVarPopOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemVarSampOrderBy {
  InputpokemonV2PokemonitemVarSampOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonitemVarianceOrderBy {
  InputpokemonV2PokemonitemVarianceOrderBy(
      {this.id, this.item_id, this.pokemon_id, this.rarity, this.version_id});

  @override
  factory InputpokemonV2PokemonitemVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonitemVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? item_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? rarity;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonitemVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$item_id = item_id;
    final l$pokemon_id = pokemon_id;
    final l$rarity = rarity;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$item_id, l$pokemon_id, l$rarity, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonitemVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$item_id = item_id;
    final lOther$item_id = other.item_id;
    if (l$item_id != lOther$item_id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$rarity = rarity;
    final lOther$rarity = other.rarity;
    if (l$rarity != lOther$rarity) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveAggregateOrderBy {
  InputpokemonV2PokemonmoveAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonmoveAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonmoveAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonmoveMaxOrderBy? max;

  final InputpokemonV2PokemonmoveMinOrderBy? min;

  final InputpokemonV2PokemonmoveStddevOrderBy? stddev;

  final InputpokemonV2PokemonmoveStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonmoveStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonmoveSumOrderBy? sum;

  final InputpokemonV2PokemonmoveVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonmoveVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonmoveVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveAvgOrderBy {
  InputpokemonV2PokemonmoveAvgOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveBoolExp {
  InputpokemonV2PokemonmoveBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.pokemon_v2_move,
      this.pokemon_v2_movelearnmethod,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonmoveBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonmoveBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonmoveBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? level;

  final InputIntComparisonExp? move_id;

  final InputIntComparisonExp? move_learn_method_id;

  final InputIntComparisonExp? order;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputpokemonV2MovelearnmethodBoolExp? pokemon_v2_movelearnmethod;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$pokemon_v2_move,
      l$pokemon_v2_movelearnmethod,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final lOther$pokemon_v2_movelearnmethod = other.pokemon_v2_movelearnmethod;
    if (l$pokemon_v2_movelearnmethod != lOther$pokemon_v2_movelearnmethod)
      return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveMaxOrderBy {
  InputpokemonV2PokemonmoveMaxOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveMinOrderBy {
  InputpokemonV2PokemonmoveMinOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveOrderBy {
  InputpokemonV2PokemonmoveOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.pokemon_v2_move,
      this.pokemon_v2_movelearnmethod,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  final InputpokemonV2MovelearnmethodOrderBy? pokemon_v2_movelearnmethod;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$pokemon_v2_move,
      l$pokemon_v2_movelearnmethod,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final lOther$pokemon_v2_movelearnmethod = other.pokemon_v2_movelearnmethod;
    if (l$pokemon_v2_movelearnmethod != lOther$pokemon_v2_movelearnmethod)
      return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveStddevOrderBy {
  InputpokemonV2PokemonmoveStddevOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveStddevPopOrderBy {
  InputpokemonV2PokemonmoveStddevPopOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveStddevSampOrderBy {
  InputpokemonV2PokemonmoveStddevSampOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveSumOrderBy {
  InputpokemonV2PokemonmoveSumOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveVarPopOrderBy {
  InputpokemonV2PokemonmoveVarPopOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveVarSampOrderBy {
  InputpokemonV2PokemonmoveVarSampOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonmoveVarianceOrderBy {
  InputpokemonV2PokemonmoveVarianceOrderBy(
      {this.id,
      this.level,
      this.move_id,
      this.move_learn_method_id,
      this.order,
      this.pokemon_id,
      this.version_group_id});

  @override
  factory InputpokemonV2PokemonmoveVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonmoveVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? level;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonmoveVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$level = level;
    final l$move_id = move_id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$order = order;
    final l$pokemon_id = pokemon_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$level,
      l$move_id,
      l$move_learn_method_id,
      l$order,
      l$pokemon_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonmoveVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$level = level;
    final lOther$level = other.level;
    if (l$level != lOther$level) return false;
    final l$move_id = move_id;
    final lOther$move_id = other.move_id;
    if (l$move_id != lOther$move_id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapeBoolExp {
  InputpokemonV2PokemonshapeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_pokemonshapenames,
      this.pokemon_v2_pokemonspecies});

  @override
  factory InputpokemonV2PokemonshapeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonshapeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonshapeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonshapeBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2PokemonshapenameBoolExp? pokemon_v2_pokemonshapenames;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecies;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_pokemonshapenames = pokemon_v2_pokemonshapenames;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_pokemonshapenames,
      l$pokemon_v2_pokemonspecies
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokemonshapenames = pokemon_v2_pokemonshapenames;
    final lOther$pokemon_v2_pokemonshapenames =
        other.pokemon_v2_pokemonshapenames;
    if (l$pokemon_v2_pokemonshapenames != lOther$pokemon_v2_pokemonshapenames)
      return false;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final lOther$pokemon_v2_pokemonspecies = other.pokemon_v2_pokemonspecies;
    if (l$pokemon_v2_pokemonspecies != lOther$pokemon_v2_pokemonspecies)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapeOrderBy {
  InputpokemonV2PokemonshapeOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_pokemonshapenames_aggregate,
      this.pokemon_v2_pokemonspecies_aggregate});

  @override
  factory InputpokemonV2PokemonshapeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2PokemonshapenameAggregateOrderBy?
      pokemon_v2_pokemonshapenames_aggregate;

  final InputpokemonV2PokemonspeciesAggregateOrderBy?
      pokemon_v2_pokemonspecies_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapeOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_pokemonshapenames_aggregate =
        pokemon_v2_pokemonshapenames_aggregate;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_pokemonshapenames_aggregate,
      l$pokemon_v2_pokemonspecies_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_pokemonshapenames_aggregate =
        pokemon_v2_pokemonshapenames_aggregate;
    final lOther$pokemon_v2_pokemonshapenames_aggregate =
        other.pokemon_v2_pokemonshapenames_aggregate;
    if (l$pokemon_v2_pokemonshapenames_aggregate !=
        lOther$pokemon_v2_pokemonshapenames_aggregate) return false;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final lOther$pokemon_v2_pokemonspecies_aggregate =
        other.pokemon_v2_pokemonspecies_aggregate;
    if (l$pokemon_v2_pokemonspecies_aggregate !=
        lOther$pokemon_v2_pokemonspecies_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameAggregateOrderBy {
  InputpokemonV2PokemonshapenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonshapenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonshapenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonshapenameMaxOrderBy? max;

  final InputpokemonV2PokemonshapenameMinOrderBy? min;

  final InputpokemonV2PokemonshapenameStddevOrderBy? stddev;

  final InputpokemonV2PokemonshapenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonshapenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonshapenameSumOrderBy? sum;

  final InputpokemonV2PokemonshapenameVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonshapenameVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonshapenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameAvgOrderBy {
  InputpokemonV2PokemonshapenameAvgOrderBy(
      {this.id, this.language_id, this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameBoolExp {
  InputpokemonV2PokemonshapenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.awesome_name,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_shape_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonshape});

  @override
  factory InputpokemonV2PokemonshapenameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonshapenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonshapenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonshapenameBoolExp>? $_or;

  final InputStringComparisonExp? awesome_name;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? pokemon_shape_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokemonshapeBoolExp? pokemon_v2_pokemonshape;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$awesome_name = awesome_name;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_shape_id = pokemon_shape_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonshape = pokemon_v2_pokemonshape;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$awesome_name,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_shape_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonshape
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$awesome_name = awesome_name;
    final lOther$awesome_name = other.awesome_name;
    if (l$awesome_name != lOther$awesome_name) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonshape = pokemon_v2_pokemonshape;
    final lOther$pokemon_v2_pokemonshape = other.pokemon_v2_pokemonshape;
    if (l$pokemon_v2_pokemonshape != lOther$pokemon_v2_pokemonshape)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameMaxOrderBy {
  InputpokemonV2PokemonshapenameMaxOrderBy(
      {this.awesome_name,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? awesome_name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameMaxOrderByToJson(this);
  int get hashCode {
    final l$awesome_name = awesome_name;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll(
        [l$awesome_name, l$id, l$language_id, l$name, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$awesome_name = awesome_name;
    final lOther$awesome_name = other.awesome_name;
    if (l$awesome_name != lOther$awesome_name) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameMinOrderBy {
  InputpokemonV2PokemonshapenameMinOrderBy(
      {this.awesome_name,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? awesome_name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameMinOrderByToJson(this);
  int get hashCode {
    final l$awesome_name = awesome_name;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll(
        [l$awesome_name, l$id, l$language_id, l$name, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$awesome_name = awesome_name;
    final lOther$awesome_name = other.awesome_name;
    if (l$awesome_name != lOther$awesome_name) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameOrderBy {
  InputpokemonV2PokemonshapenameOrderBy(
      {this.awesome_name,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_shape_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonshape});

  @override
  factory InputpokemonV2PokemonshapenameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? awesome_name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokemonshapeOrderBy? pokemon_v2_pokemonshape;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameOrderByToJson(this);
  int get hashCode {
    final l$awesome_name = awesome_name;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_shape_id = pokemon_shape_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonshape = pokemon_v2_pokemonshape;
    return Object.hashAll([
      l$awesome_name,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_shape_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonshape
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$awesome_name = awesome_name;
    final lOther$awesome_name = other.awesome_name;
    if (l$awesome_name != lOther$awesome_name) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonshape = pokemon_v2_pokemonshape;
    final lOther$pokemon_v2_pokemonshape = other.pokemon_v2_pokemonshape;
    if (l$pokemon_v2_pokemonshape != lOther$pokemon_v2_pokemonshape)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameStddevOrderBy {
  InputpokemonV2PokemonshapenameStddevOrderBy(
      {this.id, this.language_id, this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameStddevPopOrderBy {
  InputpokemonV2PokemonshapenameStddevPopOrderBy(
      {this.id, this.language_id, this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameStddevSampOrderBy {
  InputpokemonV2PokemonshapenameStddevSampOrderBy(
      {this.id, this.language_id, this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameSumOrderBy {
  InputpokemonV2PokemonshapenameSumOrderBy(
      {this.id, this.language_id, this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameVarPopOrderBy {
  InputpokemonV2PokemonshapenameVarPopOrderBy(
      {this.id, this.language_id, this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameVarSampOrderBy {
  InputpokemonV2PokemonshapenameVarSampOrderBy(
      {this.id, this.language_id, this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonshapenameVarianceOrderBy {
  InputpokemonV2PokemonshapenameVarianceOrderBy(
      {this.id, this.language_id, this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonshapenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonshapenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonshapenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_shape_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonshapenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesAggregateOrderBy {
  InputpokemonV2PokemonspeciesAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonspeciesAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonspeciesAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonspeciesMaxOrderBy? max;

  final InputpokemonV2PokemonspeciesMinOrderBy? min;

  final InputpokemonV2PokemonspeciesStddevOrderBy? stddev;

  final InputpokemonV2PokemonspeciesStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonspeciesStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonspeciesSumOrderBy? sum;

  final InputpokemonV2PokemonspeciesVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonspeciesVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonspeciesVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesAvgOrderBy {
  InputpokemonV2PokemonspeciesAvgOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesAvgOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesBoolExp {
  InputpokemonV2PokemonspeciesBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.forms_switchable,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.has_gender_differences,
      this.hatch_counter,
      this.id,
      this.is_baby,
      this.is_legendary,
      this.is_mythical,
      this.name,
      this.order,
      this.pokemonV2PokemonevolutionsByPartySpeciesId,
      this.pokemonV2PokemonevolutionsByTradeSpeciesId,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id,
      this.pokemon_v2_evolutionchain,
      this.pokemon_v2_generation,
      this.pokemon_v2_growthrate,
      this.pokemon_v2_palparks,
      this.pokemon_v2_pokemoncolor,
      this.pokemon_v2_pokemondexnumbers,
      this.pokemon_v2_pokemonegggroups,
      this.pokemon_v2_pokemonevolutions,
      this.pokemon_v2_pokemonhabitat,
      this.pokemon_v2_pokemons,
      this.pokemon_v2_pokemonshape,
      this.pokemon_v2_pokemonspecies,
      this.pokemon_v2_pokemonspeciesdescriptions,
      this.pokemon_v2_pokemonspeciesflavortexts,
      this.pokemon_v2_pokemonspeciesnames,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemonspeciesBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonspeciesBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonspeciesBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonspeciesBoolExp>? $_or;

  final InputIntComparisonExp? base_happiness;

  final InputIntComparisonExp? capture_rate;

  final InputIntComparisonExp? evolution_chain_id;

  final InputIntComparisonExp? evolves_from_species_id;

  final InputBooleanComparisonExp? forms_switchable;

  final InputIntComparisonExp? gender_rate;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? growth_rate_id;

  final InputBooleanComparisonExp? has_gender_differences;

  final InputIntComparisonExp? hatch_counter;

  final InputIntComparisonExp? id;

  final InputBooleanComparisonExp? is_baby;

  final InputBooleanComparisonExp? is_legendary;

  final InputBooleanComparisonExp? is_mythical;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? order;

  final InputpokemonV2PokemonevolutionBoolExp?
      pokemonV2PokemonevolutionsByPartySpeciesId;

  final InputpokemonV2PokemonevolutionBoolExp?
      pokemonV2PokemonevolutionsByTradeSpeciesId;

  final InputIntComparisonExp? pokemon_color_id;

  final InputIntComparisonExp? pokemon_habitat_id;

  final InputIntComparisonExp? pokemon_shape_id;

  final InputpokemonV2EvolutionchainBoolExp? pokemon_v2_evolutionchain;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2GrowthrateBoolExp? pokemon_v2_growthrate;

  final InputpokemonV2PalparkBoolExp? pokemon_v2_palparks;

  final InputpokemonV2PokemoncolorBoolExp? pokemon_v2_pokemoncolor;

  final InputpokemonV2PokemondexnumberBoolExp? pokemon_v2_pokemondexnumbers;

  final InputpokemonV2PokemonegggroupBoolExp? pokemon_v2_pokemonegggroups;

  final InputpokemonV2PokemonevolutionBoolExp? pokemon_v2_pokemonevolutions;

  final InputpokemonV2PokemonhabitatBoolExp? pokemon_v2_pokemonhabitat;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemons;

  final InputpokemonV2PokemonshapeBoolExp? pokemon_v2_pokemonshape;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecies;

  final InputpokemonV2PokemonspeciesdescriptionBoolExp?
      pokemon_v2_pokemonspeciesdescriptions;

  final InputpokemonV2PokemonspeciesflavortextBoolExp?
      pokemon_v2_pokemonspeciesflavortexts;

  final InputpokemonV2PokemonspeciesnameBoolExp? pokemon_v2_pokemonspeciesnames;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$forms_switchable = forms_switchable;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$has_gender_differences = has_gender_differences;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$is_baby = is_baby;
    final l$is_legendary = is_legendary;
    final l$is_mythical = is_mythical;
    final l$name = name;
    final l$order = order;
    final l$pokemonV2PokemonevolutionsByPartySpeciesId =
        pokemonV2PokemonevolutionsByPartySpeciesId;
    final l$pokemonV2PokemonevolutionsByTradeSpeciesId =
        pokemonV2PokemonevolutionsByTradeSpeciesId;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    final l$pokemon_v2_evolutionchain = pokemon_v2_evolutionchain;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final l$pokemon_v2_palparks = pokemon_v2_palparks;
    final l$pokemon_v2_pokemoncolor = pokemon_v2_pokemoncolor;
    final l$pokemon_v2_pokemondexnumbers = pokemon_v2_pokemondexnumbers;
    final l$pokemon_v2_pokemonegggroups = pokemon_v2_pokemonegggroups;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final l$pokemon_v2_pokemonhabitat = pokemon_v2_pokemonhabitat;
    final l$pokemon_v2_pokemons = pokemon_v2_pokemons;
    final l$pokemon_v2_pokemonshape = pokemon_v2_pokemonshape;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final l$pokemon_v2_pokemonspeciesdescriptions =
        pokemon_v2_pokemonspeciesdescriptions;
    final l$pokemon_v2_pokemonspeciesflavortexts =
        pokemon_v2_pokemonspeciesflavortexts;
    final l$pokemon_v2_pokemonspeciesnames = pokemon_v2_pokemonspeciesnames;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$forms_switchable,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$has_gender_differences,
      l$hatch_counter,
      l$id,
      l$is_baby,
      l$is_legendary,
      l$is_mythical,
      l$name,
      l$order,
      l$pokemonV2PokemonevolutionsByPartySpeciesId,
      l$pokemonV2PokemonevolutionsByTradeSpeciesId,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id,
      l$pokemon_v2_evolutionchain,
      l$pokemon_v2_generation,
      l$pokemon_v2_growthrate,
      l$pokemon_v2_palparks,
      l$pokemon_v2_pokemoncolor,
      l$pokemon_v2_pokemondexnumbers,
      l$pokemon_v2_pokemonegggroups,
      l$pokemon_v2_pokemonevolutions,
      l$pokemon_v2_pokemonhabitat,
      l$pokemon_v2_pokemons,
      l$pokemon_v2_pokemonshape,
      l$pokemon_v2_pokemonspecies,
      l$pokemon_v2_pokemonspeciesdescriptions,
      l$pokemon_v2_pokemonspeciesflavortexts,
      l$pokemon_v2_pokemonspeciesnames,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$forms_switchable = forms_switchable;
    final lOther$forms_switchable = other.forms_switchable;
    if (l$forms_switchable != lOther$forms_switchable) return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$has_gender_differences = has_gender_differences;
    final lOther$has_gender_differences = other.has_gender_differences;
    if (l$has_gender_differences != lOther$has_gender_differences) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_baby = is_baby;
    final lOther$is_baby = other.is_baby;
    if (l$is_baby != lOther$is_baby) return false;
    final l$is_legendary = is_legendary;
    final lOther$is_legendary = other.is_legendary;
    if (l$is_legendary != lOther$is_legendary) return false;
    final l$is_mythical = is_mythical;
    final lOther$is_mythical = other.is_mythical;
    if (l$is_mythical != lOther$is_mythical) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemonV2PokemonevolutionsByPartySpeciesId =
        pokemonV2PokemonevolutionsByPartySpeciesId;
    final lOther$pokemonV2PokemonevolutionsByPartySpeciesId =
        other.pokemonV2PokemonevolutionsByPartySpeciesId;
    if (l$pokemonV2PokemonevolutionsByPartySpeciesId !=
        lOther$pokemonV2PokemonevolutionsByPartySpeciesId) return false;
    final l$pokemonV2PokemonevolutionsByTradeSpeciesId =
        pokemonV2PokemonevolutionsByTradeSpeciesId;
    final lOther$pokemonV2PokemonevolutionsByTradeSpeciesId =
        other.pokemonV2PokemonevolutionsByTradeSpeciesId;
    if (l$pokemonV2PokemonevolutionsByTradeSpeciesId !=
        lOther$pokemonV2PokemonevolutionsByTradeSpeciesId) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    final l$pokemon_v2_evolutionchain = pokemon_v2_evolutionchain;
    final lOther$pokemon_v2_evolutionchain = other.pokemon_v2_evolutionchain;
    if (l$pokemon_v2_evolutionchain != lOther$pokemon_v2_evolutionchain)
      return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final lOther$pokemon_v2_growthrate = other.pokemon_v2_growthrate;
    if (l$pokemon_v2_growthrate != lOther$pokemon_v2_growthrate) return false;
    final l$pokemon_v2_palparks = pokemon_v2_palparks;
    final lOther$pokemon_v2_palparks = other.pokemon_v2_palparks;
    if (l$pokemon_v2_palparks != lOther$pokemon_v2_palparks) return false;
    final l$pokemon_v2_pokemoncolor = pokemon_v2_pokemoncolor;
    final lOther$pokemon_v2_pokemoncolor = other.pokemon_v2_pokemoncolor;
    if (l$pokemon_v2_pokemoncolor != lOther$pokemon_v2_pokemoncolor)
      return false;
    final l$pokemon_v2_pokemondexnumbers = pokemon_v2_pokemondexnumbers;
    final lOther$pokemon_v2_pokemondexnumbers =
        other.pokemon_v2_pokemondexnumbers;
    if (l$pokemon_v2_pokemondexnumbers != lOther$pokemon_v2_pokemondexnumbers)
      return false;
    final l$pokemon_v2_pokemonegggroups = pokemon_v2_pokemonegggroups;
    final lOther$pokemon_v2_pokemonegggroups =
        other.pokemon_v2_pokemonegggroups;
    if (l$pokemon_v2_pokemonegggroups != lOther$pokemon_v2_pokemonegggroups)
      return false;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final lOther$pokemon_v2_pokemonevolutions =
        other.pokemon_v2_pokemonevolutions;
    if (l$pokemon_v2_pokemonevolutions != lOther$pokemon_v2_pokemonevolutions)
      return false;
    final l$pokemon_v2_pokemonhabitat = pokemon_v2_pokemonhabitat;
    final lOther$pokemon_v2_pokemonhabitat = other.pokemon_v2_pokemonhabitat;
    if (l$pokemon_v2_pokemonhabitat != lOther$pokemon_v2_pokemonhabitat)
      return false;
    final l$pokemon_v2_pokemons = pokemon_v2_pokemons;
    final lOther$pokemon_v2_pokemons = other.pokemon_v2_pokemons;
    if (l$pokemon_v2_pokemons != lOther$pokemon_v2_pokemons) return false;
    final l$pokemon_v2_pokemonshape = pokemon_v2_pokemonshape;
    final lOther$pokemon_v2_pokemonshape = other.pokemon_v2_pokemonshape;
    if (l$pokemon_v2_pokemonshape != lOther$pokemon_v2_pokemonshape)
      return false;
    final l$pokemon_v2_pokemonspecies = pokemon_v2_pokemonspecies;
    final lOther$pokemon_v2_pokemonspecies = other.pokemon_v2_pokemonspecies;
    if (l$pokemon_v2_pokemonspecies != lOther$pokemon_v2_pokemonspecies)
      return false;
    final l$pokemon_v2_pokemonspeciesdescriptions =
        pokemon_v2_pokemonspeciesdescriptions;
    final lOther$pokemon_v2_pokemonspeciesdescriptions =
        other.pokemon_v2_pokemonspeciesdescriptions;
    if (l$pokemon_v2_pokemonspeciesdescriptions !=
        lOther$pokemon_v2_pokemonspeciesdescriptions) return false;
    final l$pokemon_v2_pokemonspeciesflavortexts =
        pokemon_v2_pokemonspeciesflavortexts;
    final lOther$pokemon_v2_pokemonspeciesflavortexts =
        other.pokemon_v2_pokemonspeciesflavortexts;
    if (l$pokemon_v2_pokemonspeciesflavortexts !=
        lOther$pokemon_v2_pokemonspeciesflavortexts) return false;
    final l$pokemon_v2_pokemonspeciesnames = pokemon_v2_pokemonspeciesnames;
    final lOther$pokemon_v2_pokemonspeciesnames =
        other.pokemon_v2_pokemonspeciesnames;
    if (l$pokemon_v2_pokemonspeciesnames !=
        lOther$pokemon_v2_pokemonspeciesnames) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesMaxOrderBy {
  InputpokemonV2PokemonspeciesMaxOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.name,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesMaxOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$name,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesMinOrderBy {
  InputpokemonV2PokemonspeciesMinOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.name,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesMinOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$name,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesOrderBy {
  InputpokemonV2PokemonspeciesOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.forms_switchable,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.has_gender_differences,
      this.hatch_counter,
      this.id,
      this.is_baby,
      this.is_legendary,
      this.is_mythical,
      this.name,
      this.order,
      this.pokemonV2PokemonevolutionsByPartySpeciesId_aggregate,
      this.pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id,
      this.pokemon_v2_evolutionchain,
      this.pokemon_v2_generation,
      this.pokemon_v2_growthrate,
      this.pokemon_v2_palparks_aggregate,
      this.pokemon_v2_pokemoncolor,
      this.pokemon_v2_pokemondexnumbers_aggregate,
      this.pokemon_v2_pokemonegggroups_aggregate,
      this.pokemon_v2_pokemonevolutions_aggregate,
      this.pokemon_v2_pokemonhabitat,
      this.pokemon_v2_pokemons_aggregate,
      this.pokemon_v2_pokemonshape,
      this.pokemon_v2_pokemonspecies_aggregate,
      this.pokemon_v2_pokemonspeciesdescriptions_aggregate,
      this.pokemon_v2_pokemonspeciesflavortexts_aggregate,
      this.pokemon_v2_pokemonspeciesnames_aggregate,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemonspeciesOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? forms_switchable;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? has_gender_differences;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_baby;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_legendary;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_mythical;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemonV2PokemonevolutionsByPartySpeciesId_aggregate;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  final InputpokemonV2EvolutionchainOrderBy? pokemon_v2_evolutionchain;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2GrowthrateOrderBy? pokemon_v2_growthrate;

  final InputpokemonV2PalparkAggregateOrderBy? pokemon_v2_palparks_aggregate;

  final InputpokemonV2PokemoncolorOrderBy? pokemon_v2_pokemoncolor;

  final InputpokemonV2PokemondexnumberAggregateOrderBy?
      pokemon_v2_pokemondexnumbers_aggregate;

  final InputpokemonV2PokemonegggroupAggregateOrderBy?
      pokemon_v2_pokemonegggroups_aggregate;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemon_v2_pokemonevolutions_aggregate;

  final InputpokemonV2PokemonhabitatOrderBy? pokemon_v2_pokemonhabitat;

  final InputpokemonV2PokemonAggregateOrderBy? pokemon_v2_pokemons_aggregate;

  final InputpokemonV2PokemonshapeOrderBy? pokemon_v2_pokemonshape;

  final InputpokemonV2PokemonspeciesAggregateOrderBy?
      pokemon_v2_pokemonspecies_aggregate;

  final InputpokemonV2PokemonspeciesdescriptionAggregateOrderBy?
      pokemon_v2_pokemonspeciesdescriptions_aggregate;

  final InputpokemonV2PokemonspeciesflavortextAggregateOrderBy?
      pokemon_v2_pokemonspeciesflavortexts_aggregate;

  final InputpokemonV2PokemonspeciesnameAggregateOrderBy?
      pokemon_v2_pokemonspeciesnames_aggregate;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$forms_switchable = forms_switchable;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$has_gender_differences = has_gender_differences;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$is_baby = is_baby;
    final l$is_legendary = is_legendary;
    final l$is_mythical = is_mythical;
    final l$name = name;
    final l$order = order;
    final l$pokemonV2PokemonevolutionsByPartySpeciesId_aggregate =
        pokemonV2PokemonevolutionsByPartySpeciesId_aggregate;
    final l$pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate =
        pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    final l$pokemon_v2_evolutionchain = pokemon_v2_evolutionchain;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final l$pokemon_v2_palparks_aggregate = pokemon_v2_palparks_aggregate;
    final l$pokemon_v2_pokemoncolor = pokemon_v2_pokemoncolor;
    final l$pokemon_v2_pokemondexnumbers_aggregate =
        pokemon_v2_pokemondexnumbers_aggregate;
    final l$pokemon_v2_pokemonegggroups_aggregate =
        pokemon_v2_pokemonegggroups_aggregate;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final l$pokemon_v2_pokemonhabitat = pokemon_v2_pokemonhabitat;
    final l$pokemon_v2_pokemons_aggregate = pokemon_v2_pokemons_aggregate;
    final l$pokemon_v2_pokemonshape = pokemon_v2_pokemonshape;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final l$pokemon_v2_pokemonspeciesdescriptions_aggregate =
        pokemon_v2_pokemonspeciesdescriptions_aggregate;
    final l$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        pokemon_v2_pokemonspeciesflavortexts_aggregate;
    final l$pokemon_v2_pokemonspeciesnames_aggregate =
        pokemon_v2_pokemonspeciesnames_aggregate;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$forms_switchable,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$has_gender_differences,
      l$hatch_counter,
      l$id,
      l$is_baby,
      l$is_legendary,
      l$is_mythical,
      l$name,
      l$order,
      l$pokemonV2PokemonevolutionsByPartySpeciesId_aggregate,
      l$pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id,
      l$pokemon_v2_evolutionchain,
      l$pokemon_v2_generation,
      l$pokemon_v2_growthrate,
      l$pokemon_v2_palparks_aggregate,
      l$pokemon_v2_pokemoncolor,
      l$pokemon_v2_pokemondexnumbers_aggregate,
      l$pokemon_v2_pokemonegggroups_aggregate,
      l$pokemon_v2_pokemonevolutions_aggregate,
      l$pokemon_v2_pokemonhabitat,
      l$pokemon_v2_pokemons_aggregate,
      l$pokemon_v2_pokemonshape,
      l$pokemon_v2_pokemonspecies_aggregate,
      l$pokemon_v2_pokemonspeciesdescriptions_aggregate,
      l$pokemon_v2_pokemonspeciesflavortexts_aggregate,
      l$pokemon_v2_pokemonspeciesnames_aggregate,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$forms_switchable = forms_switchable;
    final lOther$forms_switchable = other.forms_switchable;
    if (l$forms_switchable != lOther$forms_switchable) return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$has_gender_differences = has_gender_differences;
    final lOther$has_gender_differences = other.has_gender_differences;
    if (l$has_gender_differences != lOther$has_gender_differences) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_baby = is_baby;
    final lOther$is_baby = other.is_baby;
    if (l$is_baby != lOther$is_baby) return false;
    final l$is_legendary = is_legendary;
    final lOther$is_legendary = other.is_legendary;
    if (l$is_legendary != lOther$is_legendary) return false;
    final l$is_mythical = is_mythical;
    final lOther$is_mythical = other.is_mythical;
    if (l$is_mythical != lOther$is_mythical) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemonV2PokemonevolutionsByPartySpeciesId_aggregate =
        pokemonV2PokemonevolutionsByPartySpeciesId_aggregate;
    final lOther$pokemonV2PokemonevolutionsByPartySpeciesId_aggregate =
        other.pokemonV2PokemonevolutionsByPartySpeciesId_aggregate;
    if (l$pokemonV2PokemonevolutionsByPartySpeciesId_aggregate !=
        lOther$pokemonV2PokemonevolutionsByPartySpeciesId_aggregate)
      return false;
    final l$pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate =
        pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate;
    final lOther$pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate =
        other.pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate;
    if (l$pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate !=
        lOther$pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate)
      return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    final l$pokemon_v2_evolutionchain = pokemon_v2_evolutionchain;
    final lOther$pokemon_v2_evolutionchain = other.pokemon_v2_evolutionchain;
    if (l$pokemon_v2_evolutionchain != lOther$pokemon_v2_evolutionchain)
      return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_growthrate = pokemon_v2_growthrate;
    final lOther$pokemon_v2_growthrate = other.pokemon_v2_growthrate;
    if (l$pokemon_v2_growthrate != lOther$pokemon_v2_growthrate) return false;
    final l$pokemon_v2_palparks_aggregate = pokemon_v2_palparks_aggregate;
    final lOther$pokemon_v2_palparks_aggregate =
        other.pokemon_v2_palparks_aggregate;
    if (l$pokemon_v2_palparks_aggregate != lOther$pokemon_v2_palparks_aggregate)
      return false;
    final l$pokemon_v2_pokemoncolor = pokemon_v2_pokemoncolor;
    final lOther$pokemon_v2_pokemoncolor = other.pokemon_v2_pokemoncolor;
    if (l$pokemon_v2_pokemoncolor != lOther$pokemon_v2_pokemoncolor)
      return false;
    final l$pokemon_v2_pokemondexnumbers_aggregate =
        pokemon_v2_pokemondexnumbers_aggregate;
    final lOther$pokemon_v2_pokemondexnumbers_aggregate =
        other.pokemon_v2_pokemondexnumbers_aggregate;
    if (l$pokemon_v2_pokemondexnumbers_aggregate !=
        lOther$pokemon_v2_pokemondexnumbers_aggregate) return false;
    final l$pokemon_v2_pokemonegggroups_aggregate =
        pokemon_v2_pokemonegggroups_aggregate;
    final lOther$pokemon_v2_pokemonegggroups_aggregate =
        other.pokemon_v2_pokemonegggroups_aggregate;
    if (l$pokemon_v2_pokemonegggroups_aggregate !=
        lOther$pokemon_v2_pokemonegggroups_aggregate) return false;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final lOther$pokemon_v2_pokemonevolutions_aggregate =
        other.pokemon_v2_pokemonevolutions_aggregate;
    if (l$pokemon_v2_pokemonevolutions_aggregate !=
        lOther$pokemon_v2_pokemonevolutions_aggregate) return false;
    final l$pokemon_v2_pokemonhabitat = pokemon_v2_pokemonhabitat;
    final lOther$pokemon_v2_pokemonhabitat = other.pokemon_v2_pokemonhabitat;
    if (l$pokemon_v2_pokemonhabitat != lOther$pokemon_v2_pokemonhabitat)
      return false;
    final l$pokemon_v2_pokemons_aggregate = pokemon_v2_pokemons_aggregate;
    final lOther$pokemon_v2_pokemons_aggregate =
        other.pokemon_v2_pokemons_aggregate;
    if (l$pokemon_v2_pokemons_aggregate != lOther$pokemon_v2_pokemons_aggregate)
      return false;
    final l$pokemon_v2_pokemonshape = pokemon_v2_pokemonshape;
    final lOther$pokemon_v2_pokemonshape = other.pokemon_v2_pokemonshape;
    if (l$pokemon_v2_pokemonshape != lOther$pokemon_v2_pokemonshape)
      return false;
    final l$pokemon_v2_pokemonspecies_aggregate =
        pokemon_v2_pokemonspecies_aggregate;
    final lOther$pokemon_v2_pokemonspecies_aggregate =
        other.pokemon_v2_pokemonspecies_aggregate;
    if (l$pokemon_v2_pokemonspecies_aggregate !=
        lOther$pokemon_v2_pokemonspecies_aggregate) return false;
    final l$pokemon_v2_pokemonspeciesdescriptions_aggregate =
        pokemon_v2_pokemonspeciesdescriptions_aggregate;
    final lOther$pokemon_v2_pokemonspeciesdescriptions_aggregate =
        other.pokemon_v2_pokemonspeciesdescriptions_aggregate;
    if (l$pokemon_v2_pokemonspeciesdescriptions_aggregate !=
        lOther$pokemon_v2_pokemonspeciesdescriptions_aggregate) return false;
    final l$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        pokemon_v2_pokemonspeciesflavortexts_aggregate;
    final lOther$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        other.pokemon_v2_pokemonspeciesflavortexts_aggregate;
    if (l$pokemon_v2_pokemonspeciesflavortexts_aggregate !=
        lOther$pokemon_v2_pokemonspeciesflavortexts_aggregate) return false;
    final l$pokemon_v2_pokemonspeciesnames_aggregate =
        pokemon_v2_pokemonspeciesnames_aggregate;
    final lOther$pokemon_v2_pokemonspeciesnames_aggregate =
        other.pokemon_v2_pokemonspeciesnames_aggregate;
    if (l$pokemon_v2_pokemonspeciesnames_aggregate !=
        lOther$pokemon_v2_pokemonspeciesnames_aggregate) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesStddevOrderBy {
  InputpokemonV2PokemonspeciesStddevOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesStddevOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesStddevPopOrderBy {
  InputpokemonV2PokemonspeciesStddevPopOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesStddevPopOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesStddevSampOrderBy {
  InputpokemonV2PokemonspeciesStddevSampOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesStddevSampOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesSumOrderBy {
  InputpokemonV2PokemonspeciesSumOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesSumOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesVarPopOrderBy {
  InputpokemonV2PokemonspeciesVarPopOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesVarPopOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesVarSampOrderBy {
  InputpokemonV2PokemonspeciesVarSampOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesVarSampOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesVarianceOrderBy {
  InputpokemonV2PokemonspeciesVarianceOrderBy(
      {this.base_happiness,
      this.capture_rate,
      this.evolution_chain_id,
      this.evolves_from_species_id,
      this.gender_rate,
      this.generation_id,
      this.growth_rate_id,
      this.hatch_counter,
      this.id,
      this.order,
      this.pokemon_color_id,
      this.pokemon_habitat_id,
      this.pokemon_shape_id});

  @override
  factory InputpokemonV2PokemonspeciesVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_happiness;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? capture_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolution_chain_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? evolves_from_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? gender_rate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? growth_rate_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? hatch_counter;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_color_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_habitat_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_shape_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesVarianceOrderByToJson(this);
  int get hashCode {
    final l$base_happiness = base_happiness;
    final l$capture_rate = capture_rate;
    final l$evolution_chain_id = evolution_chain_id;
    final l$evolves_from_species_id = evolves_from_species_id;
    final l$gender_rate = gender_rate;
    final l$generation_id = generation_id;
    final l$growth_rate_id = growth_rate_id;
    final l$hatch_counter = hatch_counter;
    final l$id = id;
    final l$order = order;
    final l$pokemon_color_id = pokemon_color_id;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final l$pokemon_shape_id = pokemon_shape_id;
    return Object.hashAll([
      l$base_happiness,
      l$capture_rate,
      l$evolution_chain_id,
      l$evolves_from_species_id,
      l$gender_rate,
      l$generation_id,
      l$growth_rate_id,
      l$hatch_counter,
      l$id,
      l$order,
      l$pokemon_color_id,
      l$pokemon_habitat_id,
      l$pokemon_shape_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_happiness = base_happiness;
    final lOther$base_happiness = other.base_happiness;
    if (l$base_happiness != lOther$base_happiness) return false;
    final l$capture_rate = capture_rate;
    final lOther$capture_rate = other.capture_rate;
    if (l$capture_rate != lOther$capture_rate) return false;
    final l$evolution_chain_id = evolution_chain_id;
    final lOther$evolution_chain_id = other.evolution_chain_id;
    if (l$evolution_chain_id != lOther$evolution_chain_id) return false;
    final l$evolves_from_species_id = evolves_from_species_id;
    final lOther$evolves_from_species_id = other.evolves_from_species_id;
    if (l$evolves_from_species_id != lOther$evolves_from_species_id)
      return false;
    final l$gender_rate = gender_rate;
    final lOther$gender_rate = other.gender_rate;
    if (l$gender_rate != lOther$gender_rate) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$growth_rate_id = growth_rate_id;
    final lOther$growth_rate_id = other.growth_rate_id;
    if (l$growth_rate_id != lOther$growth_rate_id) return false;
    final l$hatch_counter = hatch_counter;
    final lOther$hatch_counter = other.hatch_counter;
    if (l$hatch_counter != lOther$hatch_counter) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_color_id = pokemon_color_id;
    final lOther$pokemon_color_id = other.pokemon_color_id;
    if (l$pokemon_color_id != lOther$pokemon_color_id) return false;
    final l$pokemon_habitat_id = pokemon_habitat_id;
    final lOther$pokemon_habitat_id = other.pokemon_habitat_id;
    if (l$pokemon_habitat_id != lOther$pokemon_habitat_id) return false;
    final l$pokemon_shape_id = pokemon_shape_id;
    final lOther$pokemon_shape_id = other.pokemon_shape_id;
    if (l$pokemon_shape_id != lOther$pokemon_shape_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionAggregateOrderBy {
  InputpokemonV2PokemonspeciesdescriptionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonspeciesdescriptionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonspeciesdescriptionMaxOrderBy? max;

  final InputpokemonV2PokemonspeciesdescriptionMinOrderBy? min;

  final InputpokemonV2PokemonspeciesdescriptionStddevOrderBy? stddev;

  final InputpokemonV2PokemonspeciesdescriptionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonspeciesdescriptionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonspeciesdescriptionSumOrderBy? sum;

  final InputpokemonV2PokemonspeciesdescriptionVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonspeciesdescriptionVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonspeciesdescriptionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionAvgOrderBy {
  InputpokemonV2PokemonspeciesdescriptionAvgOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionBoolExp {
  InputpokemonV2PokemonspeciesdescriptionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.description,
      this.id,
      this.language_id,
      this.pokemon_species_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonspeciesdescriptionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonspeciesdescriptionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonspeciesdescriptionBoolExp>? $_or;

  final InputStringComparisonExp? description;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? pokemon_species_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$description,
      l$id,
      l$language_id,
      l$pokemon_species_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionMaxOrderBy {
  InputpokemonV2PokemonspeciesdescriptionMaxOrderBy(
      {this.description, this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionMaxOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionMinOrderBy {
  InputpokemonV2PokemonspeciesdescriptionMinOrderBy(
      {this.description, this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionMinOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$description, l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionOrderBy {
  InputpokemonV2PokemonspeciesdescriptionOrderBy(
      {this.description,
      this.id,
      this.language_id,
      this.pokemon_species_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? description;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionOrderByToJson(this);
  int get hashCode {
    final l$description = description;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$description,
      l$id,
      l$language_id,
      l$pokemon_species_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$description = description;
    final lOther$description = other.description;
    if (l$description != lOther$description) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionStddevOrderBy {
  InputpokemonV2PokemonspeciesdescriptionStddevOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionStddevPopOrderBy {
  InputpokemonV2PokemonspeciesdescriptionStddevPopOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionStddevSampOrderBy {
  InputpokemonV2PokemonspeciesdescriptionStddevSampOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionSumOrderBy {
  InputpokemonV2PokemonspeciesdescriptionSumOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionVarPopOrderBy {
  InputpokemonV2PokemonspeciesdescriptionVarPopOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionVarSampOrderBy {
  InputpokemonV2PokemonspeciesdescriptionVarSampOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesdescriptionVarianceOrderBy {
  InputpokemonV2PokemonspeciesdescriptionVarianceOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesdescriptionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesdescriptionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesdescriptionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesdescriptionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextAggregateOrderBy {
  InputpokemonV2PokemonspeciesflavortextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonspeciesflavortextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonspeciesflavortextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonspeciesflavortextMaxOrderBy? max;

  final InputpokemonV2PokemonspeciesflavortextMinOrderBy? min;

  final InputpokemonV2PokemonspeciesflavortextStddevOrderBy? stddev;

  final InputpokemonV2PokemonspeciesflavortextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonspeciesflavortextStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonspeciesflavortextSumOrderBy? sum;

  final InputpokemonV2PokemonspeciesflavortextVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonspeciesflavortextVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonspeciesflavortextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextAvgOrderBy {
  InputpokemonV2PokemonspeciesflavortextAvgOrderBy(
      {this.id, this.language_id, this.pokemon_species_id, this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$language_id, l$pokemon_species_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextBoolExp {
  InputpokemonV2PokemonspeciesflavortextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_species_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonspecy,
      this.pokemon_v2_version,
      this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonspeciesflavortextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonspeciesflavortextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonspeciesflavortextBoolExp>? $_or;

  final InputStringComparisonExp? flavor_text;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputIntComparisonExp? pokemon_species_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  final InputpokemonV2VersionBoolExp? pokemon_v2_version;

  final InputIntComparisonExp? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$version_id = version_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_species_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonspecy,
      l$pokemon_v2_version,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextMaxOrderBy {
  InputpokemonV2PokemonspeciesflavortextMaxOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_species_id,
      this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextMaxOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_species_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextMinOrderBy {
  InputpokemonV2PokemonspeciesflavortextMinOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_species_id,
      this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextMinOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll([
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_species_id,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextOrderBy {
  InputpokemonV2PokemonspeciesflavortextOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_species_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonspecy,
      this.pokemon_v2_version,
      this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  final InputpokemonV2VersionOrderBy? pokemon_v2_version;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$version_id = version_id;
    return Object.hashAll([
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_species_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonspecy,
      l$pokemon_v2_version,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextStddevOrderBy {
  InputpokemonV2PokemonspeciesflavortextStddevOrderBy(
      {this.id, this.language_id, this.pokemon_species_id, this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$language_id, l$pokemon_species_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextStddevPopOrderBy {
  InputpokemonV2PokemonspeciesflavortextStddevPopOrderBy(
      {this.id, this.language_id, this.pokemon_species_id, this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$language_id, l$pokemon_species_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextStddevSampOrderBy {
  InputpokemonV2PokemonspeciesflavortextStddevSampOrderBy(
      {this.id, this.language_id, this.pokemon_species_id, this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$language_id, l$pokemon_species_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextSumOrderBy {
  InputpokemonV2PokemonspeciesflavortextSumOrderBy(
      {this.id, this.language_id, this.pokemon_species_id, this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$language_id, l$pokemon_species_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextVarPopOrderBy {
  InputpokemonV2PokemonspeciesflavortextVarPopOrderBy(
      {this.id, this.language_id, this.pokemon_species_id, this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$language_id, l$pokemon_species_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextVarSampOrderBy {
  InputpokemonV2PokemonspeciesflavortextVarSampOrderBy(
      {this.id, this.language_id, this.pokemon_species_id, this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$language_id, l$pokemon_species_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesflavortextVarianceOrderBy {
  InputpokemonV2PokemonspeciesflavortextVarianceOrderBy(
      {this.id, this.language_id, this.pokemon_species_id, this.version_id});

  @override
  factory InputpokemonV2PokemonspeciesflavortextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesflavortextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesflavortextVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    final l$version_id = version_id;
    return Object.hashAll(
        [l$id, l$language_id, l$pokemon_species_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesflavortextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameAggregateOrderBy {
  InputpokemonV2PokemonspeciesnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonspeciesnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonspeciesnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonspeciesnameMaxOrderBy? max;

  final InputpokemonV2PokemonspeciesnameMinOrderBy? min;

  final InputpokemonV2PokemonspeciesnameStddevOrderBy? stddev;

  final InputpokemonV2PokemonspeciesnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonspeciesnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonspeciesnameSumOrderBy? sum;

  final InputpokemonV2PokemonspeciesnameVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonspeciesnameVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonspeciesnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameAvgOrderBy {
  InputpokemonV2PokemonspeciesnameAvgOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameBoolExp {
  InputpokemonV2PokemonspeciesnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.genus,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_species_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemonspeciesnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonspeciesnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonspeciesnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonspeciesnameBoolExp>? $_or;

  final InputStringComparisonExp? genus;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? pokemon_species_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2PokemonspeciesBoolExp? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$genus = genus;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$genus,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_species_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$genus = genus;
    final lOther$genus = other.genus;
    if (l$genus != lOther$genus) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameMaxOrderBy {
  InputpokemonV2PokemonspeciesnameMaxOrderBy(
      {this.genus,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? genus;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameMaxOrderByToJson(this);
  int get hashCode {
    final l$genus = genus;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$genus, l$id, l$language_id, l$name, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$genus = genus;
    final lOther$genus = other.genus;
    if (l$genus != lOther$genus) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameMinOrderBy {
  InputpokemonV2PokemonspeciesnameMinOrderBy(
      {this.genus,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? genus;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameMinOrderByToJson(this);
  int get hashCode {
    final l$genus = genus;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll(
        [l$genus, l$id, l$language_id, l$name, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$genus = genus;
    final lOther$genus = other.genus;
    if (l$genus != lOther$genus) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameOrderBy {
  InputpokemonV2PokemonspeciesnameOrderBy(
      {this.genus,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_species_id,
      this.pokemon_v2_language,
      this.pokemon_v2_pokemonspecy});

  @override
  factory InputpokemonV2PokemonspeciesnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? genus;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2PokemonspeciesOrderBy? pokemon_v2_pokemonspecy;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameOrderByToJson(this);
  int get hashCode {
    final l$genus = genus;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_species_id = pokemon_species_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    return Object.hashAll([
      l$genus,
      l$id,
      l$language_id,
      l$name,
      l$pokemon_species_id,
      l$pokemon_v2_language,
      l$pokemon_v2_pokemonspecy
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$genus = genus;
    final lOther$genus = other.genus;
    if (l$genus != lOther$genus) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_pokemonspecy = pokemon_v2_pokemonspecy;
    final lOther$pokemon_v2_pokemonspecy = other.pokemon_v2_pokemonspecy;
    if (l$pokemon_v2_pokemonspecy != lOther$pokemon_v2_pokemonspecy)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameStddevOrderBy {
  InputpokemonV2PokemonspeciesnameStddevOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameStddevPopOrderBy {
  InputpokemonV2PokemonspeciesnameStddevPopOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameStddevSampOrderBy {
  InputpokemonV2PokemonspeciesnameStddevSampOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameSumOrderBy {
  InputpokemonV2PokemonspeciesnameSumOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameVarPopOrderBy {
  InputpokemonV2PokemonspeciesnameVarPopOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameVarSampOrderBy {
  InputpokemonV2PokemonspeciesnameVarSampOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspeciesnameVarianceOrderBy {
  InputpokemonV2PokemonspeciesnameVarianceOrderBy(
      {this.id, this.language_id, this.pokemon_species_id});

  @override
  factory InputpokemonV2PokemonspeciesnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspeciesnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_species_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspeciesnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_species_id = pokemon_species_id;
    return Object.hashAll([l$id, l$language_id, l$pokemon_species_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspeciesnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_species_id = pokemon_species_id;
    final lOther$pokemon_species_id = other.pokemon_species_id;
    if (l$pokemon_species_id != lOther$pokemon_species_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesAggregateOrderBy {
  InputpokemonV2PokemonspritesAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonspritesAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonspritesAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonspritesMaxOrderBy? max;

  final InputpokemonV2PokemonspritesMinOrderBy? min;

  final InputpokemonV2PokemonspritesStddevOrderBy? stddev;

  final InputpokemonV2PokemonspritesStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonspritesStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonspritesSumOrderBy? sum;

  final InputpokemonV2PokemonspritesVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonspritesVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonspritesVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesAvgOrderBy {
  InputpokemonV2PokemonspritesAvgOrderBy({this.id, this.pokemon_id});

  @override
  factory InputpokemonV2PokemonspritesAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    return Object.hashAll([l$id, l$pokemon_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesBoolExp {
  InputpokemonV2PokemonspritesBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.sprites});

  @override
  factory InputpokemonV2PokemonspritesBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonspritesBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonspritesBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonspritesBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputStringComparisonExp? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$sprites = sprites;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$sprites
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesMaxOrderBy {
  InputpokemonV2PokemonspritesMaxOrderBy(
      {this.id, this.pokemon_id, this.sprites});

  @override
  factory InputpokemonV2PokemonspritesMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$sprites = sprites;
    return Object.hashAll([l$id, l$pokemon_id, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesMinOrderBy {
  InputpokemonV2PokemonspritesMinOrderBy(
      {this.id, this.pokemon_id, this.sprites});

  @override
  factory InputpokemonV2PokemonspritesMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$sprites = sprites;
    return Object.hashAll([l$id, l$pokemon_id, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesOrderBy {
  InputpokemonV2PokemonspritesOrderBy(
      {this.id, this.pokemon_id, this.pokemon_v2_pokemon, this.sprites});

  @override
  factory InputpokemonV2PokemonspritesOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? sprites;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$sprites = sprites;
    return Object.hashAll(
        [l$id, l$pokemon_id, l$pokemon_v2_pokemon, l$sprites]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$sprites = sprites;
    final lOther$sprites = other.sprites;
    if (l$sprites != lOther$sprites) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesStddevOrderBy {
  InputpokemonV2PokemonspritesStddevOrderBy({this.id, this.pokemon_id});

  @override
  factory InputpokemonV2PokemonspritesStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    return Object.hashAll([l$id, l$pokemon_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesStddevPopOrderBy {
  InputpokemonV2PokemonspritesStddevPopOrderBy({this.id, this.pokemon_id});

  @override
  factory InputpokemonV2PokemonspritesStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    return Object.hashAll([l$id, l$pokemon_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesStddevSampOrderBy {
  InputpokemonV2PokemonspritesStddevSampOrderBy({this.id, this.pokemon_id});

  @override
  factory InputpokemonV2PokemonspritesStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    return Object.hashAll([l$id, l$pokemon_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesSumOrderBy {
  InputpokemonV2PokemonspritesSumOrderBy({this.id, this.pokemon_id});

  @override
  factory InputpokemonV2PokemonspritesSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    return Object.hashAll([l$id, l$pokemon_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesVarPopOrderBy {
  InputpokemonV2PokemonspritesVarPopOrderBy({this.id, this.pokemon_id});

  @override
  factory InputpokemonV2PokemonspritesVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    return Object.hashAll([l$id, l$pokemon_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesVarSampOrderBy {
  InputpokemonV2PokemonspritesVarSampOrderBy({this.id, this.pokemon_id});

  @override
  factory InputpokemonV2PokemonspritesVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    return Object.hashAll([l$id, l$pokemon_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonspritesVarianceOrderBy {
  InputpokemonV2PokemonspritesVarianceOrderBy({this.id, this.pokemon_id});

  @override
  factory InputpokemonV2PokemonspritesVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonspritesVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonspritesVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    return Object.hashAll([l$id, l$pokemon_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonspritesVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatAggregateOrderBy {
  InputpokemonV2PokemonstatAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemonstatAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatAggregateOrderByFromJson(json);

  final InputpokemonV2PokemonstatAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemonstatMaxOrderBy? max;

  final InputpokemonV2PokemonstatMinOrderBy? min;

  final InputpokemonV2PokemonstatStddevOrderBy? stddev;

  final InputpokemonV2PokemonstatStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemonstatStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemonstatSumOrderBy? sum;

  final InputpokemonV2PokemonstatVarPopOrderBy? var_pop;

  final InputpokemonV2PokemonstatVarSampOrderBy? var_samp;

  final InputpokemonV2PokemonstatVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatAvgOrderBy {
  InputpokemonV2PokemonstatAvgOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatAvgOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatBoolExp {
  InputpokemonV2PokemonstatBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.base_stat,
      this.effort,
      this.id,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_stat,
      this.stat_id});

  @override
  factory InputpokemonV2PokemonstatBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemonstatBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemonstatBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemonstatBoolExp>? $_or;

  final InputIntComparisonExp? base_stat;

  final InputIntComparisonExp? effort;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputpokemonV2StatBoolExp? pokemon_v2_stat;

  final InputIntComparisonExp? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final l$stat_id = stat_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$base_stat,
      l$effort,
      l$id,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_stat,
      l$stat_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatMaxOrderBy {
  InputpokemonV2PokemonstatMaxOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatMaxOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatMinOrderBy {
  InputpokemonV2PokemonstatMinOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatMinOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatOrderBy {
  InputpokemonV2PokemonstatOrderBy(
      {this.base_stat,
      this.effort,
      this.id,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_stat,
      this.stat_id});

  @override
  factory InputpokemonV2PokemonstatOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  final InputpokemonV2StatOrderBy? pokemon_v2_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final l$stat_id = stat_id;
    return Object.hashAll([
      l$base_stat,
      l$effort,
      l$id,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_stat,
      l$stat_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatStddevOrderBy {
  InputpokemonV2PokemonstatStddevOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatStddevOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatStddevPopOrderBy {
  InputpokemonV2PokemonstatStddevPopOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatStddevPopOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatStddevSampOrderBy {
  InputpokemonV2PokemonstatStddevSampOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatStddevSampOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatSumOrderBy {
  InputpokemonV2PokemonstatSumOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatSumOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatVarPopOrderBy {
  InputpokemonV2PokemonstatVarPopOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatVarPopOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatVarSampOrderBy {
  InputpokemonV2PokemonstatVarSampOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatVarSampOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemonstatVarianceOrderBy {
  InputpokemonV2PokemonstatVarianceOrderBy(
      {this.base_stat, this.effort, this.id, this.pokemon_id, this.stat_id});

  @override
  factory InputpokemonV2PokemonstatVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemonstatVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? base_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? effort;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemonstatVarianceOrderByToJson(this);
  int get hashCode {
    final l$base_stat = base_stat;
    final l$effort = effort;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$stat_id = stat_id;
    return Object.hashAll(
        [l$base_stat, l$effort, l$id, l$pokemon_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemonstatVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$base_stat = base_stat;
    final lOther$base_stat = other.base_stat;
    if (l$base_stat != lOther$base_stat) return false;
    final l$effort = effort;
    final lOther$effort = other.effort;
    if (l$effort != lOther$effort) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeAggregateOrderBy {
  InputpokemonV2PokemontypeAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemontypeAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeAggregateOrderByFromJson(json);

  final InputpokemonV2PokemontypeAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemontypeMaxOrderBy? max;

  final InputpokemonV2PokemontypeMinOrderBy? min;

  final InputpokemonV2PokemontypeStddevOrderBy? stddev;

  final InputpokemonV2PokemontypeStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemontypeStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemontypeSumOrderBy? sum;

  final InputpokemonV2PokemontypeVarPopOrderBy? var_pop;

  final InputpokemonV2PokemontypeVarSampOrderBy? var_samp;

  final InputpokemonV2PokemontypeVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeAvgOrderBy {
  InputpokemonV2PokemontypeAvgOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeBoolExp {
  InputpokemonV2PokemontypeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_type,
      this.slot,
      this.type_id});

  @override
  factory InputpokemonV2PokemontypeBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemontypeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemontypeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemontypeBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? slot;

  final InputIntComparisonExp? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_type,
      l$slot,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeMaxOrderBy {
  InputpokemonV2PokemontypeMaxOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeMinOrderBy {
  InputpokemonV2PokemontypeMinOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeOrderBy {
  InputpokemonV2PokemontypeOrderBy(
      {this.id,
      this.pokemon_id,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_type,
      this.slot,
      this.type_id});

  @override
  factory InputpokemonV2PokemontypeOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([
      l$id,
      l$pokemon_id,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_type,
      l$slot,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeStddevOrderBy {
  InputpokemonV2PokemontypeStddevOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeStddevPopOrderBy {
  InputpokemonV2PokemontypeStddevPopOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeStddevSampOrderBy {
  InputpokemonV2PokemontypeStddevSampOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeSumOrderBy {
  InputpokemonV2PokemontypeSumOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeVarPopOrderBy {
  InputpokemonV2PokemontypeVarPopOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeVarSampOrderBy {
  InputpokemonV2PokemontypeVarSampOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypeVarianceOrderBy {
  InputpokemonV2PokemontypeVarianceOrderBy(
      {this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypeVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypeVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypeVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypeVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastAggregateOrderBy {
  InputpokemonV2PokemontypepastAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2PokemontypepastAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastAggregateOrderByFromJson(json);

  final InputpokemonV2PokemontypepastAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2PokemontypepastMaxOrderBy? max;

  final InputpokemonV2PokemontypepastMinOrderBy? min;

  final InputpokemonV2PokemontypepastStddevOrderBy? stddev;

  final InputpokemonV2PokemontypepastStddevPopOrderBy? stddev_pop;

  final InputpokemonV2PokemontypepastStddevSampOrderBy? stddev_samp;

  final InputpokemonV2PokemontypepastSumOrderBy? sum;

  final InputpokemonV2PokemontypepastVarPopOrderBy? var_pop;

  final InputpokemonV2PokemontypepastVarSampOrderBy? var_samp;

  final InputpokemonV2PokemontypepastVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastAvgOrderBy {
  InputpokemonV2PokemontypepastAvgOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastAvgOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastBoolExp {
  InputpokemonV2PokemontypepastBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.generation_id,
      this.id,
      this.pokemon_id,
      this.pokemon_v2_generation,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_type,
      this.slot,
      this.type_id});

  @override
  factory InputpokemonV2PokemontypepastBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2PokemontypepastBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2PokemontypepastBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2PokemontypepastBoolExp>? $_or;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? pokemon_id;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2PokemonBoolExp? pokemon_v2_pokemon;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? slot;

  final InputIntComparisonExp? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$generation_id,
      l$id,
      l$pokemon_id,
      l$pokemon_v2_generation,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_type,
      l$slot,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastMaxOrderBy {
  InputpokemonV2PokemontypepastMaxOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastMaxOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastMinOrderBy {
  InputpokemonV2PokemontypepastMinOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastMinOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastOrderBy {
  InputpokemonV2PokemontypepastOrderBy(
      {this.generation_id,
      this.id,
      this.pokemon_id,
      this.pokemon_v2_generation,
      this.pokemon_v2_pokemon,
      this.pokemon_v2_type,
      this.slot,
      this.type_id});

  @override
  factory InputpokemonV2PokemontypepastOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2PokemonOrderBy? pokemon_v2_pokemon;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll([
      l$generation_id,
      l$id,
      l$pokemon_id,
      l$pokemon_v2_generation,
      l$pokemon_v2_pokemon,
      l$pokemon_v2_type,
      l$slot,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_pokemon = pokemon_v2_pokemon;
    final lOther$pokemon_v2_pokemon = other.pokemon_v2_pokemon;
    if (l$pokemon_v2_pokemon != lOther$pokemon_v2_pokemon) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastStddevOrderBy {
  InputpokemonV2PokemontypepastStddevOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastStddevOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastStddevPopOrderBy {
  InputpokemonV2PokemontypepastStddevPopOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastStddevPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastStddevSampOrderBy {
  InputpokemonV2PokemontypepastStddevSampOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastStddevSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastSumOrderBy {
  InputpokemonV2PokemontypepastSumOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastSumOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastVarPopOrderBy {
  InputpokemonV2PokemontypepastVarPopOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastVarPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastVarSampOrderBy {
  InputpokemonV2PokemontypepastVarSampOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastVarSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2PokemontypepastVarianceOrderBy {
  InputpokemonV2PokemontypepastVarianceOrderBy(
      {this.generation_id, this.id, this.pokemon_id, this.slot, this.type_id});

  @override
  factory InputpokemonV2PokemontypepastVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2PokemontypepastVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? pokemon_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? slot;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2PokemontypepastVarianceOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_id = pokemon_id;
    final l$slot = slot;
    final l$type_id = type_id;
    return Object.hashAll(
        [l$generation_id, l$id, l$pokemon_id, l$slot, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2PokemontypepastVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_id = pokemon_id;
    final lOther$pokemon_id = other.pokemon_id;
    if (l$pokemon_id != lOther$pokemon_id) return false;
    final l$slot = slot;
    final lOther$slot = other.slot;
    if (l$slot != lOther$slot) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionBoolExp {
  InputpokemonV2RegionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_generations,
      this.pokemon_v2_locations,
      this.pokemon_v2_pokedexes,
      this.pokemon_v2_regionnames,
      this.pokemon_v2_versiongroupregions});

  @override
  factory InputpokemonV2RegionBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2RegionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2RegionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2RegionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2RegionBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generations;

  final InputpokemonV2LocationBoolExp? pokemon_v2_locations;

  final InputpokemonV2PokedexBoolExp? pokemon_v2_pokedexes;

  final InputpokemonV2RegionnameBoolExp? pokemon_v2_regionnames;

  final InputpokemonV2VersiongroupregionBoolExp? pokemon_v2_versiongroupregions;

  Map<String, dynamic> toJson() => _$InputpokemonV2RegionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_generations = pokemon_v2_generations;
    final l$pokemon_v2_locations = pokemon_v2_locations;
    final l$pokemon_v2_pokedexes = pokemon_v2_pokedexes;
    final l$pokemon_v2_regionnames = pokemon_v2_regionnames;
    final l$pokemon_v2_versiongroupregions = pokemon_v2_versiongroupregions;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_generations,
      l$pokemon_v2_locations,
      l$pokemon_v2_pokedexes,
      l$pokemon_v2_regionnames,
      l$pokemon_v2_versiongroupregions
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_generations = pokemon_v2_generations;
    final lOther$pokemon_v2_generations = other.pokemon_v2_generations;
    if (l$pokemon_v2_generations != lOther$pokemon_v2_generations) return false;
    final l$pokemon_v2_locations = pokemon_v2_locations;
    final lOther$pokemon_v2_locations = other.pokemon_v2_locations;
    if (l$pokemon_v2_locations != lOther$pokemon_v2_locations) return false;
    final l$pokemon_v2_pokedexes = pokemon_v2_pokedexes;
    final lOther$pokemon_v2_pokedexes = other.pokemon_v2_pokedexes;
    if (l$pokemon_v2_pokedexes != lOther$pokemon_v2_pokedexes) return false;
    final l$pokemon_v2_regionnames = pokemon_v2_regionnames;
    final lOther$pokemon_v2_regionnames = other.pokemon_v2_regionnames;
    if (l$pokemon_v2_regionnames != lOther$pokemon_v2_regionnames) return false;
    final l$pokemon_v2_versiongroupregions = pokemon_v2_versiongroupregions;
    final lOther$pokemon_v2_versiongroupregions =
        other.pokemon_v2_versiongroupregions;
    if (l$pokemon_v2_versiongroupregions !=
        lOther$pokemon_v2_versiongroupregions) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionOrderBy {
  InputpokemonV2RegionOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_generations_aggregate,
      this.pokemon_v2_locations_aggregate,
      this.pokemon_v2_pokedexes_aggregate,
      this.pokemon_v2_regionnames_aggregate,
      this.pokemon_v2_versiongroupregions_aggregate});

  @override
  factory InputpokemonV2RegionOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2RegionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2GenerationAggregateOrderBy?
      pokemon_v2_generations_aggregate;

  final InputpokemonV2LocationAggregateOrderBy? pokemon_v2_locations_aggregate;

  final InputpokemonV2PokedexAggregateOrderBy? pokemon_v2_pokedexes_aggregate;

  final InputpokemonV2RegionnameAggregateOrderBy?
      pokemon_v2_regionnames_aggregate;

  final InputpokemonV2VersiongroupregionAggregateOrderBy?
      pokemon_v2_versiongroupregions_aggregate;

  Map<String, dynamic> toJson() => _$InputpokemonV2RegionOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_generations_aggregate = pokemon_v2_generations_aggregate;
    final l$pokemon_v2_locations_aggregate = pokemon_v2_locations_aggregate;
    final l$pokemon_v2_pokedexes_aggregate = pokemon_v2_pokedexes_aggregate;
    final l$pokemon_v2_regionnames_aggregate = pokemon_v2_regionnames_aggregate;
    final l$pokemon_v2_versiongroupregions_aggregate =
        pokemon_v2_versiongroupregions_aggregate;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_generations_aggregate,
      l$pokemon_v2_locations_aggregate,
      l$pokemon_v2_pokedexes_aggregate,
      l$pokemon_v2_regionnames_aggregate,
      l$pokemon_v2_versiongroupregions_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_generations_aggregate = pokemon_v2_generations_aggregate;
    final lOther$pokemon_v2_generations_aggregate =
        other.pokemon_v2_generations_aggregate;
    if (l$pokemon_v2_generations_aggregate !=
        lOther$pokemon_v2_generations_aggregate) return false;
    final l$pokemon_v2_locations_aggregate = pokemon_v2_locations_aggregate;
    final lOther$pokemon_v2_locations_aggregate =
        other.pokemon_v2_locations_aggregate;
    if (l$pokemon_v2_locations_aggregate !=
        lOther$pokemon_v2_locations_aggregate) return false;
    final l$pokemon_v2_pokedexes_aggregate = pokemon_v2_pokedexes_aggregate;
    final lOther$pokemon_v2_pokedexes_aggregate =
        other.pokemon_v2_pokedexes_aggregate;
    if (l$pokemon_v2_pokedexes_aggregate !=
        lOther$pokemon_v2_pokedexes_aggregate) return false;
    final l$pokemon_v2_regionnames_aggregate = pokemon_v2_regionnames_aggregate;
    final lOther$pokemon_v2_regionnames_aggregate =
        other.pokemon_v2_regionnames_aggregate;
    if (l$pokemon_v2_regionnames_aggregate !=
        lOther$pokemon_v2_regionnames_aggregate) return false;
    final l$pokemon_v2_versiongroupregions_aggregate =
        pokemon_v2_versiongroupregions_aggregate;
    final lOther$pokemon_v2_versiongroupregions_aggregate =
        other.pokemon_v2_versiongroupregions_aggregate;
    if (l$pokemon_v2_versiongroupregions_aggregate !=
        lOther$pokemon_v2_versiongroupregions_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameAggregateOrderBy {
  InputpokemonV2RegionnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2RegionnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameAggregateOrderByFromJson(json);

  final InputpokemonV2RegionnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2RegionnameMaxOrderBy? max;

  final InputpokemonV2RegionnameMinOrderBy? min;

  final InputpokemonV2RegionnameStddevOrderBy? stddev;

  final InputpokemonV2RegionnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2RegionnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2RegionnameSumOrderBy? sum;

  final InputpokemonV2RegionnameVarPopOrderBy? var_pop;

  final InputpokemonV2RegionnameVarSampOrderBy? var_samp;

  final InputpokemonV2RegionnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameAvgOrderBy {
  InputpokemonV2RegionnameAvgOrderBy(
      {this.id, this.language_id, this.region_id});

  @override
  factory InputpokemonV2RegionnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameBoolExp {
  InputpokemonV2RegionnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_region,
      this.region_id});

  @override
  factory InputpokemonV2RegionnameBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2RegionnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2RegionnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2RegionnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2RegionBoolExp? pokemon_v2_region;

  final InputIntComparisonExp? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$region_id = region_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_region,
      l$region_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameMaxOrderBy {
  InputpokemonV2RegionnameMaxOrderBy(
      {this.id, this.language_id, this.name, this.region_id});

  @override
  factory InputpokemonV2RegionnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameMinOrderBy {
  InputpokemonV2RegionnameMinOrderBy(
      {this.id, this.language_id, this.name, this.region_id});

  @override
  factory InputpokemonV2RegionnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameOrderBy {
  InputpokemonV2RegionnameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_region,
      this.region_id});

  @override
  factory InputpokemonV2RegionnameOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2RegionOrderBy? pokemon_v2_region;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$region_id = region_id;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_region,
      l$region_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameStddevOrderBy {
  InputpokemonV2RegionnameStddevOrderBy(
      {this.id, this.language_id, this.region_id});

  @override
  factory InputpokemonV2RegionnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameStddevPopOrderBy {
  InputpokemonV2RegionnameStddevPopOrderBy(
      {this.id, this.language_id, this.region_id});

  @override
  factory InputpokemonV2RegionnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameStddevSampOrderBy {
  InputpokemonV2RegionnameStddevSampOrderBy(
      {this.id, this.language_id, this.region_id});

  @override
  factory InputpokemonV2RegionnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameSumOrderBy {
  InputpokemonV2RegionnameSumOrderBy(
      {this.id, this.language_id, this.region_id});

  @override
  factory InputpokemonV2RegionnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameVarPopOrderBy {
  InputpokemonV2RegionnameVarPopOrderBy(
      {this.id, this.language_id, this.region_id});

  @override
  factory InputpokemonV2RegionnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameVarSampOrderBy {
  InputpokemonV2RegionnameVarSampOrderBy(
      {this.id, this.language_id, this.region_id});

  @override
  factory InputpokemonV2RegionnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2RegionnameVarianceOrderBy {
  InputpokemonV2RegionnameVarianceOrderBy(
      {this.id, this.language_id, this.region_id});

  @override
  factory InputpokemonV2RegionnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2RegionnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2RegionnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$region_id = region_id;
    return Object.hashAll([l$id, l$language_id, l$region_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2RegionnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatAggregateOrderBy {
  InputpokemonV2StatAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2StatAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatAggregateOrderByFromJson(json);

  final InputpokemonV2StatAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2StatMaxOrderBy? max;

  final InputpokemonV2StatMinOrderBy? min;

  final InputpokemonV2StatStddevOrderBy? stddev;

  final InputpokemonV2StatStddevPopOrderBy? stddev_pop;

  final InputpokemonV2StatStddevSampOrderBy? stddev_samp;

  final InputpokemonV2StatSumOrderBy? sum;

  final InputpokemonV2StatVarPopOrderBy? var_pop;

  final InputpokemonV2StatVarSampOrderBy? var_samp;

  final InputpokemonV2StatVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatAvgOrderBy {
  InputpokemonV2StatAvgOrderBy(
      {this.game_index, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2StatAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2StatAvgOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatBoolExp {
  InputpokemonV2StatBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.game_index,
      this.id,
      this.is_battle_only,
      this.move_damage_class_id,
      this.name,
      this.pokemonV2NaturesByIncreasedStatId,
      this.pokemon_v2_characteristics,
      this.pokemon_v2_movedamageclass,
      this.pokemon_v2_movemetastatchanges,
      this.pokemon_v2_natures,
      this.pokemon_v2_pokemonstats,
      this.pokemon_v2_statnames});

  @override
  factory InputpokemonV2StatBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2StatBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2StatBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2StatBoolExp>? $_or;

  final InputIntComparisonExp? game_index;

  final InputIntComparisonExp? id;

  final InputBooleanComparisonExp? is_battle_only;

  final InputIntComparisonExp? move_damage_class_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2NatureBoolExp? pokemonV2NaturesByIncreasedStatId;

  final InputpokemonV2CharacteristicBoolExp? pokemon_v2_characteristics;

  final InputpokemonV2MovedamageclassBoolExp? pokemon_v2_movedamageclass;

  final InputpokemonV2MovemetastatchangeBoolExp? pokemon_v2_movemetastatchanges;

  final InputpokemonV2NatureBoolExp? pokemon_v2_natures;

  final InputpokemonV2PokemonstatBoolExp? pokemon_v2_pokemonstats;

  final InputpokemonV2StatnameBoolExp? pokemon_v2_statnames;

  Map<String, dynamic> toJson() => _$InputpokemonV2StatBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$game_index = game_index;
    final l$id = id;
    final l$is_battle_only = is_battle_only;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    final l$pokemonV2NaturesByIncreasedStatId =
        pokemonV2NaturesByIncreasedStatId;
    final l$pokemon_v2_characteristics = pokemon_v2_characteristics;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final l$pokemon_v2_movemetastatchanges = pokemon_v2_movemetastatchanges;
    final l$pokemon_v2_natures = pokemon_v2_natures;
    final l$pokemon_v2_pokemonstats = pokemon_v2_pokemonstats;
    final l$pokemon_v2_statnames = pokemon_v2_statnames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$game_index,
      l$id,
      l$is_battle_only,
      l$move_damage_class_id,
      l$name,
      l$pokemonV2NaturesByIncreasedStatId,
      l$pokemon_v2_characteristics,
      l$pokemon_v2_movedamageclass,
      l$pokemon_v2_movemetastatchanges,
      l$pokemon_v2_natures,
      l$pokemon_v2_pokemonstats,
      l$pokemon_v2_statnames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_battle_only = is_battle_only;
    final lOther$is_battle_only = other.is_battle_only;
    if (l$is_battle_only != lOther$is_battle_only) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2NaturesByIncreasedStatId =
        pokemonV2NaturesByIncreasedStatId;
    final lOther$pokemonV2NaturesByIncreasedStatId =
        other.pokemonV2NaturesByIncreasedStatId;
    if (l$pokemonV2NaturesByIncreasedStatId !=
        lOther$pokemonV2NaturesByIncreasedStatId) return false;
    final l$pokemon_v2_characteristics = pokemon_v2_characteristics;
    final lOther$pokemon_v2_characteristics = other.pokemon_v2_characteristics;
    if (l$pokemon_v2_characteristics != lOther$pokemon_v2_characteristics)
      return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    final l$pokemon_v2_movemetastatchanges = pokemon_v2_movemetastatchanges;
    final lOther$pokemon_v2_movemetastatchanges =
        other.pokemon_v2_movemetastatchanges;
    if (l$pokemon_v2_movemetastatchanges !=
        lOther$pokemon_v2_movemetastatchanges) return false;
    final l$pokemon_v2_natures = pokemon_v2_natures;
    final lOther$pokemon_v2_natures = other.pokemon_v2_natures;
    if (l$pokemon_v2_natures != lOther$pokemon_v2_natures) return false;
    final l$pokemon_v2_pokemonstats = pokemon_v2_pokemonstats;
    final lOther$pokemon_v2_pokemonstats = other.pokemon_v2_pokemonstats;
    if (l$pokemon_v2_pokemonstats != lOther$pokemon_v2_pokemonstats)
      return false;
    final l$pokemon_v2_statnames = pokemon_v2_statnames;
    final lOther$pokemon_v2_statnames = other.pokemon_v2_statnames;
    if (l$pokemon_v2_statnames != lOther$pokemon_v2_statnames) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatMaxOrderBy {
  InputpokemonV2StatMaxOrderBy(
      {this.game_index, this.id, this.move_damage_class_id, this.name});

  @override
  factory InputpokemonV2StatMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() => _$InputpokemonV2StatMaxOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatMinOrderBy {
  InputpokemonV2StatMinOrderBy(
      {this.game_index, this.id, this.move_damage_class_id, this.name});

  @override
  factory InputpokemonV2StatMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() => _$InputpokemonV2StatMinOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatOrderBy {
  InputpokemonV2StatOrderBy(
      {this.game_index,
      this.id,
      this.is_battle_only,
      this.move_damage_class_id,
      this.name,
      this.pokemonV2NaturesByIncreasedStatId_aggregate,
      this.pokemon_v2_characteristics_aggregate,
      this.pokemon_v2_movedamageclass,
      this.pokemon_v2_movemetastatchanges_aggregate,
      this.pokemon_v2_natures_aggregate,
      this.pokemon_v2_pokemonstats_aggregate,
      this.pokemon_v2_statnames_aggregate});

  @override
  factory InputpokemonV2StatOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? is_battle_only;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2NatureAggregateOrderBy?
      pokemonV2NaturesByIncreasedStatId_aggregate;

  final InputpokemonV2CharacteristicAggregateOrderBy?
      pokemon_v2_characteristics_aggregate;

  final InputpokemonV2MovedamageclassOrderBy? pokemon_v2_movedamageclass;

  final InputpokemonV2MovemetastatchangeAggregateOrderBy?
      pokemon_v2_movemetastatchanges_aggregate;

  final InputpokemonV2NatureAggregateOrderBy? pokemon_v2_natures_aggregate;

  final InputpokemonV2PokemonstatAggregateOrderBy?
      pokemon_v2_pokemonstats_aggregate;

  final InputpokemonV2StatnameAggregateOrderBy? pokemon_v2_statnames_aggregate;

  Map<String, dynamic> toJson() => _$InputpokemonV2StatOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$is_battle_only = is_battle_only;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    final l$pokemonV2NaturesByIncreasedStatId_aggregate =
        pokemonV2NaturesByIncreasedStatId_aggregate;
    final l$pokemon_v2_characteristics_aggregate =
        pokemon_v2_characteristics_aggregate;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final l$pokemon_v2_movemetastatchanges_aggregate =
        pokemon_v2_movemetastatchanges_aggregate;
    final l$pokemon_v2_natures_aggregate = pokemon_v2_natures_aggregate;
    final l$pokemon_v2_pokemonstats_aggregate =
        pokemon_v2_pokemonstats_aggregate;
    final l$pokemon_v2_statnames_aggregate = pokemon_v2_statnames_aggregate;
    return Object.hashAll([
      l$game_index,
      l$id,
      l$is_battle_only,
      l$move_damage_class_id,
      l$name,
      l$pokemonV2NaturesByIncreasedStatId_aggregate,
      l$pokemon_v2_characteristics_aggregate,
      l$pokemon_v2_movedamageclass,
      l$pokemon_v2_movemetastatchanges_aggregate,
      l$pokemon_v2_natures_aggregate,
      l$pokemon_v2_pokemonstats_aggregate,
      l$pokemon_v2_statnames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$is_battle_only = is_battle_only;
    final lOther$is_battle_only = other.is_battle_only;
    if (l$is_battle_only != lOther$is_battle_only) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2NaturesByIncreasedStatId_aggregate =
        pokemonV2NaturesByIncreasedStatId_aggregate;
    final lOther$pokemonV2NaturesByIncreasedStatId_aggregate =
        other.pokemonV2NaturesByIncreasedStatId_aggregate;
    if (l$pokemonV2NaturesByIncreasedStatId_aggregate !=
        lOther$pokemonV2NaturesByIncreasedStatId_aggregate) return false;
    final l$pokemon_v2_characteristics_aggregate =
        pokemon_v2_characteristics_aggregate;
    final lOther$pokemon_v2_characteristics_aggregate =
        other.pokemon_v2_characteristics_aggregate;
    if (l$pokemon_v2_characteristics_aggregate !=
        lOther$pokemon_v2_characteristics_aggregate) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    final l$pokemon_v2_movemetastatchanges_aggregate =
        pokemon_v2_movemetastatchanges_aggregate;
    final lOther$pokemon_v2_movemetastatchanges_aggregate =
        other.pokemon_v2_movemetastatchanges_aggregate;
    if (l$pokemon_v2_movemetastatchanges_aggregate !=
        lOther$pokemon_v2_movemetastatchanges_aggregate) return false;
    final l$pokemon_v2_natures_aggregate = pokemon_v2_natures_aggregate;
    final lOther$pokemon_v2_natures_aggregate =
        other.pokemon_v2_natures_aggregate;
    if (l$pokemon_v2_natures_aggregate != lOther$pokemon_v2_natures_aggregate)
      return false;
    final l$pokemon_v2_pokemonstats_aggregate =
        pokemon_v2_pokemonstats_aggregate;
    final lOther$pokemon_v2_pokemonstats_aggregate =
        other.pokemon_v2_pokemonstats_aggregate;
    if (l$pokemon_v2_pokemonstats_aggregate !=
        lOther$pokemon_v2_pokemonstats_aggregate) return false;
    final l$pokemon_v2_statnames_aggregate = pokemon_v2_statnames_aggregate;
    final lOther$pokemon_v2_statnames_aggregate =
        other.pokemon_v2_statnames_aggregate;
    if (l$pokemon_v2_statnames_aggregate !=
        lOther$pokemon_v2_statnames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatStddevOrderBy {
  InputpokemonV2StatStddevOrderBy(
      {this.game_index, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2StatStddevOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatStddevOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatStddevPopOrderBy {
  InputpokemonV2StatStddevPopOrderBy(
      {this.game_index, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2StatStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatStddevPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatStddevSampOrderBy {
  InputpokemonV2StatStddevSampOrderBy(
      {this.game_index, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2StatStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatStddevSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatSumOrderBy {
  InputpokemonV2StatSumOrderBy(
      {this.game_index, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2StatSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2StatSumOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatVarPopOrderBy {
  InputpokemonV2StatVarPopOrderBy(
      {this.game_index, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2StatVarPopOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatVarPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatVarSampOrderBy {
  InputpokemonV2StatVarSampOrderBy(
      {this.game_index, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2StatVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatVarSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatVarianceOrderBy {
  InputpokemonV2StatVarianceOrderBy(
      {this.game_index, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2StatVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatVarianceOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$game_index, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameAggregateOrderBy {
  InputpokemonV2StatnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2StatnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameAggregateOrderByFromJson(json);

  final InputpokemonV2StatnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2StatnameMaxOrderBy? max;

  final InputpokemonV2StatnameMinOrderBy? min;

  final InputpokemonV2StatnameStddevOrderBy? stddev;

  final InputpokemonV2StatnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2StatnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2StatnameSumOrderBy? sum;

  final InputpokemonV2StatnameVarPopOrderBy? var_pop;

  final InputpokemonV2StatnameVarSampOrderBy? var_samp;

  final InputpokemonV2StatnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameAvgOrderBy {
  InputpokemonV2StatnameAvgOrderBy({this.id, this.language_id, this.stat_id});

  @override
  factory InputpokemonV2StatnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameBoolExp {
  InputpokemonV2StatnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_stat,
      this.stat_id});

  @override
  factory InputpokemonV2StatnameBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2StatnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2StatnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2StatnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2StatBoolExp? pokemon_v2_stat;

  final InputIntComparisonExp? stat_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2StatnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final l$stat_id = stat_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_stat,
      l$stat_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameMaxOrderBy {
  InputpokemonV2StatnameMaxOrderBy(
      {this.id, this.language_id, this.name, this.stat_id});

  @override
  factory InputpokemonV2StatnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameMinOrderBy {
  InputpokemonV2StatnameMinOrderBy(
      {this.id, this.language_id, this.name, this.stat_id});

  @override
  factory InputpokemonV2StatnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameOrderBy {
  InputpokemonV2StatnameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_stat,
      this.stat_id});

  @override
  factory InputpokemonV2StatnameOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2StatOrderBy? pokemon_v2_stat;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2StatnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final l$stat_id = stat_id;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_stat,
      l$stat_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_stat = pokemon_v2_stat;
    final lOther$pokemon_v2_stat = other.pokemon_v2_stat;
    if (l$pokemon_v2_stat != lOther$pokemon_v2_stat) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameStddevOrderBy {
  InputpokemonV2StatnameStddevOrderBy(
      {this.id, this.language_id, this.stat_id});

  @override
  factory InputpokemonV2StatnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameStddevPopOrderBy {
  InputpokemonV2StatnameStddevPopOrderBy(
      {this.id, this.language_id, this.stat_id});

  @override
  factory InputpokemonV2StatnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameStddevSampOrderBy {
  InputpokemonV2StatnameStddevSampOrderBy(
      {this.id, this.language_id, this.stat_id});

  @override
  factory InputpokemonV2StatnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameSumOrderBy {
  InputpokemonV2StatnameSumOrderBy({this.id, this.language_id, this.stat_id});

  @override
  factory InputpokemonV2StatnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameVarPopOrderBy {
  InputpokemonV2StatnameVarPopOrderBy(
      {this.id, this.language_id, this.stat_id});

  @override
  factory InputpokemonV2StatnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameVarSampOrderBy {
  InputpokemonV2StatnameVarSampOrderBy(
      {this.id, this.language_id, this.stat_id});

  @override
  factory InputpokemonV2StatnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2StatnameVarianceOrderBy {
  InputpokemonV2StatnameVarianceOrderBy(
      {this.id, this.language_id, this.stat_id});

  @override
  factory InputpokemonV2StatnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2StatnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? stat_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2StatnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$stat_id = stat_id;
    return Object.hashAll([l$id, l$language_id, l$stat_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2StatnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$stat_id = stat_id;
    final lOther$stat_id = other.stat_id;
    if (l$stat_id != lOther$stat_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboAggregateOrderBy {
  InputpokemonV2SupercontestcomboAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2SupercontestcomboAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboAggregateOrderByFromJson(json);

  final InputpokemonV2SupercontestcomboAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2SupercontestcomboMaxOrderBy? max;

  final InputpokemonV2SupercontestcomboMinOrderBy? min;

  final InputpokemonV2SupercontestcomboStddevOrderBy? stddev;

  final InputpokemonV2SupercontestcomboStddevPopOrderBy? stddev_pop;

  final InputpokemonV2SupercontestcomboStddevSampOrderBy? stddev_samp;

  final InputpokemonV2SupercontestcomboSumOrderBy? sum;

  final InputpokemonV2SupercontestcomboVarPopOrderBy? var_pop;

  final InputpokemonV2SupercontestcomboVarSampOrderBy? var_samp;

  final InputpokemonV2SupercontestcomboVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboAvgOrderBy {
  InputpokemonV2SupercontestcomboAvgOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboAvgOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboBoolExp {
  InputpokemonV2SupercontestcomboBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.first_move_id,
      this.id,
      this.pokemonV2MoveBySecondMoveId,
      this.pokemon_v2_move,
      this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2SupercontestcomboBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2SupercontestcomboBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2SupercontestcomboBoolExp>? $_or;

  final InputIntComparisonExp? first_move_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2MoveBoolExp? pokemonV2MoveBySecondMoveId;

  final InputpokemonV2MoveBoolExp? pokemon_v2_move;

  final InputIntComparisonExp? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$pokemonV2MoveBySecondMoveId = pokemonV2MoveBySecondMoveId;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$second_move_id = second_move_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$first_move_id,
      l$id,
      l$pokemonV2MoveBySecondMoveId,
      l$pokemon_v2_move,
      l$second_move_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemonV2MoveBySecondMoveId = pokemonV2MoveBySecondMoveId;
    final lOther$pokemonV2MoveBySecondMoveId =
        other.pokemonV2MoveBySecondMoveId;
    if (l$pokemonV2MoveBySecondMoveId != lOther$pokemonV2MoveBySecondMoveId)
      return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboMaxOrderBy {
  InputpokemonV2SupercontestcomboMaxOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboMaxOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboMinOrderBy {
  InputpokemonV2SupercontestcomboMinOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboMinOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboOrderBy {
  InputpokemonV2SupercontestcomboOrderBy(
      {this.first_move_id,
      this.id,
      this.pokemonV2MoveBySecondMoveId,
      this.pokemon_v2_move,
      this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2MoveOrderBy? pokemonV2MoveBySecondMoveId;

  final InputpokemonV2MoveOrderBy? pokemon_v2_move;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$pokemonV2MoveBySecondMoveId = pokemonV2MoveBySecondMoveId;
    final l$pokemon_v2_move = pokemon_v2_move;
    final l$second_move_id = second_move_id;
    return Object.hashAll([
      l$first_move_id,
      l$id,
      l$pokemonV2MoveBySecondMoveId,
      l$pokemon_v2_move,
      l$second_move_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemonV2MoveBySecondMoveId = pokemonV2MoveBySecondMoveId;
    final lOther$pokemonV2MoveBySecondMoveId =
        other.pokemonV2MoveBySecondMoveId;
    if (l$pokemonV2MoveBySecondMoveId != lOther$pokemonV2MoveBySecondMoveId)
      return false;
    final l$pokemon_v2_move = pokemon_v2_move;
    final lOther$pokemon_v2_move = other.pokemon_v2_move;
    if (l$pokemon_v2_move != lOther$pokemon_v2_move) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboStddevOrderBy {
  InputpokemonV2SupercontestcomboStddevOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboStddevOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboStddevPopOrderBy {
  InputpokemonV2SupercontestcomboStddevPopOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboStddevPopOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboStddevSampOrderBy {
  InputpokemonV2SupercontestcomboStddevSampOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboStddevSampOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboSumOrderBy {
  InputpokemonV2SupercontestcomboSumOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboSumOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboVarPopOrderBy {
  InputpokemonV2SupercontestcomboVarPopOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboVarPopOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboVarSampOrderBy {
  InputpokemonV2SupercontestcomboVarSampOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboVarSampOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontestcomboVarianceOrderBy {
  InputpokemonV2SupercontestcomboVarianceOrderBy(
      {this.first_move_id, this.id, this.second_move_id});

  @override
  factory InputpokemonV2SupercontestcomboVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontestcomboVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? first_move_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? second_move_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontestcomboVarianceOrderByToJson(this);
  int get hashCode {
    final l$first_move_id = first_move_id;
    final l$id = id;
    final l$second_move_id = second_move_id;
    return Object.hashAll([l$first_move_id, l$id, l$second_move_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontestcomboVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$first_move_id = first_move_id;
    final lOther$first_move_id = other.first_move_id;
    if (l$first_move_id != lOther$first_move_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$second_move_id = second_move_id;
    final lOther$second_move_id = other.second_move_id;
    if (l$second_move_id != lOther$second_move_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectBoolExp {
  InputpokemonV2SupercontesteffectBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.appeal,
      this.id,
      this.pokemon_v2_moves,
      this.pokemon_v2_supercontesteffectflavortexts});

  @override
  factory InputpokemonV2SupercontesteffectBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2SupercontesteffectBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2SupercontesteffectBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2SupercontesteffectBoolExp>? $_or;

  final InputIntComparisonExp? appeal;

  final InputIntComparisonExp? id;

  final InputpokemonV2MoveBoolExp? pokemon_v2_moves;

  final InputpokemonV2SupercontesteffectflavortextBoolExp?
      pokemon_v2_supercontesteffectflavortexts;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$appeal = appeal;
    final l$id = id;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final l$pokemon_v2_supercontesteffectflavortexts =
        pokemon_v2_supercontesteffectflavortexts;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$appeal,
      l$id,
      l$pokemon_v2_moves,
      l$pokemon_v2_supercontesteffectflavortexts
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$appeal = appeal;
    final lOther$appeal = other.appeal;
    if (l$appeal != lOther$appeal) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final lOther$pokemon_v2_moves = other.pokemon_v2_moves;
    if (l$pokemon_v2_moves != lOther$pokemon_v2_moves) return false;
    final l$pokemon_v2_supercontesteffectflavortexts =
        pokemon_v2_supercontesteffectflavortexts;
    final lOther$pokemon_v2_supercontesteffectflavortexts =
        other.pokemon_v2_supercontesteffectflavortexts;
    if (l$pokemon_v2_supercontesteffectflavortexts !=
        lOther$pokemon_v2_supercontesteffectflavortexts) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectOrderBy {
  InputpokemonV2SupercontesteffectOrderBy(
      {this.appeal,
      this.id,
      this.pokemon_v2_moves_aggregate,
      this.pokemon_v2_supercontesteffectflavortexts_aggregate});

  @override
  factory InputpokemonV2SupercontesteffectOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? appeal;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2MoveAggregateOrderBy? pokemon_v2_moves_aggregate;

  final InputpokemonV2SupercontesteffectflavortextAggregateOrderBy?
      pokemon_v2_supercontesteffectflavortexts_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectOrderByToJson(this);
  int get hashCode {
    final l$appeal = appeal;
    final l$id = id;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final l$pokemon_v2_supercontesteffectflavortexts_aggregate =
        pokemon_v2_supercontesteffectflavortexts_aggregate;
    return Object.hashAll([
      l$appeal,
      l$id,
      l$pokemon_v2_moves_aggregate,
      l$pokemon_v2_supercontesteffectflavortexts_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$appeal = appeal;
    final lOther$appeal = other.appeal;
    if (l$appeal != lOther$appeal) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final lOther$pokemon_v2_moves_aggregate = other.pokemon_v2_moves_aggregate;
    if (l$pokemon_v2_moves_aggregate != lOther$pokemon_v2_moves_aggregate)
      return false;
    final l$pokemon_v2_supercontesteffectflavortexts_aggregate =
        pokemon_v2_supercontesteffectflavortexts_aggregate;
    final lOther$pokemon_v2_supercontesteffectflavortexts_aggregate =
        other.pokemon_v2_supercontesteffectflavortexts_aggregate;
    if (l$pokemon_v2_supercontesteffectflavortexts_aggregate !=
        lOther$pokemon_v2_supercontesteffectflavortexts_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextAggregateOrderBy {
  InputpokemonV2SupercontesteffectflavortextAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2SupercontesteffectflavortextAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextAggregateOrderByFromJson(
          json);

  final InputpokemonV2SupercontesteffectflavortextAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2SupercontesteffectflavortextMaxOrderBy? max;

  final InputpokemonV2SupercontesteffectflavortextMinOrderBy? min;

  final InputpokemonV2SupercontesteffectflavortextStddevOrderBy? stddev;

  final InputpokemonV2SupercontesteffectflavortextStddevPopOrderBy? stddev_pop;

  final InputpokemonV2SupercontesteffectflavortextStddevSampOrderBy?
      stddev_samp;

  final InputpokemonV2SupercontesteffectflavortextSumOrderBy? sum;

  final InputpokemonV2SupercontesteffectflavortextVarPopOrderBy? var_pop;

  final InputpokemonV2SupercontesteffectflavortextVarSampOrderBy? var_samp;

  final InputpokemonV2SupercontesteffectflavortextVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other
            is InputpokemonV2SupercontesteffectflavortextAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextAvgOrderBy {
  InputpokemonV2SupercontesteffectflavortextAvgOrderBy(
      {this.id, this.language_id, this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextBoolExp {
  InputpokemonV2SupercontesteffectflavortextBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_v2_language,
      this.pokemon_v2_supercontesteffect,
      this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2SupercontesteffectflavortextBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2SupercontesteffectflavortextBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2SupercontesteffectflavortextBoolExp>? $_or;

  final InputStringComparisonExp? flavor_text;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2SupercontesteffectBoolExp? pokemon_v2_supercontesteffect;

  final InputIntComparisonExp? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_supercontesteffect = pokemon_v2_supercontesteffect;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_v2_language,
      l$pokemon_v2_supercontesteffect,
      l$super_contest_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_supercontesteffect = pokemon_v2_supercontesteffect;
    final lOther$pokemon_v2_supercontesteffect =
        other.pokemon_v2_supercontesteffect;
    if (l$pokemon_v2_supercontesteffect != lOther$pokemon_v2_supercontesteffect)
      return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextMaxOrderBy {
  InputpokemonV2SupercontesteffectflavortextMaxOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextMaxOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll(
        [l$flavor_text, l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextMinOrderBy {
  InputpokemonV2SupercontesteffectflavortextMinOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextMinOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll(
        [l$flavor_text, l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextOrderBy {
  InputpokemonV2SupercontesteffectflavortextOrderBy(
      {this.flavor_text,
      this.id,
      this.language_id,
      this.pokemon_v2_language,
      this.pokemon_v2_supercontesteffect,
      this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? flavor_text;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2SupercontesteffectOrderBy? pokemon_v2_supercontesteffect;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextOrderByToJson(this);
  int get hashCode {
    final l$flavor_text = flavor_text;
    final l$id = id;
    final l$language_id = language_id;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_supercontesteffect = pokemon_v2_supercontesteffect;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([
      l$flavor_text,
      l$id,
      l$language_id,
      l$pokemon_v2_language,
      l$pokemon_v2_supercontesteffect,
      l$super_contest_effect_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$flavor_text = flavor_text;
    final lOther$flavor_text = other.flavor_text;
    if (l$flavor_text != lOther$flavor_text) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_supercontesteffect = pokemon_v2_supercontesteffect;
    final lOther$pokemon_v2_supercontesteffect =
        other.pokemon_v2_supercontesteffect;
    if (l$pokemon_v2_supercontesteffect != lOther$pokemon_v2_supercontesteffect)
      return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextStddevOrderBy {
  InputpokemonV2SupercontesteffectflavortextStddevOrderBy(
      {this.id, this.language_id, this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextStddevPopOrderBy {
  InputpokemonV2SupercontesteffectflavortextStddevPopOrderBy(
      {this.id, this.language_id, this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextStddevPopOrderByFromJson(
          json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other
            is InputpokemonV2SupercontesteffectflavortextStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextStddevSampOrderBy {
  InputpokemonV2SupercontesteffectflavortextStddevSampOrderBy(
      {this.id, this.language_id, this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextStddevSampOrderByFromJson(
          json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other
            is InputpokemonV2SupercontesteffectflavortextStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextSumOrderBy {
  InputpokemonV2SupercontesteffectflavortextSumOrderBy(
      {this.id, this.language_id, this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextVarPopOrderBy {
  InputpokemonV2SupercontesteffectflavortextVarPopOrderBy(
      {this.id, this.language_id, this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextVarSampOrderBy {
  InputpokemonV2SupercontesteffectflavortextVarSampOrderBy(
      {this.id, this.language_id, this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2SupercontesteffectflavortextVarianceOrderBy {
  InputpokemonV2SupercontesteffectflavortextVarianceOrderBy(
      {this.id, this.language_id, this.super_contest_effect_id});

  @override
  factory InputpokemonV2SupercontesteffectflavortextVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2SupercontesteffectflavortextVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? super_contest_effect_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2SupercontesteffectflavortextVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$super_contest_effect_id = super_contest_effect_id;
    return Object.hashAll([l$id, l$language_id, l$super_contest_effect_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2SupercontesteffectflavortextVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$super_contest_effect_id = super_contest_effect_id;
    final lOther$super_contest_effect_id = other.super_contest_effect_id;
    if (l$super_contest_effect_id != lOther$super_contest_effect_id)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeAggregateOrderBy {
  InputpokemonV2TypeAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2TypeAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeAggregateOrderByFromJson(json);

  final InputpokemonV2TypeAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2TypeMaxOrderBy? max;

  final InputpokemonV2TypeMinOrderBy? min;

  final InputpokemonV2TypeStddevOrderBy? stddev;

  final InputpokemonV2TypeStddevPopOrderBy? stddev_pop;

  final InputpokemonV2TypeStddevSampOrderBy? stddev_samp;

  final InputpokemonV2TypeSumOrderBy? sum;

  final InputpokemonV2TypeVarPopOrderBy? var_pop;

  final InputpokemonV2TypeVarSampOrderBy? var_samp;

  final InputpokemonV2TypeVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeAvgOrderBy {
  InputpokemonV2TypeAvgOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2TypeAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypeAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2TypeAvgOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$generation_id, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeBoolExp {
  InputpokemonV2TypeBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.name,
      this.pokemonV2PokemonevolutionsByPartyTypeId,
      this.pokemonV2TypeefficaciesByTargetTypeId,
      this.pokemon_v2_berries,
      this.pokemon_v2_generation,
      this.pokemon_v2_movechanges,
      this.pokemon_v2_movedamageclass,
      this.pokemon_v2_moves,
      this.pokemon_v2_pokemonevolutions,
      this.pokemon_v2_pokemonformtypes,
      this.pokemon_v2_pokemontypepasts,
      this.pokemon_v2_pokemontypes,
      this.pokemon_v2_typeefficacies,
      this.pokemon_v2_typegameindices,
      this.pokemon_v2_typenames});

  @override
  factory InputpokemonV2TypeBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypeBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2TypeBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2TypeBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2TypeBoolExp>? $_or;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? move_damage_class_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2PokemonevolutionBoolExp?
      pokemonV2PokemonevolutionsByPartyTypeId;

  final InputpokemonV2TypeefficacyBoolExp?
      pokemonV2TypeefficaciesByTargetTypeId;

  final InputpokemonV2BerryBoolExp? pokemon_v2_berries;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2MovechangeBoolExp? pokemon_v2_movechanges;

  final InputpokemonV2MovedamageclassBoolExp? pokemon_v2_movedamageclass;

  final InputpokemonV2MoveBoolExp? pokemon_v2_moves;

  final InputpokemonV2PokemonevolutionBoolExp? pokemon_v2_pokemonevolutions;

  final InputpokemonV2PokemonformtypeBoolExp? pokemon_v2_pokemonformtypes;

  final InputpokemonV2PokemontypepastBoolExp? pokemon_v2_pokemontypepasts;

  final InputpokemonV2PokemontypeBoolExp? pokemon_v2_pokemontypes;

  final InputpokemonV2TypeefficacyBoolExp? pokemon_v2_typeefficacies;

  final InputpokemonV2TypegameindexBoolExp? pokemon_v2_typegameindices;

  final InputpokemonV2TypenameBoolExp? pokemon_v2_typenames;

  Map<String, dynamic> toJson() => _$InputpokemonV2TypeBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    final l$pokemonV2PokemonevolutionsByPartyTypeId =
        pokemonV2PokemonevolutionsByPartyTypeId;
    final l$pokemonV2TypeefficaciesByTargetTypeId =
        pokemonV2TypeefficaciesByTargetTypeId;
    final l$pokemon_v2_berries = pokemon_v2_berries;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_movechanges = pokemon_v2_movechanges;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final l$pokemon_v2_pokemonformtypes = pokemon_v2_pokemonformtypes;
    final l$pokemon_v2_pokemontypepasts = pokemon_v2_pokemontypepasts;
    final l$pokemon_v2_pokemontypes = pokemon_v2_pokemontypes;
    final l$pokemon_v2_typeefficacies = pokemon_v2_typeefficacies;
    final l$pokemon_v2_typegameindices = pokemon_v2_typegameindices;
    final l$pokemon_v2_typenames = pokemon_v2_typenames;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$name,
      l$pokemonV2PokemonevolutionsByPartyTypeId,
      l$pokemonV2TypeefficaciesByTargetTypeId,
      l$pokemon_v2_berries,
      l$pokemon_v2_generation,
      l$pokemon_v2_movechanges,
      l$pokemon_v2_movedamageclass,
      l$pokemon_v2_moves,
      l$pokemon_v2_pokemonevolutions,
      l$pokemon_v2_pokemonformtypes,
      l$pokemon_v2_pokemontypepasts,
      l$pokemon_v2_pokemontypes,
      l$pokemon_v2_typeefficacies,
      l$pokemon_v2_typegameindices,
      l$pokemon_v2_typenames
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2PokemonevolutionsByPartyTypeId =
        pokemonV2PokemonevolutionsByPartyTypeId;
    final lOther$pokemonV2PokemonevolutionsByPartyTypeId =
        other.pokemonV2PokemonevolutionsByPartyTypeId;
    if (l$pokemonV2PokemonevolutionsByPartyTypeId !=
        lOther$pokemonV2PokemonevolutionsByPartyTypeId) return false;
    final l$pokemonV2TypeefficaciesByTargetTypeId =
        pokemonV2TypeefficaciesByTargetTypeId;
    final lOther$pokemonV2TypeefficaciesByTargetTypeId =
        other.pokemonV2TypeefficaciesByTargetTypeId;
    if (l$pokemonV2TypeefficaciesByTargetTypeId !=
        lOther$pokemonV2TypeefficaciesByTargetTypeId) return false;
    final l$pokemon_v2_berries = pokemon_v2_berries;
    final lOther$pokemon_v2_berries = other.pokemon_v2_berries;
    if (l$pokemon_v2_berries != lOther$pokemon_v2_berries) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_movechanges = pokemon_v2_movechanges;
    final lOther$pokemon_v2_movechanges = other.pokemon_v2_movechanges;
    if (l$pokemon_v2_movechanges != lOther$pokemon_v2_movechanges) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    final l$pokemon_v2_moves = pokemon_v2_moves;
    final lOther$pokemon_v2_moves = other.pokemon_v2_moves;
    if (l$pokemon_v2_moves != lOther$pokemon_v2_moves) return false;
    final l$pokemon_v2_pokemonevolutions = pokemon_v2_pokemonevolutions;
    final lOther$pokemon_v2_pokemonevolutions =
        other.pokemon_v2_pokemonevolutions;
    if (l$pokemon_v2_pokemonevolutions != lOther$pokemon_v2_pokemonevolutions)
      return false;
    final l$pokemon_v2_pokemonformtypes = pokemon_v2_pokemonformtypes;
    final lOther$pokemon_v2_pokemonformtypes =
        other.pokemon_v2_pokemonformtypes;
    if (l$pokemon_v2_pokemonformtypes != lOther$pokemon_v2_pokemonformtypes)
      return false;
    final l$pokemon_v2_pokemontypepasts = pokemon_v2_pokemontypepasts;
    final lOther$pokemon_v2_pokemontypepasts =
        other.pokemon_v2_pokemontypepasts;
    if (l$pokemon_v2_pokemontypepasts != lOther$pokemon_v2_pokemontypepasts)
      return false;
    final l$pokemon_v2_pokemontypes = pokemon_v2_pokemontypes;
    final lOther$pokemon_v2_pokemontypes = other.pokemon_v2_pokemontypes;
    if (l$pokemon_v2_pokemontypes != lOther$pokemon_v2_pokemontypes)
      return false;
    final l$pokemon_v2_typeefficacies = pokemon_v2_typeefficacies;
    final lOther$pokemon_v2_typeefficacies = other.pokemon_v2_typeefficacies;
    if (l$pokemon_v2_typeefficacies != lOther$pokemon_v2_typeefficacies)
      return false;
    final l$pokemon_v2_typegameindices = pokemon_v2_typegameindices;
    final lOther$pokemon_v2_typegameindices = other.pokemon_v2_typegameindices;
    if (l$pokemon_v2_typegameindices != lOther$pokemon_v2_typegameindices)
      return false;
    final l$pokemon_v2_typenames = pokemon_v2_typenames;
    final lOther$pokemon_v2_typenames = other.pokemon_v2_typenames;
    if (l$pokemon_v2_typenames != lOther$pokemon_v2_typenames) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeMaxOrderBy {
  InputpokemonV2TypeMaxOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id, this.name});

  @override
  factory InputpokemonV2TypeMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypeMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() => _$InputpokemonV2TypeMaxOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    return Object.hashAll(
        [l$generation_id, l$id, l$move_damage_class_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeMinOrderBy {
  InputpokemonV2TypeMinOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id, this.name});

  @override
  factory InputpokemonV2TypeMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypeMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  Map<String, dynamic> toJson() => _$InputpokemonV2TypeMinOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    return Object.hashAll(
        [l$generation_id, l$id, l$move_damage_class_id, l$name]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeOrderBy {
  InputpokemonV2TypeOrderBy(
      {this.generation_id,
      this.id,
      this.move_damage_class_id,
      this.name,
      this.pokemonV2PokemonevolutionsByPartyTypeId_aggregate,
      this.pokemonV2TypeefficaciesByTargetTypeId_aggregate,
      this.pokemon_v2_berries_aggregate,
      this.pokemon_v2_generation,
      this.pokemon_v2_movechanges_aggregate,
      this.pokemon_v2_movedamageclass,
      this.pokemon_v2_moves_aggregate,
      this.pokemon_v2_pokemonevolutions_aggregate,
      this.pokemon_v2_pokemonformtypes_aggregate,
      this.pokemon_v2_pokemontypepasts_aggregate,
      this.pokemon_v2_pokemontypes_aggregate,
      this.pokemon_v2_typeefficacies_aggregate,
      this.pokemon_v2_typegameindices_aggregate,
      this.pokemon_v2_typenames_aggregate});

  @override
  factory InputpokemonV2TypeOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypeOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemonV2PokemonevolutionsByPartyTypeId_aggregate;

  final InputpokemonV2TypeefficacyAggregateOrderBy?
      pokemonV2TypeefficaciesByTargetTypeId_aggregate;

  final InputpokemonV2BerryAggregateOrderBy? pokemon_v2_berries_aggregate;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2MovechangeAggregateOrderBy?
      pokemon_v2_movechanges_aggregate;

  final InputpokemonV2MovedamageclassOrderBy? pokemon_v2_movedamageclass;

  final InputpokemonV2MoveAggregateOrderBy? pokemon_v2_moves_aggregate;

  final InputpokemonV2PokemonevolutionAggregateOrderBy?
      pokemon_v2_pokemonevolutions_aggregate;

  final InputpokemonV2PokemonformtypeAggregateOrderBy?
      pokemon_v2_pokemonformtypes_aggregate;

  final InputpokemonV2PokemontypepastAggregateOrderBy?
      pokemon_v2_pokemontypepasts_aggregate;

  final InputpokemonV2PokemontypeAggregateOrderBy?
      pokemon_v2_pokemontypes_aggregate;

  final InputpokemonV2TypeefficacyAggregateOrderBy?
      pokemon_v2_typeefficacies_aggregate;

  final InputpokemonV2TypegameindexAggregateOrderBy?
      pokemon_v2_typegameindices_aggregate;

  final InputpokemonV2TypenameAggregateOrderBy? pokemon_v2_typenames_aggregate;

  Map<String, dynamic> toJson() => _$InputpokemonV2TypeOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    final l$name = name;
    final l$pokemonV2PokemonevolutionsByPartyTypeId_aggregate =
        pokemonV2PokemonevolutionsByPartyTypeId_aggregate;
    final l$pokemonV2TypeefficaciesByTargetTypeId_aggregate =
        pokemonV2TypeefficaciesByTargetTypeId_aggregate;
    final l$pokemon_v2_berries_aggregate = pokemon_v2_berries_aggregate;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_movechanges_aggregate = pokemon_v2_movechanges_aggregate;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final l$pokemon_v2_pokemonformtypes_aggregate =
        pokemon_v2_pokemonformtypes_aggregate;
    final l$pokemon_v2_pokemontypepasts_aggregate =
        pokemon_v2_pokemontypepasts_aggregate;
    final l$pokemon_v2_pokemontypes_aggregate =
        pokemon_v2_pokemontypes_aggregate;
    final l$pokemon_v2_typeefficacies_aggregate =
        pokemon_v2_typeefficacies_aggregate;
    final l$pokemon_v2_typegameindices_aggregate =
        pokemon_v2_typegameindices_aggregate;
    final l$pokemon_v2_typenames_aggregate = pokemon_v2_typenames_aggregate;
    return Object.hashAll([
      l$generation_id,
      l$id,
      l$move_damage_class_id,
      l$name,
      l$pokemonV2PokemonevolutionsByPartyTypeId_aggregate,
      l$pokemonV2TypeefficaciesByTargetTypeId_aggregate,
      l$pokemon_v2_berries_aggregate,
      l$pokemon_v2_generation,
      l$pokemon_v2_movechanges_aggregate,
      l$pokemon_v2_movedamageclass,
      l$pokemon_v2_moves_aggregate,
      l$pokemon_v2_pokemonevolutions_aggregate,
      l$pokemon_v2_pokemonformtypes_aggregate,
      l$pokemon_v2_pokemontypepasts_aggregate,
      l$pokemon_v2_pokemontypes_aggregate,
      l$pokemon_v2_typeefficacies_aggregate,
      l$pokemon_v2_typegameindices_aggregate,
      l$pokemon_v2_typenames_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemonV2PokemonevolutionsByPartyTypeId_aggregate =
        pokemonV2PokemonevolutionsByPartyTypeId_aggregate;
    final lOther$pokemonV2PokemonevolutionsByPartyTypeId_aggregate =
        other.pokemonV2PokemonevolutionsByPartyTypeId_aggregate;
    if (l$pokemonV2PokemonevolutionsByPartyTypeId_aggregate !=
        lOther$pokemonV2PokemonevolutionsByPartyTypeId_aggregate) return false;
    final l$pokemonV2TypeefficaciesByTargetTypeId_aggregate =
        pokemonV2TypeefficaciesByTargetTypeId_aggregate;
    final lOther$pokemonV2TypeefficaciesByTargetTypeId_aggregate =
        other.pokemonV2TypeefficaciesByTargetTypeId_aggregate;
    if (l$pokemonV2TypeefficaciesByTargetTypeId_aggregate !=
        lOther$pokemonV2TypeefficaciesByTargetTypeId_aggregate) return false;
    final l$pokemon_v2_berries_aggregate = pokemon_v2_berries_aggregate;
    final lOther$pokemon_v2_berries_aggregate =
        other.pokemon_v2_berries_aggregate;
    if (l$pokemon_v2_berries_aggregate != lOther$pokemon_v2_berries_aggregate)
      return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_movechanges_aggregate = pokemon_v2_movechanges_aggregate;
    final lOther$pokemon_v2_movechanges_aggregate =
        other.pokemon_v2_movechanges_aggregate;
    if (l$pokemon_v2_movechanges_aggregate !=
        lOther$pokemon_v2_movechanges_aggregate) return false;
    final l$pokemon_v2_movedamageclass = pokemon_v2_movedamageclass;
    final lOther$pokemon_v2_movedamageclass = other.pokemon_v2_movedamageclass;
    if (l$pokemon_v2_movedamageclass != lOther$pokemon_v2_movedamageclass)
      return false;
    final l$pokemon_v2_moves_aggregate = pokemon_v2_moves_aggregate;
    final lOther$pokemon_v2_moves_aggregate = other.pokemon_v2_moves_aggregate;
    if (l$pokemon_v2_moves_aggregate != lOther$pokemon_v2_moves_aggregate)
      return false;
    final l$pokemon_v2_pokemonevolutions_aggregate =
        pokemon_v2_pokemonevolutions_aggregate;
    final lOther$pokemon_v2_pokemonevolutions_aggregate =
        other.pokemon_v2_pokemonevolutions_aggregate;
    if (l$pokemon_v2_pokemonevolutions_aggregate !=
        lOther$pokemon_v2_pokemonevolutions_aggregate) return false;
    final l$pokemon_v2_pokemonformtypes_aggregate =
        pokemon_v2_pokemonformtypes_aggregate;
    final lOther$pokemon_v2_pokemonformtypes_aggregate =
        other.pokemon_v2_pokemonformtypes_aggregate;
    if (l$pokemon_v2_pokemonformtypes_aggregate !=
        lOther$pokemon_v2_pokemonformtypes_aggregate) return false;
    final l$pokemon_v2_pokemontypepasts_aggregate =
        pokemon_v2_pokemontypepasts_aggregate;
    final lOther$pokemon_v2_pokemontypepasts_aggregate =
        other.pokemon_v2_pokemontypepasts_aggregate;
    if (l$pokemon_v2_pokemontypepasts_aggregate !=
        lOther$pokemon_v2_pokemontypepasts_aggregate) return false;
    final l$pokemon_v2_pokemontypes_aggregate =
        pokemon_v2_pokemontypes_aggregate;
    final lOther$pokemon_v2_pokemontypes_aggregate =
        other.pokemon_v2_pokemontypes_aggregate;
    if (l$pokemon_v2_pokemontypes_aggregate !=
        lOther$pokemon_v2_pokemontypes_aggregate) return false;
    final l$pokemon_v2_typeefficacies_aggregate =
        pokemon_v2_typeefficacies_aggregate;
    final lOther$pokemon_v2_typeefficacies_aggregate =
        other.pokemon_v2_typeefficacies_aggregate;
    if (l$pokemon_v2_typeefficacies_aggregate !=
        lOther$pokemon_v2_typeefficacies_aggregate) return false;
    final l$pokemon_v2_typegameindices_aggregate =
        pokemon_v2_typegameindices_aggregate;
    final lOther$pokemon_v2_typegameindices_aggregate =
        other.pokemon_v2_typegameindices_aggregate;
    if (l$pokemon_v2_typegameindices_aggregate !=
        lOther$pokemon_v2_typegameindices_aggregate) return false;
    final l$pokemon_v2_typenames_aggregate = pokemon_v2_typenames_aggregate;
    final lOther$pokemon_v2_typenames_aggregate =
        other.pokemon_v2_typenames_aggregate;
    if (l$pokemon_v2_typenames_aggregate !=
        lOther$pokemon_v2_typenames_aggregate) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeStddevOrderBy {
  InputpokemonV2TypeStddevOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2TypeStddevOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypeStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeStddevOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$generation_id, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeStddevPopOrderBy {
  InputpokemonV2TypeStddevPopOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2TypeStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeStddevPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$generation_id, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeStddevSampOrderBy {
  InputpokemonV2TypeStddevSampOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2TypeStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeStddevSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$generation_id, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeSumOrderBy {
  InputpokemonV2TypeSumOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2TypeSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypeSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2TypeSumOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$generation_id, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeVarPopOrderBy {
  InputpokemonV2TypeVarPopOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2TypeVarPopOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypeVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeVarPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$generation_id, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeVarSampOrderBy {
  InputpokemonV2TypeVarSampOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2TypeVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeVarSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$generation_id, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeVarianceOrderBy {
  InputpokemonV2TypeVarianceOrderBy(
      {this.generation_id, this.id, this.move_damage_class_id});

  @override
  factory InputpokemonV2TypeVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_damage_class_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeVarianceOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$move_damage_class_id = move_damage_class_id;
    return Object.hashAll([l$generation_id, l$id, l$move_damage_class_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_damage_class_id = move_damage_class_id;
    final lOther$move_damage_class_id = other.move_damage_class_id;
    if (l$move_damage_class_id != lOther$move_damage_class_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyAggregateOrderBy {
  InputpokemonV2TypeefficacyAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2TypeefficacyAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyAggregateOrderByFromJson(json);

  final InputpokemonV2TypeefficacyAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2TypeefficacyMaxOrderBy? max;

  final InputpokemonV2TypeefficacyMinOrderBy? min;

  final InputpokemonV2TypeefficacyStddevOrderBy? stddev;

  final InputpokemonV2TypeefficacyStddevPopOrderBy? stddev_pop;

  final InputpokemonV2TypeefficacyStddevSampOrderBy? stddev_samp;

  final InputpokemonV2TypeefficacySumOrderBy? sum;

  final InputpokemonV2TypeefficacyVarPopOrderBy? var_pop;

  final InputpokemonV2TypeefficacyVarSampOrderBy? var_samp;

  final InputpokemonV2TypeefficacyVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyAvgOrderBy {
  InputpokemonV2TypeefficacyAvgOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyAvgOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyBoolExp {
  InputpokemonV2TypeefficacyBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.damage_factor,
      this.damage_type_id,
      this.id,
      this.pokemonV2TypeByTargetTypeId,
      this.pokemon_v2_type,
      this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2TypeefficacyBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2TypeefficacyBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2TypeefficacyBoolExp>? $_or;

  final InputIntComparisonExp? damage_factor;

  final InputIntComparisonExp? damage_type_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2TypeBoolExp? pokemonV2TypeByTargetTypeId;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$pokemonV2TypeByTargetTypeId = pokemonV2TypeByTargetTypeId;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$target_type_id = target_type_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$damage_factor,
      l$damage_type_id,
      l$id,
      l$pokemonV2TypeByTargetTypeId,
      l$pokemon_v2_type,
      l$target_type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemonV2TypeByTargetTypeId = pokemonV2TypeByTargetTypeId;
    final lOther$pokemonV2TypeByTargetTypeId =
        other.pokemonV2TypeByTargetTypeId;
    if (l$pokemonV2TypeByTargetTypeId != lOther$pokemonV2TypeByTargetTypeId)
      return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyMaxOrderBy {
  InputpokemonV2TypeefficacyMaxOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyMaxOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyMinOrderBy {
  InputpokemonV2TypeefficacyMinOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyMinOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyOrderBy {
  InputpokemonV2TypeefficacyOrderBy(
      {this.damage_factor,
      this.damage_type_id,
      this.id,
      this.pokemonV2TypeByTargetTypeId,
      this.pokemon_v2_type,
      this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2TypeOrderBy? pokemonV2TypeByTargetTypeId;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$pokemonV2TypeByTargetTypeId = pokemonV2TypeByTargetTypeId;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$target_type_id = target_type_id;
    return Object.hashAll([
      l$damage_factor,
      l$damage_type_id,
      l$id,
      l$pokemonV2TypeByTargetTypeId,
      l$pokemon_v2_type,
      l$target_type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemonV2TypeByTargetTypeId = pokemonV2TypeByTargetTypeId;
    final lOther$pokemonV2TypeByTargetTypeId =
        other.pokemonV2TypeByTargetTypeId;
    if (l$pokemonV2TypeByTargetTypeId != lOther$pokemonV2TypeByTargetTypeId)
      return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyStddevOrderBy {
  InputpokemonV2TypeefficacyStddevOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyStddevOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyStddevPopOrderBy {
  InputpokemonV2TypeefficacyStddevPopOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyStddevPopOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyStddevSampOrderBy {
  InputpokemonV2TypeefficacyStddevSampOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyStddevSampOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacySumOrderBy {
  InputpokemonV2TypeefficacySumOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacySumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacySumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacySumOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacySumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyVarPopOrderBy {
  InputpokemonV2TypeefficacyVarPopOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyVarPopOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyVarSampOrderBy {
  InputpokemonV2TypeefficacyVarSampOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyVarSampOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypeefficacyVarianceOrderBy {
  InputpokemonV2TypeefficacyVarianceOrderBy(
      {this.damage_factor, this.damage_type_id, this.id, this.target_type_id});

  @override
  factory InputpokemonV2TypeefficacyVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypeefficacyVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_factor;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? damage_type_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? target_type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypeefficacyVarianceOrderByToJson(this);
  int get hashCode {
    final l$damage_factor = damage_factor;
    final l$damage_type_id = damage_type_id;
    final l$id = id;
    final l$target_type_id = target_type_id;
    return Object.hashAll(
        [l$damage_factor, l$damage_type_id, l$id, l$target_type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypeefficacyVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$damage_factor = damage_factor;
    final lOther$damage_factor = other.damage_factor;
    if (l$damage_factor != lOther$damage_factor) return false;
    final l$damage_type_id = damage_type_id;
    final lOther$damage_type_id = other.damage_type_id;
    if (l$damage_type_id != lOther$damage_type_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$target_type_id = target_type_id;
    final lOther$target_type_id = other.target_type_id;
    if (l$target_type_id != lOther$target_type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexAggregateOrderBy {
  InputpokemonV2TypegameindexAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2TypegameindexAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexAggregateOrderByFromJson(json);

  final InputpokemonV2TypegameindexAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2TypegameindexMaxOrderBy? max;

  final InputpokemonV2TypegameindexMinOrderBy? min;

  final InputpokemonV2TypegameindexStddevOrderBy? stddev;

  final InputpokemonV2TypegameindexStddevPopOrderBy? stddev_pop;

  final InputpokemonV2TypegameindexStddevSampOrderBy? stddev_samp;

  final InputpokemonV2TypegameindexSumOrderBy? sum;

  final InputpokemonV2TypegameindexVarPopOrderBy? var_pop;

  final InputpokemonV2TypegameindexVarSampOrderBy? var_samp;

  final InputpokemonV2TypegameindexVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexAvgOrderBy {
  InputpokemonV2TypegameindexAvgOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexAvgOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexBoolExp {
  InputpokemonV2TypegameindexBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.game_index,
      this.generation_id,
      this.id,
      this.pokemon_v2_generation,
      this.pokemon_v2_type,
      this.type_id});

  @override
  factory InputpokemonV2TypegameindexBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2TypegameindexBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2TypegameindexBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2TypegameindexBoolExp>? $_or;

  final InputIntComparisonExp? game_index;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$type_id = type_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$game_index,
      l$generation_id,
      l$id,
      l$pokemon_v2_generation,
      l$pokemon_v2_type,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexMaxOrderBy {
  InputpokemonV2TypegameindexMaxOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexMaxOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexMinOrderBy {
  InputpokemonV2TypegameindexMinOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexMinOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexOrderBy {
  InputpokemonV2TypegameindexOrderBy(
      {this.game_index,
      this.generation_id,
      this.id,
      this.pokemon_v2_generation,
      this.pokemon_v2_type,
      this.type_id});

  @override
  factory InputpokemonV2TypegameindexOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$type_id = type_id;
    return Object.hashAll([
      l$game_index,
      l$generation_id,
      l$id,
      l$pokemon_v2_generation,
      l$pokemon_v2_type,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexStddevOrderBy {
  InputpokemonV2TypegameindexStddevOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexStddevOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexStddevPopOrderBy {
  InputpokemonV2TypegameindexStddevPopOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexStddevPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexStddevSampOrderBy {
  InputpokemonV2TypegameindexStddevSampOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexStddevSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexSumOrderBy {
  InputpokemonV2TypegameindexSumOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexSumOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexVarPopOrderBy {
  InputpokemonV2TypegameindexVarPopOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexVarPopOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexVarSampOrderBy {
  InputpokemonV2TypegameindexVarSampOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexVarSampOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypegameindexVarianceOrderBy {
  InputpokemonV2TypegameindexVarianceOrderBy(
      {this.game_index, this.generation_id, this.id, this.type_id});

  @override
  factory InputpokemonV2TypegameindexVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypegameindexVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? game_index;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypegameindexVarianceOrderByToJson(this);
  int get hashCode {
    final l$game_index = game_index;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$type_id = type_id;
    return Object.hashAll([l$game_index, l$generation_id, l$id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypegameindexVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$game_index = game_index;
    final lOther$game_index = other.game_index;
    if (l$game_index != lOther$game_index) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameAggregateOrderBy {
  InputpokemonV2TypenameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2TypenameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameAggregateOrderByFromJson(json);

  final InputpokemonV2TypenameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2TypenameMaxOrderBy? max;

  final InputpokemonV2TypenameMinOrderBy? min;

  final InputpokemonV2TypenameStddevOrderBy? stddev;

  final InputpokemonV2TypenameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2TypenameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2TypenameSumOrderBy? sum;

  final InputpokemonV2TypenameVarPopOrderBy? var_pop;

  final InputpokemonV2TypenameVarSampOrderBy? var_samp;

  final InputpokemonV2TypenameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameAvgOrderBy {
  InputpokemonV2TypenameAvgOrderBy({this.id, this.language_id, this.type_id});

  @override
  factory InputpokemonV2TypenameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameBoolExp {
  InputpokemonV2TypenameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_type,
      this.type_id});

  @override
  factory InputpokemonV2TypenameBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2TypenameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2TypenameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2TypenameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2TypeBoolExp? pokemon_v2_type;

  final InputIntComparisonExp? type_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2TypenameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$type_id = type_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_type,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameMaxOrderBy {
  InputpokemonV2TypenameMaxOrderBy(
      {this.id, this.language_id, this.name, this.type_id});

  @override
  factory InputpokemonV2TypenameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameMinOrderBy {
  InputpokemonV2TypenameMinOrderBy(
      {this.id, this.language_id, this.name, this.type_id});

  @override
  factory InputpokemonV2TypenameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameOrderBy {
  InputpokemonV2TypenameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_type,
      this.type_id});

  @override
  factory InputpokemonV2TypenameOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2TypeOrderBy? pokemon_v2_type;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2TypenameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_type = pokemon_v2_type;
    final l$type_id = type_id;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_type,
      l$type_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_type = pokemon_v2_type;
    final lOther$pokemon_v2_type = other.pokemon_v2_type;
    if (l$pokemon_v2_type != lOther$pokemon_v2_type) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameStddevOrderBy {
  InputpokemonV2TypenameStddevOrderBy(
      {this.id, this.language_id, this.type_id});

  @override
  factory InputpokemonV2TypenameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameStddevPopOrderBy {
  InputpokemonV2TypenameStddevPopOrderBy(
      {this.id, this.language_id, this.type_id});

  @override
  factory InputpokemonV2TypenameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameStddevSampOrderBy {
  InputpokemonV2TypenameStddevSampOrderBy(
      {this.id, this.language_id, this.type_id});

  @override
  factory InputpokemonV2TypenameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameSumOrderBy {
  InputpokemonV2TypenameSumOrderBy({this.id, this.language_id, this.type_id});

  @override
  factory InputpokemonV2TypenameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameVarPopOrderBy {
  InputpokemonV2TypenameVarPopOrderBy(
      {this.id, this.language_id, this.type_id});

  @override
  factory InputpokemonV2TypenameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameVarSampOrderBy {
  InputpokemonV2TypenameVarSampOrderBy(
      {this.id, this.language_id, this.type_id});

  @override
  factory InputpokemonV2TypenameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2TypenameVarianceOrderBy {
  InputpokemonV2TypenameVarianceOrderBy(
      {this.id, this.language_id, this.type_id});

  @override
  factory InputpokemonV2TypenameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2TypenameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? type_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2TypenameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$type_id = type_id;
    return Object.hashAll([l$id, l$language_id, l$type_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2TypenameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$type_id = type_id;
    final lOther$type_id = other.type_id;
    if (l$type_id != lOther$type_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionAggregateOrderBy {
  InputpokemonV2VersionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2VersionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionAggregateOrderByFromJson(json);

  final InputpokemonV2VersionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2VersionMaxOrderBy? max;

  final InputpokemonV2VersionMinOrderBy? min;

  final InputpokemonV2VersionStddevOrderBy? stddev;

  final InputpokemonV2VersionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2VersionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2VersionSumOrderBy? sum;

  final InputpokemonV2VersionVarPopOrderBy? var_pop;

  final InputpokemonV2VersionVarSampOrderBy? var_samp;

  final InputpokemonV2VersionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionAvgOrderBy {
  InputpokemonV2VersionAvgOrderBy({this.id, this.version_group_id});

  @override
  factory InputpokemonV2VersionAvgOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2VersionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionBoolExp {
  InputpokemonV2VersionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.name,
      this.pokemon_v2_encounters,
      this.pokemon_v2_locationareaencounterrates,
      this.pokemon_v2_pokemongameindices,
      this.pokemon_v2_pokemonitems,
      this.pokemon_v2_pokemonspeciesflavortexts,
      this.pokemon_v2_versiongroup,
      this.pokemon_v2_versionnames,
      this.version_group_id});

  @override
  factory InputpokemonV2VersionBoolExp.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2VersionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2VersionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2VersionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2VersionBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputpokemonV2EncounterBoolExp? pokemon_v2_encounters;

  final InputpokemonV2LocationareaencounterrateBoolExp?
      pokemon_v2_locationareaencounterrates;

  final InputpokemonV2PokemongameindexBoolExp? pokemon_v2_pokemongameindices;

  final InputpokemonV2PokemonitemBoolExp? pokemon_v2_pokemonitems;

  final InputpokemonV2PokemonspeciesflavortextBoolExp?
      pokemon_v2_pokemonspeciesflavortexts;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputpokemonV2VersionnameBoolExp? pokemon_v2_versionnames;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2VersionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_encounters = pokemon_v2_encounters;
    final l$pokemon_v2_locationareaencounterrates =
        pokemon_v2_locationareaencounterrates;
    final l$pokemon_v2_pokemongameindices = pokemon_v2_pokemongameindices;
    final l$pokemon_v2_pokemonitems = pokemon_v2_pokemonitems;
    final l$pokemon_v2_pokemonspeciesflavortexts =
        pokemon_v2_pokemonspeciesflavortexts;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$pokemon_v2_versionnames = pokemon_v2_versionnames;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$name,
      l$pokemon_v2_encounters,
      l$pokemon_v2_locationareaencounterrates,
      l$pokemon_v2_pokemongameindices,
      l$pokemon_v2_pokemonitems,
      l$pokemon_v2_pokemonspeciesflavortexts,
      l$pokemon_v2_versiongroup,
      l$pokemon_v2_versionnames,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encounters = pokemon_v2_encounters;
    final lOther$pokemon_v2_encounters = other.pokemon_v2_encounters;
    if (l$pokemon_v2_encounters != lOther$pokemon_v2_encounters) return false;
    final l$pokemon_v2_locationareaencounterrates =
        pokemon_v2_locationareaencounterrates;
    final lOther$pokemon_v2_locationareaencounterrates =
        other.pokemon_v2_locationareaencounterrates;
    if (l$pokemon_v2_locationareaencounterrates !=
        lOther$pokemon_v2_locationareaencounterrates) return false;
    final l$pokemon_v2_pokemongameindices = pokemon_v2_pokemongameindices;
    final lOther$pokemon_v2_pokemongameindices =
        other.pokemon_v2_pokemongameindices;
    if (l$pokemon_v2_pokemongameindices != lOther$pokemon_v2_pokemongameindices)
      return false;
    final l$pokemon_v2_pokemonitems = pokemon_v2_pokemonitems;
    final lOther$pokemon_v2_pokemonitems = other.pokemon_v2_pokemonitems;
    if (l$pokemon_v2_pokemonitems != lOther$pokemon_v2_pokemonitems)
      return false;
    final l$pokemon_v2_pokemonspeciesflavortexts =
        pokemon_v2_pokemonspeciesflavortexts;
    final lOther$pokemon_v2_pokemonspeciesflavortexts =
        other.pokemon_v2_pokemonspeciesflavortexts;
    if (l$pokemon_v2_pokemonspeciesflavortexts !=
        lOther$pokemon_v2_pokemonspeciesflavortexts) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$pokemon_v2_versionnames = pokemon_v2_versionnames;
    final lOther$pokemon_v2_versionnames = other.pokemon_v2_versionnames;
    if (l$pokemon_v2_versionnames != lOther$pokemon_v2_versionnames)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionMaxOrderBy {
  InputpokemonV2VersionMaxOrderBy({this.id, this.name, this.version_group_id});

  @override
  factory InputpokemonV2VersionMaxOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2VersionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$name, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionMinOrderBy {
  InputpokemonV2VersionMinOrderBy({this.id, this.name, this.version_group_id});

  @override
  factory InputpokemonV2VersionMinOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2VersionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$name, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionOrderBy {
  InputpokemonV2VersionOrderBy(
      {this.id,
      this.name,
      this.pokemon_v2_encounters_aggregate,
      this.pokemon_v2_locationareaencounterrates_aggregate,
      this.pokemon_v2_pokemongameindices_aggregate,
      this.pokemon_v2_pokemonitems_aggregate,
      this.pokemon_v2_pokemonspeciesflavortexts_aggregate,
      this.pokemon_v2_versiongroup,
      this.pokemon_v2_versionnames_aggregate,
      this.version_group_id});

  @override
  factory InputpokemonV2VersionOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2VersionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2EncounterAggregateOrderBy?
      pokemon_v2_encounters_aggregate;

  final InputpokemonV2LocationareaencounterrateAggregateOrderBy?
      pokemon_v2_locationareaencounterrates_aggregate;

  final InputpokemonV2PokemongameindexAggregateOrderBy?
      pokemon_v2_pokemongameindices_aggregate;

  final InputpokemonV2PokemonitemAggregateOrderBy?
      pokemon_v2_pokemonitems_aggregate;

  final InputpokemonV2PokemonspeciesflavortextAggregateOrderBy?
      pokemon_v2_pokemonspeciesflavortexts_aggregate;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  final InputpokemonV2VersionnameAggregateOrderBy?
      pokemon_v2_versionnames_aggregate;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() => _$InputpokemonV2VersionOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$name = name;
    final l$pokemon_v2_encounters_aggregate = pokemon_v2_encounters_aggregate;
    final l$pokemon_v2_locationareaencounterrates_aggregate =
        pokemon_v2_locationareaencounterrates_aggregate;
    final l$pokemon_v2_pokemongameindices_aggregate =
        pokemon_v2_pokemongameindices_aggregate;
    final l$pokemon_v2_pokemonitems_aggregate =
        pokemon_v2_pokemonitems_aggregate;
    final l$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        pokemon_v2_pokemonspeciesflavortexts_aggregate;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$pokemon_v2_versionnames_aggregate =
        pokemon_v2_versionnames_aggregate;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$name,
      l$pokemon_v2_encounters_aggregate,
      l$pokemon_v2_locationareaencounterrates_aggregate,
      l$pokemon_v2_pokemongameindices_aggregate,
      l$pokemon_v2_pokemonitems_aggregate,
      l$pokemon_v2_pokemonspeciesflavortexts_aggregate,
      l$pokemon_v2_versiongroup,
      l$pokemon_v2_versionnames_aggregate,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_encounters_aggregate = pokemon_v2_encounters_aggregate;
    final lOther$pokemon_v2_encounters_aggregate =
        other.pokemon_v2_encounters_aggregate;
    if (l$pokemon_v2_encounters_aggregate !=
        lOther$pokemon_v2_encounters_aggregate) return false;
    final l$pokemon_v2_locationareaencounterrates_aggregate =
        pokemon_v2_locationareaencounterrates_aggregate;
    final lOther$pokemon_v2_locationareaencounterrates_aggregate =
        other.pokemon_v2_locationareaencounterrates_aggregate;
    if (l$pokemon_v2_locationareaencounterrates_aggregate !=
        lOther$pokemon_v2_locationareaencounterrates_aggregate) return false;
    final l$pokemon_v2_pokemongameindices_aggregate =
        pokemon_v2_pokemongameindices_aggregate;
    final lOther$pokemon_v2_pokemongameindices_aggregate =
        other.pokemon_v2_pokemongameindices_aggregate;
    if (l$pokemon_v2_pokemongameindices_aggregate !=
        lOther$pokemon_v2_pokemongameindices_aggregate) return false;
    final l$pokemon_v2_pokemonitems_aggregate =
        pokemon_v2_pokemonitems_aggregate;
    final lOther$pokemon_v2_pokemonitems_aggregate =
        other.pokemon_v2_pokemonitems_aggregate;
    if (l$pokemon_v2_pokemonitems_aggregate !=
        lOther$pokemon_v2_pokemonitems_aggregate) return false;
    final l$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        pokemon_v2_pokemonspeciesflavortexts_aggregate;
    final lOther$pokemon_v2_pokemonspeciesflavortexts_aggregate =
        other.pokemon_v2_pokemonspeciesflavortexts_aggregate;
    if (l$pokemon_v2_pokemonspeciesflavortexts_aggregate !=
        lOther$pokemon_v2_pokemonspeciesflavortexts_aggregate) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$pokemon_v2_versionnames_aggregate =
        pokemon_v2_versionnames_aggregate;
    final lOther$pokemon_v2_versionnames_aggregate =
        other.pokemon_v2_versionnames_aggregate;
    if (l$pokemon_v2_versionnames_aggregate !=
        lOther$pokemon_v2_versionnames_aggregate) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionStddevOrderBy {
  InputpokemonV2VersionStddevOrderBy({this.id, this.version_group_id});

  @override
  factory InputpokemonV2VersionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionStddevPopOrderBy {
  InputpokemonV2VersionStddevPopOrderBy({this.id, this.version_group_id});

  @override
  factory InputpokemonV2VersionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionStddevSampOrderBy {
  InputpokemonV2VersionStddevSampOrderBy({this.id, this.version_group_id});

  @override
  factory InputpokemonV2VersionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionSumOrderBy {
  InputpokemonV2VersionSumOrderBy({this.id, this.version_group_id});

  @override
  factory InputpokemonV2VersionSumOrderBy.fromJson(Map<String, dynamic> json) =>
      _$InputpokemonV2VersionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionVarPopOrderBy {
  InputpokemonV2VersionVarPopOrderBy({this.id, this.version_group_id});

  @override
  factory InputpokemonV2VersionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionVarSampOrderBy {
  InputpokemonV2VersionVarSampOrderBy({this.id, this.version_group_id});

  @override
  factory InputpokemonV2VersionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionVarianceOrderBy {
  InputpokemonV2VersionVarianceOrderBy({this.id, this.version_group_id});

  @override
  factory InputpokemonV2VersionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupAggregateOrderBy {
  InputpokemonV2VersiongroupAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2VersiongroupAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupAggregateOrderByFromJson(json);

  final InputpokemonV2VersiongroupAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2VersiongroupMaxOrderBy? max;

  final InputpokemonV2VersiongroupMinOrderBy? min;

  final InputpokemonV2VersiongroupStddevOrderBy? stddev;

  final InputpokemonV2VersiongroupStddevPopOrderBy? stddev_pop;

  final InputpokemonV2VersiongroupStddevSampOrderBy? stddev_samp;

  final InputpokemonV2VersiongroupSumOrderBy? sum;

  final InputpokemonV2VersiongroupVarPopOrderBy? var_pop;

  final InputpokemonV2VersiongroupVarSampOrderBy? var_samp;

  final InputpokemonV2VersiongroupVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupAvgOrderBy {
  InputpokemonV2VersiongroupAvgOrderBy(
      {this.generation_id, this.id, this.order});

  @override
  factory InputpokemonV2VersiongroupAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupAvgOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupBoolExp {
  InputpokemonV2VersiongroupBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.generation_id,
      this.id,
      this.name,
      this.order,
      this.pokemon_v2_abilitychanges,
      this.pokemon_v2_abilityflavortexts,
      this.pokemon_v2_encounterslots,
      this.pokemon_v2_generation,
      this.pokemon_v2_itemflavortexts,
      this.pokemon_v2_machines,
      this.pokemon_v2_movechanges,
      this.pokemon_v2_moveeffectchanges,
      this.pokemon_v2_moveflavortexts,
      this.pokemon_v2_pokedexversiongroups,
      this.pokemon_v2_pokemonforms,
      this.pokemon_v2_pokemonmoves,
      this.pokemon_v2_versiongroupmovelearnmethods,
      this.pokemon_v2_versiongroupregions,
      this.pokemon_v2_versions});

  @override
  factory InputpokemonV2VersiongroupBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2VersiongroupBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2VersiongroupBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2VersiongroupBoolExp>? $_or;

  final InputIntComparisonExp? generation_id;

  final InputIntComparisonExp? id;

  final InputStringComparisonExp? name;

  final InputIntComparisonExp? order;

  final InputpokemonV2AbilitychangeBoolExp? pokemon_v2_abilitychanges;

  final InputpokemonV2AbilityflavortextBoolExp? pokemon_v2_abilityflavortexts;

  final InputpokemonV2EncounterslotBoolExp? pokemon_v2_encounterslots;

  final InputpokemonV2GenerationBoolExp? pokemon_v2_generation;

  final InputpokemonV2ItemflavortextBoolExp? pokemon_v2_itemflavortexts;

  final InputpokemonV2MachineBoolExp? pokemon_v2_machines;

  final InputpokemonV2MovechangeBoolExp? pokemon_v2_movechanges;

  final InputpokemonV2MoveeffectchangeBoolExp? pokemon_v2_moveeffectchanges;

  final InputpokemonV2MoveflavortextBoolExp? pokemon_v2_moveflavortexts;

  final InputpokemonV2PokedexversiongroupBoolExp?
      pokemon_v2_pokedexversiongroups;

  final InputpokemonV2PokemonformBoolExp? pokemon_v2_pokemonforms;

  final InputpokemonV2PokemonmoveBoolExp? pokemon_v2_pokemonmoves;

  final InputpokemonV2VersiongroupmovelearnmethodBoolExp?
      pokemon_v2_versiongroupmovelearnmethods;

  final InputpokemonV2VersiongroupregionBoolExp? pokemon_v2_versiongroupregions;

  final InputpokemonV2VersionBoolExp? pokemon_v2_versions;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$generation_id = generation_id;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_v2_abilitychanges = pokemon_v2_abilitychanges;
    final l$pokemon_v2_abilityflavortexts = pokemon_v2_abilityflavortexts;
    final l$pokemon_v2_encounterslots = pokemon_v2_encounterslots;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_itemflavortexts = pokemon_v2_itemflavortexts;
    final l$pokemon_v2_machines = pokemon_v2_machines;
    final l$pokemon_v2_movechanges = pokemon_v2_movechanges;
    final l$pokemon_v2_moveeffectchanges = pokemon_v2_moveeffectchanges;
    final l$pokemon_v2_moveflavortexts = pokemon_v2_moveflavortexts;
    final l$pokemon_v2_pokedexversiongroups = pokemon_v2_pokedexversiongroups;
    final l$pokemon_v2_pokemonforms = pokemon_v2_pokemonforms;
    final l$pokemon_v2_pokemonmoves = pokemon_v2_pokemonmoves;
    final l$pokemon_v2_versiongroupmovelearnmethods =
        pokemon_v2_versiongroupmovelearnmethods;
    final l$pokemon_v2_versiongroupregions = pokemon_v2_versiongroupregions;
    final l$pokemon_v2_versions = pokemon_v2_versions;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$generation_id,
      l$id,
      l$name,
      l$order,
      l$pokemon_v2_abilitychanges,
      l$pokemon_v2_abilityflavortexts,
      l$pokemon_v2_encounterslots,
      l$pokemon_v2_generation,
      l$pokemon_v2_itemflavortexts,
      l$pokemon_v2_machines,
      l$pokemon_v2_movechanges,
      l$pokemon_v2_moveeffectchanges,
      l$pokemon_v2_moveflavortexts,
      l$pokemon_v2_pokedexversiongroups,
      l$pokemon_v2_pokemonforms,
      l$pokemon_v2_pokemonmoves,
      l$pokemon_v2_versiongroupmovelearnmethods,
      l$pokemon_v2_versiongroupregions,
      l$pokemon_v2_versions
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_v2_abilitychanges = pokemon_v2_abilitychanges;
    final lOther$pokemon_v2_abilitychanges = other.pokemon_v2_abilitychanges;
    if (l$pokemon_v2_abilitychanges != lOther$pokemon_v2_abilitychanges)
      return false;
    final l$pokemon_v2_abilityflavortexts = pokemon_v2_abilityflavortexts;
    final lOther$pokemon_v2_abilityflavortexts =
        other.pokemon_v2_abilityflavortexts;
    if (l$pokemon_v2_abilityflavortexts != lOther$pokemon_v2_abilityflavortexts)
      return false;
    final l$pokemon_v2_encounterslots = pokemon_v2_encounterslots;
    final lOther$pokemon_v2_encounterslots = other.pokemon_v2_encounterslots;
    if (l$pokemon_v2_encounterslots != lOther$pokemon_v2_encounterslots)
      return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_itemflavortexts = pokemon_v2_itemflavortexts;
    final lOther$pokemon_v2_itemflavortexts = other.pokemon_v2_itemflavortexts;
    if (l$pokemon_v2_itemflavortexts != lOther$pokemon_v2_itemflavortexts)
      return false;
    final l$pokemon_v2_machines = pokemon_v2_machines;
    final lOther$pokemon_v2_machines = other.pokemon_v2_machines;
    if (l$pokemon_v2_machines != lOther$pokemon_v2_machines) return false;
    final l$pokemon_v2_movechanges = pokemon_v2_movechanges;
    final lOther$pokemon_v2_movechanges = other.pokemon_v2_movechanges;
    if (l$pokemon_v2_movechanges != lOther$pokemon_v2_movechanges) return false;
    final l$pokemon_v2_moveeffectchanges = pokemon_v2_moveeffectchanges;
    final lOther$pokemon_v2_moveeffectchanges =
        other.pokemon_v2_moveeffectchanges;
    if (l$pokemon_v2_moveeffectchanges != lOther$pokemon_v2_moveeffectchanges)
      return false;
    final l$pokemon_v2_moveflavortexts = pokemon_v2_moveflavortexts;
    final lOther$pokemon_v2_moveflavortexts = other.pokemon_v2_moveflavortexts;
    if (l$pokemon_v2_moveflavortexts != lOther$pokemon_v2_moveflavortexts)
      return false;
    final l$pokemon_v2_pokedexversiongroups = pokemon_v2_pokedexversiongroups;
    final lOther$pokemon_v2_pokedexversiongroups =
        other.pokemon_v2_pokedexversiongroups;
    if (l$pokemon_v2_pokedexversiongroups !=
        lOther$pokemon_v2_pokedexversiongroups) return false;
    final l$pokemon_v2_pokemonforms = pokemon_v2_pokemonforms;
    final lOther$pokemon_v2_pokemonforms = other.pokemon_v2_pokemonforms;
    if (l$pokemon_v2_pokemonforms != lOther$pokemon_v2_pokemonforms)
      return false;
    final l$pokemon_v2_pokemonmoves = pokemon_v2_pokemonmoves;
    final lOther$pokemon_v2_pokemonmoves = other.pokemon_v2_pokemonmoves;
    if (l$pokemon_v2_pokemonmoves != lOther$pokemon_v2_pokemonmoves)
      return false;
    final l$pokemon_v2_versiongroupmovelearnmethods =
        pokemon_v2_versiongroupmovelearnmethods;
    final lOther$pokemon_v2_versiongroupmovelearnmethods =
        other.pokemon_v2_versiongroupmovelearnmethods;
    if (l$pokemon_v2_versiongroupmovelearnmethods !=
        lOther$pokemon_v2_versiongroupmovelearnmethods) return false;
    final l$pokemon_v2_versiongroupregions = pokemon_v2_versiongroupregions;
    final lOther$pokemon_v2_versiongroupregions =
        other.pokemon_v2_versiongroupregions;
    if (l$pokemon_v2_versiongroupregions !=
        lOther$pokemon_v2_versiongroupregions) return false;
    final l$pokemon_v2_versions = pokemon_v2_versions;
    final lOther$pokemon_v2_versions = other.pokemon_v2_versions;
    if (l$pokemon_v2_versions != lOther$pokemon_v2_versions) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupMaxOrderBy {
  InputpokemonV2VersiongroupMaxOrderBy(
      {this.generation_id, this.id, this.name, this.order});

  @override
  factory InputpokemonV2VersiongroupMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupMaxOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$name, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupMinOrderBy {
  InputpokemonV2VersiongroupMinOrderBy(
      {this.generation_id, this.id, this.name, this.order});

  @override
  factory InputpokemonV2VersiongroupMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupMinOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$name, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupOrderBy {
  InputpokemonV2VersiongroupOrderBy(
      {this.generation_id,
      this.id,
      this.name,
      this.order,
      this.pokemon_v2_abilitychanges_aggregate,
      this.pokemon_v2_abilityflavortexts_aggregate,
      this.pokemon_v2_encounterslots_aggregate,
      this.pokemon_v2_generation,
      this.pokemon_v2_itemflavortexts_aggregate,
      this.pokemon_v2_machines_aggregate,
      this.pokemon_v2_movechanges_aggregate,
      this.pokemon_v2_moveeffectchanges_aggregate,
      this.pokemon_v2_moveflavortexts_aggregate,
      this.pokemon_v2_pokedexversiongroups_aggregate,
      this.pokemon_v2_pokemonforms_aggregate,
      this.pokemon_v2_pokemonmoves_aggregate,
      this.pokemon_v2_versiongroupmovelearnmethods_aggregate,
      this.pokemon_v2_versiongroupregions_aggregate,
      this.pokemon_v2_versions_aggregate});

  @override
  factory InputpokemonV2VersiongroupOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  final InputpokemonV2AbilitychangeAggregateOrderBy?
      pokemon_v2_abilitychanges_aggregate;

  final InputpokemonV2AbilityflavortextAggregateOrderBy?
      pokemon_v2_abilityflavortexts_aggregate;

  final InputpokemonV2EncounterslotAggregateOrderBy?
      pokemon_v2_encounterslots_aggregate;

  final InputpokemonV2GenerationOrderBy? pokemon_v2_generation;

  final InputpokemonV2ItemflavortextAggregateOrderBy?
      pokemon_v2_itemflavortexts_aggregate;

  final InputpokemonV2MachineAggregateOrderBy? pokemon_v2_machines_aggregate;

  final InputpokemonV2MovechangeAggregateOrderBy?
      pokemon_v2_movechanges_aggregate;

  final InputpokemonV2MoveeffectchangeAggregateOrderBy?
      pokemon_v2_moveeffectchanges_aggregate;

  final InputpokemonV2MoveflavortextAggregateOrderBy?
      pokemon_v2_moveflavortexts_aggregate;

  final InputpokemonV2PokedexversiongroupAggregateOrderBy?
      pokemon_v2_pokedexversiongroups_aggregate;

  final InputpokemonV2PokemonformAggregateOrderBy?
      pokemon_v2_pokemonforms_aggregate;

  final InputpokemonV2PokemonmoveAggregateOrderBy?
      pokemon_v2_pokemonmoves_aggregate;

  final InputpokemonV2VersiongroupmovelearnmethodAggregateOrderBy?
      pokemon_v2_versiongroupmovelearnmethods_aggregate;

  final InputpokemonV2VersiongroupregionAggregateOrderBy?
      pokemon_v2_versiongroupregions_aggregate;

  final InputpokemonV2VersionAggregateOrderBy? pokemon_v2_versions_aggregate;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$name = name;
    final l$order = order;
    final l$pokemon_v2_abilitychanges_aggregate =
        pokemon_v2_abilitychanges_aggregate;
    final l$pokemon_v2_abilityflavortexts_aggregate =
        pokemon_v2_abilityflavortexts_aggregate;
    final l$pokemon_v2_encounterslots_aggregate =
        pokemon_v2_encounterslots_aggregate;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final l$pokemon_v2_itemflavortexts_aggregate =
        pokemon_v2_itemflavortexts_aggregate;
    final l$pokemon_v2_machines_aggregate = pokemon_v2_machines_aggregate;
    final l$pokemon_v2_movechanges_aggregate = pokemon_v2_movechanges_aggregate;
    final l$pokemon_v2_moveeffectchanges_aggregate =
        pokemon_v2_moveeffectchanges_aggregate;
    final l$pokemon_v2_moveflavortexts_aggregate =
        pokemon_v2_moveflavortexts_aggregate;
    final l$pokemon_v2_pokedexversiongroups_aggregate =
        pokemon_v2_pokedexversiongroups_aggregate;
    final l$pokemon_v2_pokemonforms_aggregate =
        pokemon_v2_pokemonforms_aggregate;
    final l$pokemon_v2_pokemonmoves_aggregate =
        pokemon_v2_pokemonmoves_aggregate;
    final l$pokemon_v2_versiongroupmovelearnmethods_aggregate =
        pokemon_v2_versiongroupmovelearnmethods_aggregate;
    final l$pokemon_v2_versiongroupregions_aggregate =
        pokemon_v2_versiongroupregions_aggregate;
    final l$pokemon_v2_versions_aggregate = pokemon_v2_versions_aggregate;
    return Object.hashAll([
      l$generation_id,
      l$id,
      l$name,
      l$order,
      l$pokemon_v2_abilitychanges_aggregate,
      l$pokemon_v2_abilityflavortexts_aggregate,
      l$pokemon_v2_encounterslots_aggregate,
      l$pokemon_v2_generation,
      l$pokemon_v2_itemflavortexts_aggregate,
      l$pokemon_v2_machines_aggregate,
      l$pokemon_v2_movechanges_aggregate,
      l$pokemon_v2_moveeffectchanges_aggregate,
      l$pokemon_v2_moveflavortexts_aggregate,
      l$pokemon_v2_pokedexversiongroups_aggregate,
      l$pokemon_v2_pokemonforms_aggregate,
      l$pokemon_v2_pokemonmoves_aggregate,
      l$pokemon_v2_versiongroupmovelearnmethods_aggregate,
      l$pokemon_v2_versiongroupregions_aggregate,
      l$pokemon_v2_versions_aggregate
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    final l$pokemon_v2_abilitychanges_aggregate =
        pokemon_v2_abilitychanges_aggregate;
    final lOther$pokemon_v2_abilitychanges_aggregate =
        other.pokemon_v2_abilitychanges_aggregate;
    if (l$pokemon_v2_abilitychanges_aggregate !=
        lOther$pokemon_v2_abilitychanges_aggregate) return false;
    final l$pokemon_v2_abilityflavortexts_aggregate =
        pokemon_v2_abilityflavortexts_aggregate;
    final lOther$pokemon_v2_abilityflavortexts_aggregate =
        other.pokemon_v2_abilityflavortexts_aggregate;
    if (l$pokemon_v2_abilityflavortexts_aggregate !=
        lOther$pokemon_v2_abilityflavortexts_aggregate) return false;
    final l$pokemon_v2_encounterslots_aggregate =
        pokemon_v2_encounterslots_aggregate;
    final lOther$pokemon_v2_encounterslots_aggregate =
        other.pokemon_v2_encounterslots_aggregate;
    if (l$pokemon_v2_encounterslots_aggregate !=
        lOther$pokemon_v2_encounterslots_aggregate) return false;
    final l$pokemon_v2_generation = pokemon_v2_generation;
    final lOther$pokemon_v2_generation = other.pokemon_v2_generation;
    if (l$pokemon_v2_generation != lOther$pokemon_v2_generation) return false;
    final l$pokemon_v2_itemflavortexts_aggregate =
        pokemon_v2_itemflavortexts_aggregate;
    final lOther$pokemon_v2_itemflavortexts_aggregate =
        other.pokemon_v2_itemflavortexts_aggregate;
    if (l$pokemon_v2_itemflavortexts_aggregate !=
        lOther$pokemon_v2_itemflavortexts_aggregate) return false;
    final l$pokemon_v2_machines_aggregate = pokemon_v2_machines_aggregate;
    final lOther$pokemon_v2_machines_aggregate =
        other.pokemon_v2_machines_aggregate;
    if (l$pokemon_v2_machines_aggregate != lOther$pokemon_v2_machines_aggregate)
      return false;
    final l$pokemon_v2_movechanges_aggregate = pokemon_v2_movechanges_aggregate;
    final lOther$pokemon_v2_movechanges_aggregate =
        other.pokemon_v2_movechanges_aggregate;
    if (l$pokemon_v2_movechanges_aggregate !=
        lOther$pokemon_v2_movechanges_aggregate) return false;
    final l$pokemon_v2_moveeffectchanges_aggregate =
        pokemon_v2_moveeffectchanges_aggregate;
    final lOther$pokemon_v2_moveeffectchanges_aggregate =
        other.pokemon_v2_moveeffectchanges_aggregate;
    if (l$pokemon_v2_moveeffectchanges_aggregate !=
        lOther$pokemon_v2_moveeffectchanges_aggregate) return false;
    final l$pokemon_v2_moveflavortexts_aggregate =
        pokemon_v2_moveflavortexts_aggregate;
    final lOther$pokemon_v2_moveflavortexts_aggregate =
        other.pokemon_v2_moveflavortexts_aggregate;
    if (l$pokemon_v2_moveflavortexts_aggregate !=
        lOther$pokemon_v2_moveflavortexts_aggregate) return false;
    final l$pokemon_v2_pokedexversiongroups_aggregate =
        pokemon_v2_pokedexversiongroups_aggregate;
    final lOther$pokemon_v2_pokedexversiongroups_aggregate =
        other.pokemon_v2_pokedexversiongroups_aggregate;
    if (l$pokemon_v2_pokedexversiongroups_aggregate !=
        lOther$pokemon_v2_pokedexversiongroups_aggregate) return false;
    final l$pokemon_v2_pokemonforms_aggregate =
        pokemon_v2_pokemonforms_aggregate;
    final lOther$pokemon_v2_pokemonforms_aggregate =
        other.pokemon_v2_pokemonforms_aggregate;
    if (l$pokemon_v2_pokemonforms_aggregate !=
        lOther$pokemon_v2_pokemonforms_aggregate) return false;
    final l$pokemon_v2_pokemonmoves_aggregate =
        pokemon_v2_pokemonmoves_aggregate;
    final lOther$pokemon_v2_pokemonmoves_aggregate =
        other.pokemon_v2_pokemonmoves_aggregate;
    if (l$pokemon_v2_pokemonmoves_aggregate !=
        lOther$pokemon_v2_pokemonmoves_aggregate) return false;
    final l$pokemon_v2_versiongroupmovelearnmethods_aggregate =
        pokemon_v2_versiongroupmovelearnmethods_aggregate;
    final lOther$pokemon_v2_versiongroupmovelearnmethods_aggregate =
        other.pokemon_v2_versiongroupmovelearnmethods_aggregate;
    if (l$pokemon_v2_versiongroupmovelearnmethods_aggregate !=
        lOther$pokemon_v2_versiongroupmovelearnmethods_aggregate) return false;
    final l$pokemon_v2_versiongroupregions_aggregate =
        pokemon_v2_versiongroupregions_aggregate;
    final lOther$pokemon_v2_versiongroupregions_aggregate =
        other.pokemon_v2_versiongroupregions_aggregate;
    if (l$pokemon_v2_versiongroupregions_aggregate !=
        lOther$pokemon_v2_versiongroupregions_aggregate) return false;
    final l$pokemon_v2_versions_aggregate = pokemon_v2_versions_aggregate;
    final lOther$pokemon_v2_versions_aggregate =
        other.pokemon_v2_versions_aggregate;
    if (l$pokemon_v2_versions_aggregate != lOther$pokemon_v2_versions_aggregate)
      return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupStddevOrderBy {
  InputpokemonV2VersiongroupStddevOrderBy(
      {this.generation_id, this.id, this.order});

  @override
  factory InputpokemonV2VersiongroupStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupStddevOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupStddevPopOrderBy {
  InputpokemonV2VersiongroupStddevPopOrderBy(
      {this.generation_id, this.id, this.order});

  @override
  factory InputpokemonV2VersiongroupStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupStddevPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupStddevSampOrderBy {
  InputpokemonV2VersiongroupStddevSampOrderBy(
      {this.generation_id, this.id, this.order});

  @override
  factory InputpokemonV2VersiongroupStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupStddevSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupSumOrderBy {
  InputpokemonV2VersiongroupSumOrderBy(
      {this.generation_id, this.id, this.order});

  @override
  factory InputpokemonV2VersiongroupSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupSumOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupVarPopOrderBy {
  InputpokemonV2VersiongroupVarPopOrderBy(
      {this.generation_id, this.id, this.order});

  @override
  factory InputpokemonV2VersiongroupVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupVarPopOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupVarSampOrderBy {
  InputpokemonV2VersiongroupVarSampOrderBy(
      {this.generation_id, this.id, this.order});

  @override
  factory InputpokemonV2VersiongroupVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupVarSampOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupVarianceOrderBy {
  InputpokemonV2VersiongroupVarianceOrderBy(
      {this.generation_id, this.id, this.order});

  @override
  factory InputpokemonV2VersiongroupVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? generation_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? order;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupVarianceOrderByToJson(this);
  int get hashCode {
    final l$generation_id = generation_id;
    final l$id = id;
    final l$order = order;
    return Object.hashAll([l$generation_id, l$id, l$order]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$generation_id = generation_id;
    final lOther$generation_id = other.generation_id;
    if (l$generation_id != lOther$generation_id) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$order = order;
    final lOther$order = other.order;
    if (l$order != lOther$order) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodAggregateOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodAggregateOrderByFromJson(json);

  final InputpokemonV2VersiongroupmovelearnmethodAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2VersiongroupmovelearnmethodMaxOrderBy? max;

  final InputpokemonV2VersiongroupmovelearnmethodMinOrderBy? min;

  final InputpokemonV2VersiongroupmovelearnmethodStddevOrderBy? stddev;

  final InputpokemonV2VersiongroupmovelearnmethodStddevPopOrderBy? stddev_pop;

  final InputpokemonV2VersiongroupmovelearnmethodStddevSampOrderBy? stddev_samp;

  final InputpokemonV2VersiongroupmovelearnmethodSumOrderBy? sum;

  final InputpokemonV2VersiongroupmovelearnmethodVarPopOrderBy? var_pop;

  final InputpokemonV2VersiongroupmovelearnmethodVarSampOrderBy? var_samp;

  final InputpokemonV2VersiongroupmovelearnmethodVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodAvgOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodAvgOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodBoolExp {
  InputpokemonV2VersiongroupmovelearnmethodBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.move_learn_method_id,
      this.pokemon_v2_movelearnmethod,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2VersiongroupmovelearnmethodBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2VersiongroupmovelearnmethodBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2VersiongroupmovelearnmethodBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? move_learn_method_id;

  final InputpokemonV2MovelearnmethodBoolExp? pokemon_v2_movelearnmethod;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$move_learn_method_id,
      l$pokemon_v2_movelearnmethod,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final lOther$pokemon_v2_movelearnmethod = other.pokemon_v2_movelearnmethod;
    if (l$pokemon_v2_movelearnmethod != lOther$pokemon_v2_movelearnmethod)
      return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodMaxOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodMaxOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodMinOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodMinOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodOrderBy(
      {this.id,
      this.move_learn_method_id,
      this.pokemon_v2_movelearnmethod,
      this.pokemon_v2_versiongroup,
      this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  final InputpokemonV2MovelearnmethodOrderBy? pokemon_v2_movelearnmethod;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$move_learn_method_id,
      l$pokemon_v2_movelearnmethod,
      l$pokemon_v2_versiongroup,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$pokemon_v2_movelearnmethod = pokemon_v2_movelearnmethod;
    final lOther$pokemon_v2_movelearnmethod = other.pokemon_v2_movelearnmethod;
    if (l$pokemon_v2_movelearnmethod != lOther$pokemon_v2_movelearnmethod)
      return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodStddevOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodStddevOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodStddevPopOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodStddevPopOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodStddevSampOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodStddevSampOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodStddevSampOrderByFromJson(
          json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other
            is InputpokemonV2VersiongroupmovelearnmethodStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodSumOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodSumOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodVarPopOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodVarPopOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodVarSampOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodVarSampOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupmovelearnmethodVarianceOrderBy {
  InputpokemonV2VersiongroupmovelearnmethodVarianceOrderBy(
      {this.id, this.move_learn_method_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupmovelearnmethodVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupmovelearnmethodVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? move_learn_method_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupmovelearnmethodVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$move_learn_method_id = move_learn_method_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$move_learn_method_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupmovelearnmethodVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$move_learn_method_id = move_learn_method_id;
    final lOther$move_learn_method_id = other.move_learn_method_id;
    if (l$move_learn_method_id != lOther$move_learn_method_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionAggregateOrderBy {
  InputpokemonV2VersiongroupregionAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2VersiongroupregionAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionAggregateOrderByFromJson(json);

  final InputpokemonV2VersiongroupregionAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2VersiongroupregionMaxOrderBy? max;

  final InputpokemonV2VersiongroupregionMinOrderBy? min;

  final InputpokemonV2VersiongroupregionStddevOrderBy? stddev;

  final InputpokemonV2VersiongroupregionStddevPopOrderBy? stddev_pop;

  final InputpokemonV2VersiongroupregionStddevSampOrderBy? stddev_samp;

  final InputpokemonV2VersiongroupregionSumOrderBy? sum;

  final InputpokemonV2VersiongroupregionVarPopOrderBy? var_pop;

  final InputpokemonV2VersiongroupregionVarSampOrderBy? var_samp;

  final InputpokemonV2VersiongroupregionVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionAvgOrderBy {
  InputpokemonV2VersiongroupregionAvgOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionBoolExp {
  InputpokemonV2VersiongroupregionBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.pokemon_v2_region,
      this.pokemon_v2_versiongroup,
      this.region_id,
      this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2VersiongroupregionBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2VersiongroupregionBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2VersiongroupregionBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputpokemonV2RegionBoolExp? pokemon_v2_region;

  final InputpokemonV2VersiongroupBoolExp? pokemon_v2_versiongroup;

  final InputIntComparisonExp? region_id;

  final InputIntComparisonExp? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$pokemon_v2_region,
      l$pokemon_v2_versiongroup,
      l$region_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionMaxOrderBy {
  InputpokemonV2VersiongroupregionMaxOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionMinOrderBy {
  InputpokemonV2VersiongroupregionMinOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionOrderBy {
  InputpokemonV2VersiongroupregionOrderBy(
      {this.id,
      this.pokemon_v2_region,
      this.pokemon_v2_versiongroup,
      this.region_id,
      this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  final InputpokemonV2RegionOrderBy? pokemon_v2_region;

  final InputpokemonV2VersiongroupOrderBy? pokemon_v2_versiongroup;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$pokemon_v2_region = pokemon_v2_region;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([
      l$id,
      l$pokemon_v2_region,
      l$pokemon_v2_versiongroup,
      l$region_id,
      l$version_group_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$pokemon_v2_region = pokemon_v2_region;
    final lOther$pokemon_v2_region = other.pokemon_v2_region;
    if (l$pokemon_v2_region != lOther$pokemon_v2_region) return false;
    final l$pokemon_v2_versiongroup = pokemon_v2_versiongroup;
    final lOther$pokemon_v2_versiongroup = other.pokemon_v2_versiongroup;
    if (l$pokemon_v2_versiongroup != lOther$pokemon_v2_versiongroup)
      return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionStddevOrderBy {
  InputpokemonV2VersiongroupregionStddevOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionStddevPopOrderBy {
  InputpokemonV2VersiongroupregionStddevPopOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionStddevSampOrderBy {
  InputpokemonV2VersiongroupregionStddevSampOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionSumOrderBy {
  InputpokemonV2VersiongroupregionSumOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionVarPopOrderBy {
  InputpokemonV2VersiongroupregionVarPopOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionVarSampOrderBy {
  InputpokemonV2VersiongroupregionVarSampOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersiongroupregionVarianceOrderBy {
  InputpokemonV2VersiongroupregionVarianceOrderBy(
      {this.id, this.region_id, this.version_group_id});

  @override
  factory InputpokemonV2VersiongroupregionVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersiongroupregionVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? region_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_group_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersiongroupregionVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$region_id = region_id;
    final l$version_group_id = version_group_id;
    return Object.hashAll([l$id, l$region_id, l$version_group_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersiongroupregionVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$region_id = region_id;
    final lOther$region_id = other.region_id;
    if (l$region_id != lOther$region_id) return false;
    final l$version_group_id = version_group_id;
    final lOther$version_group_id = other.version_group_id;
    if (l$version_group_id != lOther$version_group_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameAggregateOrderBy {
  InputpokemonV2VersionnameAggregateOrderBy(
      {this.avg,
      this.count,
      this.max,
      this.min,
      this.stddev,
      this.stddev_pop,
      this.stddev_samp,
      this.sum,
      this.var_pop,
      this.var_samp,
      this.variance});

  @override
  factory InputpokemonV2VersionnameAggregateOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameAggregateOrderByFromJson(json);

  final InputpokemonV2VersionnameAvgOrderBy? avg;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? count;

  final InputpokemonV2VersionnameMaxOrderBy? max;

  final InputpokemonV2VersionnameMinOrderBy? min;

  final InputpokemonV2VersionnameStddevOrderBy? stddev;

  final InputpokemonV2VersionnameStddevPopOrderBy? stddev_pop;

  final InputpokemonV2VersionnameStddevSampOrderBy? stddev_samp;

  final InputpokemonV2VersionnameSumOrderBy? sum;

  final InputpokemonV2VersionnameVarPopOrderBy? var_pop;

  final InputpokemonV2VersionnameVarSampOrderBy? var_samp;

  final InputpokemonV2VersionnameVarianceOrderBy? variance;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameAggregateOrderByToJson(this);
  int get hashCode {
    final l$avg = avg;
    final l$count = count;
    final l$max = max;
    final l$min = min;
    final l$stddev = stddev;
    final l$stddev_pop = stddev_pop;
    final l$stddev_samp = stddev_samp;
    final l$sum = sum;
    final l$var_pop = var_pop;
    final l$var_samp = var_samp;
    final l$variance = variance;
    return Object.hashAll([
      l$avg,
      l$count,
      l$max,
      l$min,
      l$stddev,
      l$stddev_pop,
      l$stddev_samp,
      l$sum,
      l$var_pop,
      l$var_samp,
      l$variance
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameAggregateOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$avg = avg;
    final lOther$avg = other.avg;
    if (l$avg != lOther$avg) return false;
    final l$count = count;
    final lOther$count = other.count;
    if (l$count != lOther$count) return false;
    final l$max = max;
    final lOther$max = other.max;
    if (l$max != lOther$max) return false;
    final l$min = min;
    final lOther$min = other.min;
    if (l$min != lOther$min) return false;
    final l$stddev = stddev;
    final lOther$stddev = other.stddev;
    if (l$stddev != lOther$stddev) return false;
    final l$stddev_pop = stddev_pop;
    final lOther$stddev_pop = other.stddev_pop;
    if (l$stddev_pop != lOther$stddev_pop) return false;
    final l$stddev_samp = stddev_samp;
    final lOther$stddev_samp = other.stddev_samp;
    if (l$stddev_samp != lOther$stddev_samp) return false;
    final l$sum = sum;
    final lOther$sum = other.sum;
    if (l$sum != lOther$sum) return false;
    final l$var_pop = var_pop;
    final lOther$var_pop = other.var_pop;
    if (l$var_pop != lOther$var_pop) return false;
    final l$var_samp = var_samp;
    final lOther$var_samp = other.var_samp;
    if (l$var_samp != lOther$var_samp) return false;
    final l$variance = variance;
    final lOther$variance = other.variance;
    if (l$variance != lOther$variance) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameAvgOrderBy {
  InputpokemonV2VersionnameAvgOrderBy(
      {this.id, this.language_id, this.version_id});

  @override
  factory InputpokemonV2VersionnameAvgOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameAvgOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameAvgOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameAvgOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameBoolExp {
  InputpokemonV2VersionnameBoolExp(
      {this.$_and,
      this.$_not,
      this.$_or,
      this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_version,
      this.version_id});

  @override
  factory InputpokemonV2VersionnameBoolExp.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameBoolExpFromJson(json);

  @JsonKey(name: '_and')
  final List<InputpokemonV2VersionnameBoolExp>? $_and;

  @JsonKey(name: '_not')
  final InputpokemonV2VersionnameBoolExp? $_not;

  @JsonKey(name: '_or')
  final List<InputpokemonV2VersionnameBoolExp>? $_or;

  final InputIntComparisonExp? id;

  final InputIntComparisonExp? language_id;

  final InputStringComparisonExp? name;

  final InputpokemonV2LanguageBoolExp? pokemon_v2_language;

  final InputpokemonV2VersionBoolExp? pokemon_v2_version;

  final InputIntComparisonExp? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameBoolExpToJson(this);
  int get hashCode {
    final l$$_and = $_and;
    final l$$_not = $_not;
    final l$$_or = $_or;
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$version_id = version_id;
    return Object.hashAll([
      l$$_and == null ? null : Object.hashAll(l$$_and.map((v) => v)),
      l$$_not,
      l$$_or == null ? null : Object.hashAll(l$$_or.map((v) => v)),
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_version,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameBoolExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_and = $_and;
    final lOther$$_and = other.$_and;
    if (l$$_and != null && lOther$$_and != null) {
      if (l$$_and.length != lOther$$_and.length) return false;
      for (int i = 0; i < l$$_and.length; i++) {
        final l$$_and$entry = l$$_and[i];
        final lOther$$_and$entry = lOther$$_and[i];
        if (l$$_and$entry != lOther$$_and$entry) return false;
      }
    } else if (l$$_and != lOther$$_and) {
      return false;
    }

    final l$$_not = $_not;
    final lOther$$_not = other.$_not;
    if (l$$_not != lOther$$_not) return false;
    final l$$_or = $_or;
    final lOther$$_or = other.$_or;
    if (l$$_or != null && lOther$$_or != null) {
      if (l$$_or.length != lOther$$_or.length) return false;
      for (int i = 0; i < l$$_or.length; i++) {
        final l$$_or$entry = l$$_or[i];
        final lOther$$_or$entry = lOther$$_or[i];
        if (l$$_or$entry != lOther$$_or$entry) return false;
      }
    } else if (l$$_or != lOther$$_or) {
      return false;
    }

    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameMaxOrderBy {
  InputpokemonV2VersionnameMaxOrderBy(
      {this.id, this.language_id, this.name, this.version_id});

  @override
  factory InputpokemonV2VersionnameMaxOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameMaxOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameMaxOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameMaxOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameMinOrderBy {
  InputpokemonV2VersionnameMinOrderBy(
      {this.id, this.language_id, this.name, this.version_id});

  @override
  factory InputpokemonV2VersionnameMinOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameMinOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameMinOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$name, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameMinOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameOrderBy {
  InputpokemonV2VersionnameOrderBy(
      {this.id,
      this.language_id,
      this.name,
      this.pokemon_v2_language,
      this.pokemon_v2_version,
      this.version_id});

  @override
  factory InputpokemonV2VersionnameOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? name;

  final InputpokemonV2LanguageOrderBy? pokemon_v2_language;

  final InputpokemonV2VersionOrderBy? pokemon_v2_version;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$name = name;
    final l$pokemon_v2_language = pokemon_v2_language;
    final l$pokemon_v2_version = pokemon_v2_version;
    final l$version_id = version_id;
    return Object.hashAll([
      l$id,
      l$language_id,
      l$name,
      l$pokemon_v2_language,
      l$pokemon_v2_version,
      l$version_id
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$name = name;
    final lOther$name = other.name;
    if (l$name != lOther$name) return false;
    final l$pokemon_v2_language = pokemon_v2_language;
    final lOther$pokemon_v2_language = other.pokemon_v2_language;
    if (l$pokemon_v2_language != lOther$pokemon_v2_language) return false;
    final l$pokemon_v2_version = pokemon_v2_version;
    final lOther$pokemon_v2_version = other.pokemon_v2_version;
    if (l$pokemon_v2_version != lOther$pokemon_v2_version) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameStddevOrderBy {
  InputpokemonV2VersionnameStddevOrderBy(
      {this.id, this.language_id, this.version_id});

  @override
  factory InputpokemonV2VersionnameStddevOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameStddevOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameStddevOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameStddevOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameStddevPopOrderBy {
  InputpokemonV2VersionnameStddevPopOrderBy(
      {this.id, this.language_id, this.version_id});

  @override
  factory InputpokemonV2VersionnameStddevPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameStddevPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameStddevPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameStddevPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameStddevSampOrderBy {
  InputpokemonV2VersionnameStddevSampOrderBy(
      {this.id, this.language_id, this.version_id});

  @override
  factory InputpokemonV2VersionnameStddevSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameStddevSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameStddevSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameStddevSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameSumOrderBy {
  InputpokemonV2VersionnameSumOrderBy(
      {this.id, this.language_id, this.version_id});

  @override
  factory InputpokemonV2VersionnameSumOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameSumOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameSumOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameSumOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameVarPopOrderBy {
  InputpokemonV2VersionnameVarPopOrderBy(
      {this.id, this.language_id, this.version_id});

  @override
  factory InputpokemonV2VersionnameVarPopOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameVarPopOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameVarPopOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameVarPopOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameVarSampOrderBy {
  InputpokemonV2VersionnameVarSampOrderBy(
      {this.id, this.language_id, this.version_id});

  @override
  factory InputpokemonV2VersionnameVarSampOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameVarSampOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameVarSampOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameVarSampOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputpokemonV2VersionnameVarianceOrderBy {
  InputpokemonV2VersionnameVarianceOrderBy(
      {this.id, this.language_id, this.version_id});

  @override
  factory InputpokemonV2VersionnameVarianceOrderBy.fromJson(
          Map<String, dynamic> json) =>
      _$InputpokemonV2VersionnameVarianceOrderByFromJson(json);

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? language_id;

  @JsonKey(unknownEnumValue: EnumorderBy.$unknown)
  final EnumorderBy? version_id;

  Map<String, dynamic> toJson() =>
      _$InputpokemonV2VersionnameVarianceOrderByToJson(this);
  int get hashCode {
    final l$id = id;
    final l$language_id = language_id;
    final l$version_id = version_id;
    return Object.hashAll([l$id, l$language_id, l$version_id]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputpokemonV2VersionnameVarianceOrderBy) ||
        runtimeType != other.runtimeType) return false;
    final l$id = id;
    final lOther$id = other.id;
    if (l$id != lOther$id) return false;
    final l$language_id = language_id;
    final lOther$language_id = other.language_id;
    if (l$language_id != lOther$language_id) return false;
    final l$version_id = version_id;
    final lOther$version_id = other.version_id;
    if (l$version_id != lOther$version_id) return false;
    return true;
  }
}

@JsonSerializable(explicitToJson: true)
class InputStringComparisonExp {
  InputStringComparisonExp(
      {this.$_eq,
      this.$_gt,
      this.$_gte,
      this.$_ilike,
      this.$_in,
      this.$_iregex,
      this.$_is_null,
      this.$_like,
      this.$_lt,
      this.$_lte,
      this.$_neq,
      this.$_nilike,
      this.$_nin,
      this.$_niregex,
      this.$_nlike,
      this.$_nregex,
      this.$_nsimilar,
      this.$_regex,
      this.$_similar});

  @override
  factory InputStringComparisonExp.fromJson(Map<String, dynamic> json) =>
      _$InputStringComparisonExpFromJson(json);

  @JsonKey(name: '_eq')
  final String? $_eq;

  @JsonKey(name: '_gt')
  final String? $_gt;

  @JsonKey(name: '_gte')
  final String? $_gte;

  @JsonKey(name: '_ilike')
  final String? $_ilike;

  @JsonKey(name: '_in')
  final List<String>? $_in;

  @JsonKey(name: '_iregex')
  final String? $_iregex;

  @JsonKey(name: '_is_null')
  final bool? $_is_null;

  @JsonKey(name: '_like')
  final String? $_like;

  @JsonKey(name: '_lt')
  final String? $_lt;

  @JsonKey(name: '_lte')
  final String? $_lte;

  @JsonKey(name: '_neq')
  final String? $_neq;

  @JsonKey(name: '_nilike')
  final String? $_nilike;

  @JsonKey(name: '_nin')
  final List<String>? $_nin;

  @JsonKey(name: '_niregex')
  final String? $_niregex;

  @JsonKey(name: '_nlike')
  final String? $_nlike;

  @JsonKey(name: '_nregex')
  final String? $_nregex;

  @JsonKey(name: '_nsimilar')
  final String? $_nsimilar;

  @JsonKey(name: '_regex')
  final String? $_regex;

  @JsonKey(name: '_similar')
  final String? $_similar;

  Map<String, dynamic> toJson() => _$InputStringComparisonExpToJson(this);
  int get hashCode {
    final l$$_eq = $_eq;
    final l$$_gt = $_gt;
    final l$$_gte = $_gte;
    final l$$_ilike = $_ilike;
    final l$$_in = $_in;
    final l$$_iregex = $_iregex;
    final l$$_is_null = $_is_null;
    final l$$_like = $_like;
    final l$$_lt = $_lt;
    final l$$_lte = $_lte;
    final l$$_neq = $_neq;
    final l$$_nilike = $_nilike;
    final l$$_nin = $_nin;
    final l$$_niregex = $_niregex;
    final l$$_nlike = $_nlike;
    final l$$_nregex = $_nregex;
    final l$$_nsimilar = $_nsimilar;
    final l$$_regex = $_regex;
    final l$$_similar = $_similar;
    return Object.hashAll([
      l$$_eq,
      l$$_gt,
      l$$_gte,
      l$$_ilike,
      l$$_in == null ? null : Object.hashAll(l$$_in.map((v) => v)),
      l$$_iregex,
      l$$_is_null,
      l$$_like,
      l$$_lt,
      l$$_lte,
      l$$_neq,
      l$$_nilike,
      l$$_nin == null ? null : Object.hashAll(l$$_nin.map((v) => v)),
      l$$_niregex,
      l$$_nlike,
      l$$_nregex,
      l$$_nsimilar,
      l$$_regex,
      l$$_similar
    ]);
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (!(other is InputStringComparisonExp) ||
        runtimeType != other.runtimeType) return false;
    final l$$_eq = $_eq;
    final lOther$$_eq = other.$_eq;
    if (l$$_eq != lOther$$_eq) return false;
    final l$$_gt = $_gt;
    final lOther$$_gt = other.$_gt;
    if (l$$_gt != lOther$$_gt) return false;
    final l$$_gte = $_gte;
    final lOther$$_gte = other.$_gte;
    if (l$$_gte != lOther$$_gte) return false;
    final l$$_ilike = $_ilike;
    final lOther$$_ilike = other.$_ilike;
    if (l$$_ilike != lOther$$_ilike) return false;
    final l$$_in = $_in;
    final lOther$$_in = other.$_in;
    if (l$$_in != null && lOther$$_in != null) {
      if (l$$_in.length != lOther$$_in.length) return false;
      for (int i = 0; i < l$$_in.length; i++) {
        final l$$_in$entry = l$$_in[i];
        final lOther$$_in$entry = lOther$$_in[i];
        if (l$$_in$entry != lOther$$_in$entry) return false;
      }
    } else if (l$$_in != lOther$$_in) {
      return false;
    }

    final l$$_iregex = $_iregex;
    final lOther$$_iregex = other.$_iregex;
    if (l$$_iregex != lOther$$_iregex) return false;
    final l$$_is_null = $_is_null;
    final lOther$$_is_null = other.$_is_null;
    if (l$$_is_null != lOther$$_is_null) return false;
    final l$$_like = $_like;
    final lOther$$_like = other.$_like;
    if (l$$_like != lOther$$_like) return false;
    final l$$_lt = $_lt;
    final lOther$$_lt = other.$_lt;
    if (l$$_lt != lOther$$_lt) return false;
    final l$$_lte = $_lte;
    final lOther$$_lte = other.$_lte;
    if (l$$_lte != lOther$$_lte) return false;
    final l$$_neq = $_neq;
    final lOther$$_neq = other.$_neq;
    if (l$$_neq != lOther$$_neq) return false;
    final l$$_nilike = $_nilike;
    final lOther$$_nilike = other.$_nilike;
    if (l$$_nilike != lOther$$_nilike) return false;
    final l$$_nin = $_nin;
    final lOther$$_nin = other.$_nin;
    if (l$$_nin != null && lOther$$_nin != null) {
      if (l$$_nin.length != lOther$$_nin.length) return false;
      for (int i = 0; i < l$$_nin.length; i++) {
        final l$$_nin$entry = l$$_nin[i];
        final lOther$$_nin$entry = lOther$$_nin[i];
        if (l$$_nin$entry != lOther$$_nin$entry) return false;
      }
    } else if (l$$_nin != lOther$$_nin) {
      return false;
    }

    final l$$_niregex = $_niregex;
    final lOther$$_niregex = other.$_niregex;
    if (l$$_niregex != lOther$$_niregex) return false;
    final l$$_nlike = $_nlike;
    final lOther$$_nlike = other.$_nlike;
    if (l$$_nlike != lOther$$_nlike) return false;
    final l$$_nregex = $_nregex;
    final lOther$$_nregex = other.$_nregex;
    if (l$$_nregex != lOther$$_nregex) return false;
    final l$$_nsimilar = $_nsimilar;
    final lOther$$_nsimilar = other.$_nsimilar;
    if (l$$_nsimilar != lOther$$_nsimilar) return false;
    final l$$_regex = $_regex;
    final lOther$$_regex = other.$_regex;
    if (l$$_regex != lOther$$_regex) return false;
    final l$$_similar = $_similar;
    final lOther$$_similar = other.$_similar;
    if (l$$_similar != lOther$$_similar) return false;
    return true;
  }
}

enum EnumorderBy {
  @JsonValue('asc')
  asc,
  @JsonValue('asc_nulls_first')
  ascNullsFirst,
  @JsonValue('asc_nulls_last')
  ascNullsLast,
  @JsonValue('desc')
  desc,
  @JsonValue('desc_nulls_first')
  descNullsFirst,
  @JsonValue('desc_nulls_last')
  descNullsLast,
  $unknown
}

enum EnumpokemonV2AbilitySelectColumn {
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('is_main_series')
  isMainSeries,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2AbilitychangeSelectColumn {
  @JsonValue('ability_id')
  abilityId,
  @JsonValue('id')
  id,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2AbilitychangeeffecttextSelectColumn {
  @JsonValue('ability_change_id')
  abilityChangeId,
  @JsonValue('effect')
  effect,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  $unknown
}

enum EnumpokemonV2AbilityeffecttextSelectColumn {
  @JsonValue('ability_id')
  abilityId,
  @JsonValue('effect')
  effect,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('short_effect')
  shortEffect,
  $unknown
}

enum EnumpokemonV2AbilityflavortextSelectColumn {
  @JsonValue('ability_id')
  abilityId,
  @JsonValue('flavor_text')
  flavorText,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2AbilitynameSelectColumn {
  @JsonValue('ability_id')
  abilityId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2BerrySelectColumn {
  @JsonValue('berry_firmness_id')
  berryFirmnessId,
  @JsonValue('growth_time')
  growthTime,
  @JsonValue('id')
  id,
  @JsonValue('item_id')
  itemId,
  @JsonValue('max_harvest')
  maxHarvest,
  @JsonValue('name')
  name,
  @JsonValue('natural_gift_power')
  naturalGiftPower,
  @JsonValue('natural_gift_type_id')
  naturalGiftTypeId,
  @JsonValue('size')
  size,
  @JsonValue('smoothness')
  smoothness,
  @JsonValue('soil_dryness')
  soilDryness,
  $unknown
}

enum EnumpokemonV2BerryfirmnessSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2BerryfirmnessnameSelectColumn {
  @JsonValue('berry_firmness_id')
  berryFirmnessId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2BerryflavorSelectColumn {
  @JsonValue('contest_type_id')
  contestTypeId,
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2BerryflavormapSelectColumn {
  @JsonValue('berry_flavor_id')
  berryFlavorId,
  @JsonValue('berry_id')
  berryId,
  @JsonValue('id')
  id,
  @JsonValue('potency')
  potency,
  $unknown
}

enum EnumpokemonV2BerryflavornameSelectColumn {
  @JsonValue('berry_flavor_id')
  berryFlavorId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2CharacteristicSelectColumn {
  @JsonValue('gene_mod_5')
  geneMod5,
  @JsonValue('id')
  id,
  @JsonValue('stat_id')
  statId,
  $unknown
}

enum EnumpokemonV2CharacteristicdescriptionSelectColumn {
  @JsonValue('characteristic_id')
  characteristicId,
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  $unknown
}

enum EnumpokemonV2ContestcomboSelectColumn {
  @JsonValue('first_move_id')
  firstMoveId,
  @JsonValue('id')
  id,
  @JsonValue('second_move_id')
  secondMoveId,
  $unknown
}

enum EnumpokemonV2ContesteffectSelectColumn {
  @JsonValue('appeal')
  appeal,
  @JsonValue('id')
  id,
  @JsonValue('jam')
  jam,
  $unknown
}

enum EnumpokemonV2ContesteffecteffecttextSelectColumn {
  @JsonValue('contest_effect_id')
  contestEffectId,
  @JsonValue('effect')
  effect,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  $unknown
}

enum EnumpokemonV2ContesteffectflavortextSelectColumn {
  @JsonValue('contest_effect_id')
  contestEffectId,
  @JsonValue('flavor_text')
  flavorText,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  $unknown
}

enum EnumpokemonV2ContesttypeSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ContesttypenameSelectColumn {
  @JsonValue('color')
  color,
  @JsonValue('contest_type_id')
  contestTypeId,
  @JsonValue('flavor')
  flavor,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EgggroupSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EgggroupnameSelectColumn {
  @JsonValue('egg_group_id')
  eggGroupId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EncounterSelectColumn {
  @JsonValue('encounter_slot_id')
  encounterSlotId,
  @JsonValue('id')
  id,
  @JsonValue('location_area_id')
  locationAreaId,
  @JsonValue('max_level')
  maxLevel,
  @JsonValue('min_level')
  minLevel,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('version_id')
  versionId,
  $unknown
}

enum EnumpokemonV2EncounterconditionSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EncounterconditionnameSelectColumn {
  @JsonValue('encounter_condition_id')
  encounterConditionId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EncounterconditionvalueSelectColumn {
  @JsonValue('encounter_condition_id')
  encounterConditionId,
  @JsonValue('id')
  id,
  @JsonValue('is_default')
  isDefault,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EncounterconditionvaluemapSelectColumn {
  @JsonValue('encounter_condition_value_id')
  encounterConditionValueId,
  @JsonValue('encounter_id')
  encounterId,
  @JsonValue('id')
  id,
  $unknown
}

enum EnumpokemonV2EncounterconditionvaluenameSelectColumn {
  @JsonValue('encounter_condition_value_id')
  encounterConditionValueId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EncountermethodSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  @JsonValue('order')
  order,
  $unknown
}

enum EnumpokemonV2EncountermethodnameSelectColumn {
  @JsonValue('encounter_method_id')
  encounterMethodId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EncounterslotSelectColumn {
  @JsonValue('encounter_method_id')
  encounterMethodId,
  @JsonValue('id')
  id,
  @JsonValue('rarity')
  rarity,
  @JsonValue('slot')
  slot,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2EvolutionchainSelectColumn {
  @JsonValue('baby_trigger_item_id')
  babyTriggerItemId,
  @JsonValue('id')
  id,
  $unknown
}

enum EnumpokemonV2EvolutiontriggerSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2EvolutiontriggernameSelectColumn {
  @JsonValue('evolution_trigger_id')
  evolutionTriggerId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ExperienceSelectColumn {
  @JsonValue('experience')
  experience,
  @JsonValue('growth_rate_id')
  growthRateId,
  @JsonValue('id')
  id,
  @JsonValue('level')
  level,
  $unknown
}

enum EnumpokemonV2GenderSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2GenerationSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  @JsonValue('region_id')
  regionId,
  $unknown
}

enum EnumpokemonV2GenerationnameSelectColumn {
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2GrowthrateSelectColumn {
  @JsonValue('formula')
  formula,
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2GrowthratedescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('growth_rate_id')
  growthRateId,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  $unknown
}

enum EnumpokemonV2ItemSelectColumn {
  @JsonValue('cost')
  cost,
  @JsonValue('fling_power')
  flingPower,
  @JsonValue('id')
  id,
  @JsonValue('item_category_id')
  itemCategoryId,
  @JsonValue('item_fling_effect_id')
  itemFlingEffectId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItemattributeSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItemattributedescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('item_attribute_id')
  itemAttributeId,
  @JsonValue('language_id')
  languageId,
  $unknown
}

enum EnumpokemonV2ItemattributemapSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('item_attribute_id')
  itemAttributeId,
  @JsonValue('item_id')
  itemId,
  $unknown
}

enum EnumpokemonV2ItemattributenameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('item_attribute_id')
  itemAttributeId,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItemcategorySelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('item_pocket_id')
  itemPocketId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItemcategorynameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('item_category_id')
  itemCategoryId,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItemeffecttextSelectColumn {
  @JsonValue('effect')
  effect,
  @JsonValue('id')
  id,
  @JsonValue('item_id')
  itemId,
  @JsonValue('language_id')
  languageId,
  @JsonValue('short_effect')
  shortEffect,
  $unknown
}

enum EnumpokemonV2ItemflavortextSelectColumn {
  @JsonValue('flavor_text')
  flavorText,
  @JsonValue('id')
  id,
  @JsonValue('item_id')
  itemId,
  @JsonValue('language_id')
  languageId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2ItemflingeffectSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItemflingeffecteffecttextSelectColumn {
  @JsonValue('effect')
  effect,
  @JsonValue('id')
  id,
  @JsonValue('item_fling_effect_id')
  itemFlingEffectId,
  @JsonValue('language_id')
  languageId,
  $unknown
}

enum EnumpokemonV2ItemgameindexSelectColumn {
  @JsonValue('game_index')
  gameIndex,
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('item_id')
  itemId,
  $unknown
}

enum EnumpokemonV2ItemnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('item_id')
  itemId,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItempocketSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItempocketnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('item_pocket_id')
  itemPocketId,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2ItemspritesSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('item_id')
  itemId,
  @JsonValue('sprites')
  sprites,
  $unknown
}

enum EnumpokemonV2LanguageSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('iso3166')
  iso3166,
  @JsonValue('iso639')
  iso639,
  @JsonValue('name')
  name,
  @JsonValue('official')
  official,
  @JsonValue('order')
  order,
  $unknown
}

enum EnumpokemonV2LanguagenameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('local_language_id')
  localLanguageId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2LocationSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  @JsonValue('region_id')
  regionId,
  $unknown
}

enum EnumpokemonV2LocationareaSelectColumn {
  @JsonValue('game_index')
  gameIndex,
  @JsonValue('id')
  id,
  @JsonValue('location_id')
  locationId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2LocationareaencounterrateSelectColumn {
  @JsonValue('encounter_method_id')
  encounterMethodId,
  @JsonValue('id')
  id,
  @JsonValue('location_area_id')
  locationAreaId,
  @JsonValue('rate')
  rate,
  @JsonValue('version_id')
  versionId,
  $unknown
}

enum EnumpokemonV2LocationareanameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('location_area_id')
  locationAreaId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2LocationgameindexSelectColumn {
  @JsonValue('game_index')
  gameIndex,
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('location_id')
  locationId,
  $unknown
}

enum EnumpokemonV2LocationnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('location_id')
  locationId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MachineSelectColumn {
  @JsonValue('growth_rate_id')
  growthRateId,
  @JsonValue('id')
  id,
  @JsonValue('item_id')
  itemId,
  @JsonValue('machine_number')
  machineNumber,
  @JsonValue('move_id')
  moveId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2MoveSelectColumn {
  @JsonValue('accuracy')
  accuracy,
  @JsonValue('contest_effect_id')
  contestEffectId,
  @JsonValue('contest_type_id')
  contestTypeId,
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('move_damage_class_id')
  moveDamageClassId,
  @JsonValue('move_effect_chance')
  moveEffectChance,
  @JsonValue('move_effect_id')
  moveEffectId,
  @JsonValue('move_target_id')
  moveTargetId,
  @JsonValue('name')
  name,
  @JsonValue('power')
  power,
  @JsonValue('pp')
  pp,
  @JsonValue('priority')
  priority,
  @JsonValue('super_contest_effect_id')
  superContestEffectId,
  @JsonValue('type_id')
  typeId,
  $unknown
}

enum EnumpokemonV2MoveattributeSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MoveattributedescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_attribute_id')
  moveAttributeId,
  $unknown
}

enum EnumpokemonV2MoveattributemapSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('move_attribute_id')
  moveAttributeId,
  @JsonValue('move_id')
  moveId,
  $unknown
}

enum EnumpokemonV2MoveattributenameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_attribute_id')
  moveAttributeId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovebattlestyleSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovebattlestylenameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_battle_style_id')
  moveBattleStyleId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovechangeSelectColumn {
  @JsonValue('accuracy')
  accuracy,
  @JsonValue('id')
  id,
  @JsonValue('move_effect_chance')
  moveEffectChance,
  @JsonValue('move_effect_id')
  moveEffectId,
  @JsonValue('move_id')
  moveId,
  @JsonValue('power')
  power,
  @JsonValue('pp')
  pp,
  @JsonValue('type_id')
  typeId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2MovedamageclassSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovedamageclassdescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_damage_class_id')
  moveDamageClassId,
  $unknown
}

enum EnumpokemonV2MovedamageclassnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_damage_class_id')
  moveDamageClassId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MoveeffectSelectColumn {
  @JsonValue('id')
  id,
  $unknown
}

enum EnumpokemonV2MoveeffectchangeSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('move_effect_id')
  moveEffectId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2MoveeffectchangeeffecttextSelectColumn {
  @JsonValue('effect')
  effect,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_effect_change_id')
  moveEffectChangeId,
  $unknown
}

enum EnumpokemonV2MoveeffecteffecttextSelectColumn {
  @JsonValue('effect')
  effect,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_effect_id')
  moveEffectId,
  @JsonValue('short_effect')
  shortEffect,
  $unknown
}

enum EnumpokemonV2MoveflavortextSelectColumn {
  @JsonValue('flavor_text')
  flavorText,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_id')
  moveId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2MovelearnmethodSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovelearnmethoddescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_learn_method_id')
  moveLearnMethodId,
  $unknown
}

enum EnumpokemonV2MovelearnmethodnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_learn_method_id')
  moveLearnMethodId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovemetaSelectColumn {
  @JsonValue('ailment_chance')
  ailmentChance,
  @JsonValue('crit_rate')
  critRate,
  @JsonValue('drain')
  drain,
  @JsonValue('flinch_chance')
  flinchChance,
  @JsonValue('healing')
  healing,
  @JsonValue('id')
  id,
  @JsonValue('max_hits')
  maxHits,
  @JsonValue('max_turns')
  maxTurns,
  @JsonValue('min_hits')
  minHits,
  @JsonValue('min_turns')
  minTurns,
  @JsonValue('move_id')
  moveId,
  @JsonValue('move_meta_ailment_id')
  moveMetaAilmentId,
  @JsonValue('move_meta_category_id')
  moveMetaCategoryId,
  @JsonValue('stat_chance')
  statChance,
  $unknown
}

enum EnumpokemonV2MovemetaailmentSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovemetaailmentnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_meta_ailment_id')
  moveMetaAilmentId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovemetacategorySelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovemetacategorydescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_meta_category_id')
  moveMetaCategoryId,
  $unknown
}

enum EnumpokemonV2MovemetastatchangeSelectColumn {
  @JsonValue('change')
  change,
  @JsonValue('id')
  id,
  @JsonValue('move_id')
  moveId,
  @JsonValue('stat_id')
  statId,
  $unknown
}

enum EnumpokemonV2MovenameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_id')
  moveId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovetargetSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2MovetargetdescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_target_id')
  moveTargetId,
  $unknown
}

enum EnumpokemonV2MovetargetnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('move_target_id')
  moveTargetId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2NatureSelectColumn {
  @JsonValue('decreased_stat_id')
  decreasedStatId,
  @JsonValue('game_index')
  gameIndex,
  @JsonValue('hates_flavor_id')
  hatesFlavorId,
  @JsonValue('id')
  id,
  @JsonValue('increased_stat_id')
  increasedStatId,
  @JsonValue('likes_flavor_id')
  likesFlavorId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2NaturebattlestylepreferenceSelectColumn {
  @JsonValue('high_hp_preference')
  highHpPreference,
  @JsonValue('id')
  id,
  @JsonValue('low_hp_preference')
  lowHpPreference,
  @JsonValue('move_battle_style_id')
  moveBattleStyleId,
  @JsonValue('nature_id')
  natureId,
  $unknown
}

enum EnumpokemonV2NaturenameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('nature_id')
  natureId,
  $unknown
}

enum EnumpokemonV2NaturepokeathlonstatSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('max_change')
  maxChange,
  @JsonValue('nature_id')
  natureId,
  @JsonValue('pokeathlon_stat_id')
  pokeathlonStatId,
  $unknown
}

enum EnumpokemonV2PalparkSelectColumn {
  @JsonValue('base_score')
  baseScore,
  @JsonValue('id')
  id,
  @JsonValue('pal_park_area_id')
  palParkAreaId,
  @JsonValue('pokemon_species_id')
  pokemonSpeciesId,
  @JsonValue('rate')
  rate,
  $unknown
}

enum EnumpokemonV2PalparkareaSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2PalparkareanameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('pal_park_area_id')
  palParkAreaId,
  $unknown
}

enum EnumpokemonV2PokeathlonstatSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2PokeathlonstatnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('pokeathlon_stat_id')
  pokeathlonStatId,
  $unknown
}

enum EnumpokemonV2PokedexSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('is_main_series')
  isMainSeries,
  @JsonValue('name')
  name,
  @JsonValue('region_id')
  regionId,
  $unknown
}

enum EnumpokemonV2PokedexdescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('pokedex_id')
  pokedexId,
  $unknown
}

enum EnumpokemonV2PokedexnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('pokedex_id')
  pokedexId,
  $unknown
}

enum EnumpokemonV2PokedexversiongroupSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('pokedex_id')
  pokedexId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2PokemonSelectColumn {
  @JsonValue('base_experience')
  baseExperience,
  @JsonValue('height')
  height,
  @JsonValue('id')
  id,
  @JsonValue('is_default')
  isDefault,
  @JsonValue('name')
  name,
  @JsonValue('order')
  order,
  @JsonValue('pokemon_species_id')
  pokemonSpeciesId,
  @JsonValue('weight')
  weight,
  $unknown
}

enum EnumpokemonV2PokemonabilitySelectColumn {
  @JsonValue('ability_id')
  abilityId,
  @JsonValue('id')
  id,
  @JsonValue('is_hidden')
  isHidden,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('slot')
  slot,
  $unknown
}

enum EnumpokemonV2PokemoncolorSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2PokemoncolornameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('pokemon_color_id')
  pokemonColorId,
  $unknown
}

enum EnumpokemonV2PokemondexnumberSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('pokedex_id')
  pokedexId,
  @JsonValue('pokedex_number')
  pokedexNumber,
  @JsonValue('pokemon_species_id')
  pokemonSpeciesId,
  $unknown
}

enum EnumpokemonV2PokemonegggroupSelectColumn {
  @JsonValue('egg_group_id')
  eggGroupId,
  @JsonValue('id')
  id,
  @JsonValue('pokemon_species_id')
  pokemonSpeciesId,
  $unknown
}

enum EnumpokemonV2PokemonevolutionSelectColumn {
  @JsonValue('evolution_item_id')
  evolutionItemId,
  @JsonValue('evolution_trigger_id')
  evolutionTriggerId,
  @JsonValue('evolved_species_id')
  evolvedSpeciesId,
  @JsonValue('gender_id')
  genderId,
  @JsonValue('held_item_id')
  heldItemId,
  @JsonValue('id')
  id,
  @JsonValue('known_move_id')
  knownMoveId,
  @JsonValue('known_move_type_id')
  knownMoveTypeId,
  @JsonValue('location_id')
  locationId,
  @JsonValue('min_affection')
  minAffection,
  @JsonValue('min_beauty')
  minBeauty,
  @JsonValue('min_happiness')
  minHappiness,
  @JsonValue('min_level')
  minLevel,
  @JsonValue('needs_overworld_rain')
  needsOverworldRain,
  @JsonValue('party_species_id')
  partySpeciesId,
  @JsonValue('party_type_id')
  partyTypeId,
  @JsonValue('relative_physical_stats')
  relativePhysicalStats,
  @JsonValue('time_of_day')
  timeOfDay,
  @JsonValue('trade_species_id')
  tradeSpeciesId,
  @JsonValue('turn_upside_down')
  turnUpsideDown,
  $unknown
}

enum EnumpokemonV2PokemonformSelectColumn {
  @JsonValue('form_name')
  formName,
  @JsonValue('form_order')
  formOrder,
  @JsonValue('id')
  id,
  @JsonValue('is_battle_only')
  isBattleOnly,
  @JsonValue('is_default')
  isDefault,
  @JsonValue('is_mega')
  isMega,
  @JsonValue('name')
  name,
  @JsonValue('order')
  order,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2PokemonformgenerationSelectColumn {
  @JsonValue('game_index')
  gameIndex,
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('pokemon_form_id')
  pokemonFormId,
  $unknown
}

enum EnumpokemonV2PokemonformnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('pokemon_form_id')
  pokemonFormId,
  @JsonValue('pokemon_name')
  pokemonName,
  $unknown
}

enum EnumpokemonV2PokemonformspritesSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('pokemon_form_id')
  pokemonFormId,
  @JsonValue('sprites')
  sprites,
  $unknown
}

enum EnumpokemonV2PokemonformtypeSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('pokemon_form_id')
  pokemonFormId,
  @JsonValue('slot')
  slot,
  @JsonValue('type_id')
  typeId,
  $unknown
}

enum EnumpokemonV2PokemongameindexSelectColumn {
  @JsonValue('game_index')
  gameIndex,
  @JsonValue('id')
  id,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('version_id')
  versionId,
  $unknown
}

enum EnumpokemonV2PokemonhabitatSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2PokemonhabitatnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('pokemon_habitat_id')
  pokemonHabitatId,
  $unknown
}

enum EnumpokemonV2PokemonitemSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('item_id')
  itemId,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('rarity')
  rarity,
  @JsonValue('version_id')
  versionId,
  $unknown
}

enum EnumpokemonV2PokemonmoveSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('level')
  level,
  @JsonValue('move_id')
  moveId,
  @JsonValue('move_learn_method_id')
  moveLearnMethodId,
  @JsonValue('order')
  order,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2PokemonshapeSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2PokemonshapenameSelectColumn {
  @JsonValue('awesome_name')
  awesomeName,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('pokemon_shape_id')
  pokemonShapeId,
  $unknown
}

enum EnumpokemonV2PokemonspeciesSelectColumn {
  @JsonValue('base_happiness')
  baseHappiness,
  @JsonValue('capture_rate')
  captureRate,
  @JsonValue('evolution_chain_id')
  evolutionChainId,
  @JsonValue('evolves_from_species_id')
  evolvesFromSpeciesId,
  @JsonValue('forms_switchable')
  formsSwitchable,
  @JsonValue('gender_rate')
  genderRate,
  @JsonValue('generation_id')
  generationId,
  @JsonValue('growth_rate_id')
  growthRateId,
  @JsonValue('has_gender_differences')
  hasGenderDifferences,
  @JsonValue('hatch_counter')
  hatchCounter,
  @JsonValue('id')
  id,
  @JsonValue('is_baby')
  isBaby,
  @JsonValue('is_legendary')
  isLegendary,
  @JsonValue('is_mythical')
  isMythical,
  @JsonValue('name')
  name,
  @JsonValue('order')
  order,
  @JsonValue('pokemon_color_id')
  pokemonColorId,
  @JsonValue('pokemon_habitat_id')
  pokemonHabitatId,
  @JsonValue('pokemon_shape_id')
  pokemonShapeId,
  $unknown
}

enum EnumpokemonV2PokemonspeciesdescriptionSelectColumn {
  @JsonValue('description')
  description,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('pokemon_species_id')
  pokemonSpeciesId,
  $unknown
}

enum EnumpokemonV2PokemonspeciesflavortextSelectColumn {
  @JsonValue('flavor_text')
  flavorText,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('pokemon_species_id')
  pokemonSpeciesId,
  @JsonValue('version_id')
  versionId,
  $unknown
}

enum EnumpokemonV2PokemonspeciesnameSelectColumn {
  @JsonValue('genus')
  genus,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('pokemon_species_id')
  pokemonSpeciesId,
  $unknown
}

enum EnumpokemonV2PokemonspritesSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('sprites')
  sprites,
  $unknown
}

enum EnumpokemonV2PokemonstatSelectColumn {
  @JsonValue('base_stat')
  baseStat,
  @JsonValue('effort')
  effort,
  @JsonValue('id')
  id,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('stat_id')
  statId,
  $unknown
}

enum EnumpokemonV2PokemontypeSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('slot')
  slot,
  @JsonValue('type_id')
  typeId,
  $unknown
}

enum EnumpokemonV2PokemontypepastSelectColumn {
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('pokemon_id')
  pokemonId,
  @JsonValue('slot')
  slot,
  @JsonValue('type_id')
  typeId,
  $unknown
}

enum EnumpokemonV2RegionSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2RegionnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('region_id')
  regionId,
  $unknown
}

enum EnumpokemonV2StatSelectColumn {
  @JsonValue('game_index')
  gameIndex,
  @JsonValue('id')
  id,
  @JsonValue('is_battle_only')
  isBattleOnly,
  @JsonValue('move_damage_class_id')
  moveDamageClassId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2StatnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('stat_id')
  statId,
  $unknown
}

enum EnumpokemonV2SupercontestcomboSelectColumn {
  @JsonValue('first_move_id')
  firstMoveId,
  @JsonValue('id')
  id,
  @JsonValue('second_move_id')
  secondMoveId,
  $unknown
}

enum EnumpokemonV2SupercontesteffectSelectColumn {
  @JsonValue('appeal')
  appeal,
  @JsonValue('id')
  id,
  $unknown
}

enum EnumpokemonV2SupercontesteffectflavortextSelectColumn {
  @JsonValue('flavor_text')
  flavorText,
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('super_contest_effect_id')
  superContestEffectId,
  $unknown
}

enum EnumpokemonV2TypeSelectColumn {
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('move_damage_class_id')
  moveDamageClassId,
  @JsonValue('name')
  name,
  $unknown
}

enum EnumpokemonV2TypeefficacySelectColumn {
  @JsonValue('damage_factor')
  damageFactor,
  @JsonValue('damage_type_id')
  damageTypeId,
  @JsonValue('id')
  id,
  @JsonValue('target_type_id')
  targetTypeId,
  $unknown
}

enum EnumpokemonV2TypegameindexSelectColumn {
  @JsonValue('game_index')
  gameIndex,
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('type_id')
  typeId,
  $unknown
}

enum EnumpokemonV2TypenameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('type_id')
  typeId,
  $unknown
}

enum EnumpokemonV2VersionSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2VersiongroupSelectColumn {
  @JsonValue('generation_id')
  generationId,
  @JsonValue('id')
  id,
  @JsonValue('name')
  name,
  @JsonValue('order')
  order,
  $unknown
}

enum EnumpokemonV2VersiongroupmovelearnmethodSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('move_learn_method_id')
  moveLearnMethodId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2VersiongroupregionSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('region_id')
  regionId,
  @JsonValue('version_group_id')
  versionGroupId,
  $unknown
}

enum EnumpokemonV2VersionnameSelectColumn {
  @JsonValue('id')
  id,
  @JsonValue('language_id')
  languageId,
  @JsonValue('name')
  name,
  @JsonValue('version_id')
  versionId,
  $unknown
}

const POSSIBLE_TYPES_MAP = const {};
